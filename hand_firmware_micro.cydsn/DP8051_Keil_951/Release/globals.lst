C51 COMPILER V9.51   GLOBALS                                                               02/09/2021 12:48:43 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE GLOBALS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Release\globals.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -globals.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB DF(NDEBUG) WL(2) PR(.\DP8051_Keil_
                    -951\Release/globals.lst) CD OT(8,SPEED) OJ(.\DP8051_Keil_951\Release\globals.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         globals.c
  37          *
  38          * \brief        Global variables.
  39          * \date         October 01, 2017
  40          * \author       _Centro "E.Piaggio"_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          //=================================================================     includes
  46          #include <globals.h>
  47          
  48          //=============================================      global variables definition
  49          
  50          
  51          struct st_ref       g_ref, g_refNew, g_refOld;  // Motor reference variables.
  52          struct st_meas      g_meas, g_measOld;          // Measurements.
C51 COMPILER V9.51   GLOBALS                                                               02/09/2021 12:48:43 PAGE 2   

  53          struct st_data      g_rx;                       // Income data.
  54          struct st_mem       g_mem, c_mem;               // Memory variables.
  55          struct st_calib     calib;                      // Calibration variables.
  56          
  57          float tau_feedback;                                                             // Torque feedback.
  58          
  59          // Timer value for debug field
  60          uint32 timer_value;
  61          uint32 timer_value0;
  62          float cycle_time;
  63          
  64          // Device Data
  65          
  66          int32   dev_tension;                        /*!< Power supply tension.*/
  67          uint8   dev_pwm_limit;                      /*!< Device pwm limit. It may change during execution.*/
  68          uint8   dev_pwm_sat = 100;                  /*!< Device pwm saturation. By default the saturation value mu
             -st not exceed 100.*/
  69          int32   dev_tension_f;                      /*!< Filtered power supply tension.*/
  70          int32   pow_tension;                        /*!< Computed power supply tension.*/
  71          
  72          counter_status CYDATA cycles_status = NONE;     /*!< Cycles counter state machine status.*/
  73          emg_status CYDATA emg_1_status = RESET;         /*!< First EMG sensor status.*/
  74          emg_status CYDATA emg_2_status = RESET;         /*!< Second EMG sensor status.*/  
  75          
  76          // Bit Flag
  77          
  78          CYBIT reset_last_value_flag;                /*!< This flag is set when the encoders last values must be re
             -setted.*/
  79          CYBIT tension_valid;                        /*!< Tension validation bit.*/
  80          CYBIT interrupt_flag = FALSE;               /*!< Interrupt flag enabler.*/
  81          CYBIT watchdog_flag = FALSE;                            /*!< Watchdog flag enabler.*/
  82          CYBIT cycles_interrupt_flag = FALSE;        /*!< Cycles timer interrupt flag enabler.*/
  83          CYBIT can_write = TRUE;                     /*!< Write to EEPROM flag.*/
  84          uint8 rest_enabled;                         /*!< Rest position flag.*/
  85          uint8 forced_open;                          /*!< Forced open flag (used in position with rest position con
             -trol).*/       
  86          
  87          // DMA Buffer
  88          
  89          int16 ADC_buf[4];                                                       /*! ADC measurements buffer.*/
  90          
  91          // PWM value
  92          int8 pwm_sign;                                                          /*!< Sign of pwm driven. Used to obtain current sign.*/
  93                                      
  94          int32 rest_pos_curr_ref;                                        /*!< Rest position current reference.*/
  95          
  96          /* END OF FILE */
C51 COMPILER V9.51   GLOBALS                                                               02/09/2021 12:48:43 PAGE 3   

ASSEMBLY LISTING OF GENERATED OBJECT CODE




MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    893    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
