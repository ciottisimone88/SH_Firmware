C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE INTERRUPTIONS
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\interruptions.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -interruptions.c NOIV LARGE MODDP2 OMF2 VB(1) NOIP INCDIR(.,Generated_Source\PSoC3) FF(3) DB WL(2) PR(.\DP8051_Keil_951\D
                    -ebug/interruptions.lst) CD OT(2,SIZE) OJ(.\DP8051_Keil_951\Debug\interruptions.obj)

line level    source

   1          // ----------------------------------------------------------------------------
   2          // BSD 3-Clause License
   3          
   4          // Copyright (c) 2016, qbrobotics
   5          // Copyright (c) 2017, Centro "E.Piaggio"
   6          // All rights reserved.
   7          
   8          // Redistribution and use in source and binary forms, with or without
   9          // modification, are permitted provided that the following conditions are met:
  10          
  11          // * Redistributions of source code must retain the above copyright notice, this
  12          //   list of conditions and the following disclaimer.
  13          
  14          // * Redistributions in binary form must reproduce the above copyright notice,
  15          //   this list of conditions and the following disclaimer in the documentation
  16          //   and/or other materials provided with the distribution.
  17          
  18          // * Neither the name of the copyright holder nor the names of its
  19          //   contributors may be used to endorse or promote products derived from
  20          //   this software without specific prior written permission.
  21          
  22          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25          // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26          // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27          // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28          // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29          // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30          // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31          // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32          // POSSIBILITY OF SUCH DAMAGE.
  33          // ----------------------------------------------------------------------------
  34          
  35          /**
  36          * \file         interruptions.c
  37          *
  38          * \brief        Interruption handling and firmware core functions
  39          * \date         October 01, 2017
  40          * \author       _Centro "E.Piaggio"_
  41          * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42          * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43          */
  44          
  45          
  46          //=================================================================     includes
  47          #include <interruptions.h>
  48          #include <command_processing.h>
  49          #include <globals.h>
  50          #include <utils.h>
  51          
  52          
  53          //==============================================================================
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 2   

  54          //                                                            RS485 RX INTERRUPT
  55          //==============================================================================
  56          // Processing RS-485 data frame:
  57          //
  58          // - 0:     Waits for beggining characters
  59          // - 1:     Waits for ID;
  60          // - 2:     Data length;
  61          // - 3:     Receive all bytes;
  62          // - 4:     Wait for another device end of transmission;
  63          //
  64          //==============================================================================
  65          
  66          // PWM values needed to obtain 11.5 V given a certain input tension
  67          // Numbers are sperimentally calculated //[index] (millivolts)
  68          static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  69                                                        83,
  70                                                        78,
  71                                                        76,
  72                                                        74,
  73                                                        72,    //5 (14000)
  74                                                        70,
  75                                                        68,
  76                                                        67,
  77                                                        65,
  78                                                        64,    //10 (16500)
  79                                                        63,
  80                                                        62,
  81                                                        61,
  82                                                        60,
  83                                                        59,    //15 (19000)
  84                                                        58,
  85                                                        57,
  86                                                        56,
  87                                                        56,
  88                                                        55,    //20 (21500)
  89                                                        54,
  90                                                        54,
  91                                                        53,
  92                                                        52,
  93                                                        52,    //25 (24000)
  94                                                        52,
  95                                                        51,
  96                                                        51};   //28 (25500)
  97          
  98          CYCODE uint8 pwm_preload_values_6v[32] = {  100,  //0 (6000)
  99                                                       76,
 100                                                       71,
 101                                                       68,
 102                                                       66,
 103                                                       64,   //5 (8750)
 104                                                       62,
 105                                                       60,
 106                                                       58,
 107                                                       56,
 108                                                       54,   //10 (11500)
 109                                                       53,
 110                                                       52,
 111                                                       51,
 112                                                       50,
 113                                                       49,   //15 (14250)
 114                                                       47,
 115                                                       46,
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 3   

 116                                                       45,
 117                                                       44,
 118                                                       43,   //20 (17000)
 119                                                       42,
 120                                                       41,
 121                                                       40,
 122                                                       39,
 123                                                       38,   //25 (19750)
 124                                                       37,
 125                                                       37,
 126                                                       37,
 127                                                       37,
 128                                                       36};  //30 (22500)
 129          //==============================================================================
 130          //                                                            WATCHDOG INTERRUPT
 131          //==============================================================================
 132          
 133          CY_ISR(ISR_WATCHDOG_Handler){
 134   1      
 135   1          // Set WDT flag
 136   1          
 137   1          watchdog_flag = TRUE;
 138   1      
 139   1      }
 140          
 141          //==============================================================================
 142          //                                                            RS485 RX INTERRUPT
 143          //==============================================================================
 144          
 145          CY_ISR(ISR_RS485_RX_ExInterrupt) {
 146   1      
 147   1          // Set RS485 flag
 148   1          
 149   1          interrupt_flag = TRUE;
 150   1           
 151   1      }
 152          
 153          //==============================================================================
 154          //                                                        CYCLES TIMER INTERRUPT
 155          //==============================================================================
 156          CY_ISR(ISR_CYCLES_Handler){
 157   1      
 158   1          // Set cycles interrupt flag
 159   1          
 160   1          cycles_interrupt_flag = TRUE;
 161   1          
 162   1          CYCLES_TIMER_STATUS;
 163   1      
 164   1      }
 165          
 166          //==============================================================================
 167          //                                                             INTERRUPT MANAGER
 168          //==============================================================================
 169          // Manage interrupt from RS485 
 170          //==============================================================================
 171          // Processing RS-485 data frame:
 172          //
 173          // - WAIT_START:    Waits for beginning characters;
 174          // - WAIT_ID:       Waits for ID;
 175          // - WAIT_LENGTH:   Data length;
 176          // - RECEIVE:       Receive all bytes;
 177          // - UNLOAD:        Wait for another device end of transmission;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 4   

 178          //
 179          //==============================================================================
 180          
 181          void interrupt_manager(){
 182   1      
 183   1          
 184   1          //===========================================     local variables definition
 185   1      
 186   1          static uint8 CYDATA state = WAIT_START;                      // state
 187   1          
 188   1          //------------------------------------------------- local data packet
 189   1          static uint8 CYDATA data_packet_index;
 190   1          static uint8 CYDATA data_packet_length;
 191   1          static uint8 data_packet_buffer[128];                     
 192   1          static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 193   1          //-------------------------------------------------
 194   1      
 195   1          uint8 CYDATA    rx_data;                            // RS485 UART rx data
 196   1          CYBIT           rx_data_type;                       // my id?
 197   1          uint8 CYDATA    package_count = 0;                     
 198   1      
 199   1          //======================================================     receive routine
 200   1          
 201   1          // Get data until buffer is not empty 
 202   1          
 203   1          while(UART_RS485_GetRxBufferSize() && (package_count < 6)){  
 204   2              // 6 - estimated maximum number of packets we can read without blocking firmware execution
 205   2              
 206   2              // Get next char
 207   2              rx_data = UART_RS485_GetChar();
 208   2              
 209   2              switch (state) {
 210   3                  //-----     wait for frame start     -------------------------------
 211   3                  case WAIT_START:
 212   3                  
 213   3                      rx_queue[0] = rx_queue[1];
 214   3                      rx_queue[1] = rx_queue[2];
 215   3                      rx_queue[2] = rx_data;
 216   3                      
 217   3                      // Check for header configuration package
 218   3                      if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 219   4                          rx_queue[0] = 0;
 220   4                          rx_queue[1] = 0;
 221   4                          rx_queue[2] = 0;
 222   4                          state       = WAIT_ID;                    
 223   4                      }else
 224   3                          if ((rx_queue[0] == 63) &&      //ASCII - ?
 225   3                              (rx_queue[1] == 13) &&      //ASCII - CR
 226   3                              (rx_queue[2] == 10))        //ASCII - LF)
 227   3                              infoGet(INFO_ALL);
 228   3                      break;
 229   3      
 230   3                  //-----     wait for id     ----------------------------------------
 231   3                  case  WAIT_ID:
 232   3      
 233   3                      // packet is for my ID or is broadcast
 234   3                      if (rx_data == c_mem.id || rx_data == 0)
 235   3                          rx_data_type = FALSE;
 236   3                      else                //packet is for others
 237   3                          rx_data_type = TRUE;
 238   3                      
 239   3                      data_packet_length = 0;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 5   

 240   3                      state = WAIT_LENGTH;
 241   3                      break;
 242   3      
 243   3                  //-----     wait for length     ------------------------------------
 244   3                  case  WAIT_LENGTH:
 245   3      
 246   3       
 247   3                      data_packet_length = rx_data;
 248   3                      // check validity of pack length
 249   3                      if (data_packet_length <= 1) {
 250   4                          data_packet_length = 0;
 251   4                          state = WAIT_START;
 252   4                      } else if (data_packet_length > 128) {
 253   4                          data_packet_length = 0;
 254   4                          state = WAIT_START;
 255   4                      } else {
 256   4                          data_packet_index = 0;
 257   4                          
 258   4                          if(rx_data_type == FALSE)
 259   4                              state = RECEIVE;          // packet for me or broadcast
 260   4                          else
 261   4                              state = UNLOAD;           // packet for others
 262   4                      }
 263   3                      break;
 264   3      
 265   3                  //-----     receiving     -------------------------------------------
 266   3                  case RECEIVE:
 267   3      
 268   3                      data_packet_buffer[data_packet_index] = rx_data;
 269   3                      data_packet_index++;
 270   3                      
 271   3                      // check end of transmission
 272   3                      if (data_packet_index >= data_packet_length) {
 273   4                          // verify if frame ID corresponded to the device ID
 274   4                          if (rx_data_type == FALSE) {
 275   5                              // copying data from buffer to global packet
 276   5                              memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 277   5                              g_rx.length = data_packet_length;
 278   5                              g_rx.ready  = 1;
 279   5                              commProcess();
 280   5                          }
 281   4                          
 282   4                          data_packet_index  = 0;
 283   4                          data_packet_length = 0;
 284   4                          state              = WAIT_START;
 285   4                          package_count++;
 286   4                      
 287   4                      }
 288   3                      break;
 289   3      
 290   3                  //-----     other device is receving     ---------------------------
 291   3                  case UNLOAD:
 292   3                      if (!(--data_packet_length)) {
 293   4                          data_packet_index  = 0;
 294   4                          data_packet_length = 0;
 295   4                          RS485_CTS_Write(1);
 296   4                          RS485_CTS_Write(0);
 297   4                          state              = WAIT_START;
 298   4                          package_count++;
 299   4                      }
 300   3                      break;
 301   3              }
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 6   

 302   2          }
 303   1      }
 304          //==============================================================================
 305          //                                                            FUNCTION SCHEDULER
 306          //==============================================================================
 307          // Call all the function with the right frequency
 308          //==============================================================================
 309          // Base frequency 1000 Hz
 310          //==============================================================================
 311          
 312          void function_scheduler(void) {
 313   1       
 314   1          static uint16 counter_calibration = DIV_INIT_VALUE;
 315   1          CYBIT write_cycles = FALSE;
 316   1          timer_value0 = (uint32)MY_TIMER_ReadCounter();
 317   1      
 318   1          // Start ADC Conversion, SOC = 1
 319   1      
 320   1          ADC_SOC_Write(0x01); 
 321   1          
 322   1          // Check Interrupt 
 323   1      
 324   1          if (interrupt_flag){
 325   2              interrupt_flag = FALSE;
 326   2              interrupt_manager();
 327   2              write_cycles = TRUE;
 328   2          }
 329   1        
 330   1          //---------------------------------- Get Encoders
 331   1      
 332   1          encoder_reading(0); 
 333   1          
 334   1          // Check Interrupt     
 335   1          
 336   1          if (interrupt_flag){
 337   2              interrupt_flag = FALSE;
 338   2              interrupt_manager();
 339   2              write_cycles = TRUE;
 340   2          }   
 341   1          
 342   1          encoder_reading(1);
 343   1          
 344   1          // Check Interrupt 
 345   1          
 346   1          if (interrupt_flag){
 347   2              interrupt_flag = FALSE;
 348   2              interrupt_manager();
 349   2              write_cycles = TRUE;
 350   2          }
 351   1          
 352   1          encoder_reading(2);
 353   1          
 354   1          // Check Interrupt 
 355   1          
 356   1          if (interrupt_flag){
 357   2              interrupt_flag = FALSE;
 358   2              interrupt_manager();
 359   2              write_cycles = TRUE;
 360   2          }
 361   1      
 362   1          //---------------------------------- Control Motor
 363   1         
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 7   

 364   1          motor_control();
 365   1      
 366   1          // Check Interrupt 
 367   1      
 368   1          if (interrupt_flag){
 369   2              interrupt_flag = FALSE;
 370   2              interrupt_manager();
 371   2              write_cycles = TRUE;
 372   2          }
 373   1      
 374   1          //---------------------------------- Read conversion buffer - LOCK function
 375   1      
 376   1          analog_read_end();
 377   1      
 378   1          if (interrupt_flag){
 379   2              interrupt_flag = FALSE;
 380   2              interrupt_manager();
 381   2              write_cycles = TRUE;
 382   2          }
 383   1      
 384   1          //---------------------------------- Control Overcurrent
 385   1      
 386   1          overcurrent_control();
 387   1          
 388   1          // Check Interrupt 
 389   1          
 390   1          if (interrupt_flag){
 391   2              interrupt_flag = FALSE;
 392   2              interrupt_manager();
 393   2              write_cycles = TRUE;
 394   2          }
 395   1      
 396   1          //---------------------------------- Calibration 
 397   1      
 398   1          // Divider 10, freq = 500 Hz
 399   1          if (calib.enabled == TRUE) {
 400   2              if (counter_calibration == CALIBRATION_DIV) {
 401   3                  calibration();
 402   3                  counter_calibration = 0;
 403   3              }
 404   2              counter_calibration++;
 405   2          }
 406   1      
 407   1          // Check Interrupt 
 408   1          
 409   1          if (interrupt_flag){
 410   2              interrupt_flag = FALSE;
 411   2              interrupt_manager();
 412   2              write_cycles = TRUE;
 413   2          }
 414   1          
 415   1          //---------------------------------- Rest position check
 416   1          
 417   1          // Divider 10, freq = 500 Hz
 418   1          if (c_mem.rest_position_flag == TRUE){
 419   2              if (counter_calibration == CALIBRATION_DIV) {
 420   3                      check_rest_position();
 421   3                      counter_calibration = 0;
 422   3              }
 423   2              counter_calibration++;
 424   2      
 425   2              // Check Interrupt     
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 8   

 426   2              if (interrupt_flag){
 427   3                  interrupt_flag = FALSE;
 428   3                  interrupt_manager();
 429   3                              write_cycles = TRUE;
 430   3              }
 431   2          } 
 432   1      
 433   1          //---------------------------------- Control Cycles Counter
 434   1      
 435   1          cycles_counter_update();
 436   1      
 437   1          // Check Cycles Interrupt 
 438   1          
 439   1          if (cycles_interrupt_flag){
 440   2              cycles_interrupt_flag = FALSE;
 441   2      
 442   2              // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 443   2              // to save EEPROM writings (1M maximum)
 444   2              if(can_write) {
 445   3                  cycles_status = PREPARE_DATA;
 446   3                  
 447   3                  //Update time variable
 448   3                  g_mem.total_time_on = g_mem.total_time_on + 120;  // Add 120 seconds.
 449   3              }
 450   2          }
 451   1          
 452   1          // Check Interrupt 
 453   1          
 454   1          if (interrupt_flag){
 455   2              interrupt_flag = FALSE;
 456   2              interrupt_manager();
 457   2          }
 458   1          
 459   1          //---------------------------------- Update States
 460   1          
 461   1          // Load k-1 state
 462   1          memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 463   1          memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 464   1      
 465   1          // Load k+1 state
 466   1          memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 467   1      
 468   1          if (interrupt_flag){
 469   2              interrupt_flag = FALSE;
 470   2              interrupt_manager();
 471   2              write_cycles = TRUE;
 472   2          }
 473   1      
 474   1          timer_value = (uint32)MY_TIMER_ReadCounter();
 475   1          cycle_time = (float)((timer_value0 - timer_value)/1000000.0);
 476   1          MY_TIMER_WriteCounter(5000000);
 477   1      
 478   1      }
 479          
 480          //==============================================================================
 481          //                                                                MOTORS CONTROL
 482          //==============================================================================
 483          
 484          void motor_control() {
 485   1      
 486   1          int32 CYDATA pwm_input = 0;
 487   1      
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 9   

 488   1          int32 CYDATA pos_error;         // position error
 489   1          int32 CYDATA curr_error;        // current error
 490   1      
 491   1          int32 CYDATA i_ref;             // current reference
 492   1          int32 CYDATA handle_value;
 493   1      
 494   1          int32 CYDATA err_emg_1, err_emg_2;
 495   1      
 496   1          int32 CYDATA k_p = c_mem.k_p;  
 497   1          int32 CYDATA k_i = c_mem.k_i; 
 498   1          int32 CYDATA k_d = c_mem.k_d; 
 499   1      
 500   1          int32 CYDATA k_p_c = c_mem.k_p_c;  
 501   1          int32 CYDATA k_i_c = c_mem.k_i_c; 
 502   1          int32 CYDATA k_d_c = c_mem.k_d_c;   
 503   1      
 504   1          int32 CYDATA k_p_dl = c_mem.k_p_dl;  
 505   1          int32 CYDATA k_i_dl = c_mem.k_i_dl; 
 506   1          int32 CYDATA k_d_dl = c_mem.k_d_dl;
 507   1          int32 CYDATA pos_error_max = ((int32)c_mem.current_limit << 13)/(k_p_dl);
 508   1          
 509   1          int32 CYDATA k_p_c_dl = c_mem.k_p_c_dl;  
 510   1          int32 CYDATA k_i_c_dl = c_mem.k_i_c_dl; 
 511   1          int32 CYDATA k_d_c_dl = c_mem.k_d_c_dl;   
 512   1      
 513   1          // Static Variables
 514   1      
 515   1          static int32 pos_error_sum;     // position error sum for integral
 516   1          static int32 curr_error_sum;    // current error sum for integral
 517   1          
 518   1          static int32 prev_pos_err;      // previous position error for deriv. control
 519   1          static int32 prev_curr_err;     // previous current error for deriv. control
 520   1      
 521   1          static CYBIT motor_dir = FALSE;
 522   1      
 523   1          static uint8 current_emg = 0;   // 0 NONE
 524   1                                          // 1 EMG 1
 525   1                                          // 2 EMG 2
 526   1                                          // wait for both to get down
 527   1      
 528   1          err_emg_1 = g_meas.emg[0] - c_mem.emg_threshold[0];
 529   1          err_emg_2 = g_meas.emg[1] - c_mem.emg_threshold[1];
 530   1      
 531   1          // =========================== POSITION INPUT ==============================
 532   1          switch(c_mem.input_mode) {
 533   2      
 534   2              case INPUT_MODE_ENCODER3:
 535   2      
 536   2                  // Calculate handle value based on position of handle in the
 537   2                  // sensor chain and multiplication factor between handle and motor position
 538   2                  if (c_mem.double_encoder_on_off) 
 539   2                      handle_value = g_meas.pos[2] * c_mem.motor_handle_ratio;
 540   2                  else
 541   2                      handle_value = g_meas.pos[1] * c_mem.motor_handle_ratio;
 542   2                  
 543   2      
 544   2                  // Read handle and use it as reference for the motor
 545   2                  if (((handle_value - g_ref.pos[0]) > c_mem.max_step_pos) && (c_mem.max_step_pos != 0))
 546   2                      g_ref.pos[0] += c_mem.max_step_pos;
 547   2                  else {
 548   3                      if (((handle_value - g_ref.pos[0]) < c_mem.max_step_neg) && (c_mem.max_step_neg != 0))
 549   3                          g_ref.pos[0] += c_mem.max_step_neg;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 10  

 550   3                      else
 551   3                          g_ref.pos[0] = handle_value;
 552   3                  }
 553   2                  break;
 554   2      
 555   2              case INPUT_MODE_EMG_PROPORTIONAL:
 556   2                  if (err_emg_1 > 0)
 557   2                      g_ref.pos[0] = (err_emg_1 * g_mem.pos_lim_sup[0]) / (1024 - c_mem.emg_threshold[0]);
 558   2                  else
 559   2                      g_ref.pos[0] = 0;
 560   2                  break;
 561   2      
 562   2              case INPUT_MODE_EMG_INTEGRAL:
 563   2                  g_ref.pos[0] = g_refOld.pos[0];
 564   2                  if (err_emg_1 > 0) {
 565   3                      g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.em
             -g_threshold[0]);
 566   3                  }
 567   2                  if (err_emg_2 > 0) {
 568   3                      g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.em
             -g_threshold[1]);
 569   3                  }
 570   2                  break;
 571   2      
 572   2              case INPUT_MODE_EMG_FCFS:
 573   2                  g_ref.pos[0] = g_refOld.pos[0];
 574   2                  switch (current_emg) {
 575   3                      case 0:
 576   3                          // Look for the first EMG passing the threshold
 577   3                          if (err_emg_1 > 0) {
 578   4                              current_emg = 1;
 579   4                              break;
 580   4                          }
 581   3                          if (err_emg_2 > 0) {
 582   4                              current_emg = 2;
 583   4                              break;
 584   4                          }
 585   3                          break;
 586   3      
 587   3                      case 1:
 588   3                          // EMG 1 is first
 589   3                          if (err_emg_1 < 0) {
 590   4                              current_emg = 0;
 591   4                              break;
 592   4                          }
 593   3                          g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * g_mem.emg_speed * 2) / (1024 - c_mem.emg
             -_threshold[0]);
 594   3                          break;
 595   3      
 596   3                      case 2:
 597   3                          // EMG 2 is first
 598   3                          if (err_emg_2 < 0) {
 599   4                              current_emg = 0;
 600   4                              break;
 601   4                          }
 602   3                          g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * g_mem.emg_speed * 2) / (1024 - c_mem.emg
             -_threshold[1]);
 603   3                          break;
 604   3      
 605   3                      default:
 606   3                          break;
 607   3                  }
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 11  

 608   2      
 609   2                  break;
 610   2      
 611   2              case INPUT_MODE_EMG_FCFS_ADV:
 612   2                  g_ref.pos[0] = g_refOld.pos[0];
 613   2                  switch (current_emg) {
 614   3                      // Look for the first EMG passing the threshold
 615   3                      case 0:
 616   3                          if (err_emg_1 > 0) {
 617   4                              current_emg = 1;
 618   4                              break;
 619   4                          }
 620   3                          if (err_emg_2 > 0) {
 621   4                              current_emg = 2;
 622   4                              break;
 623   4                          }
 624   3                          break;
 625   3      
 626   3                      // EMG 1 is first
 627   3                      case 1:
 628   3                          // If both signals are under threshold go back to status 0
 629   3                          if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 630   4                              current_emg = 0;
 631   4                              break;
 632   4                          }
 633   3                          // but if the current signal come back over threshold, continue using it
 634   3                          if (err_emg_1 > 0) 
 635   3                              g_ref.pos[0] = g_refOld.pos[0] + (err_emg_1 * g_mem.emg_speed << 2) / (1024 - c_me
             -m.emg_threshold[0]);
 636   3                          
 637   3                          break;
 638   3      
 639   3                      // EMG 2 is first
 640   3                      case 2:
 641   3                          // If both signals are under threshold go back to status 0
 642   3                          if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 643   4                              current_emg = 0;
 644   4                              break;
 645   4                          }
 646   3                          // but if the current signal come back over threshold, continue using it
 647   3                          if (err_emg_2 > 0) {
 648   4                              g_ref.pos[0] = g_refOld.pos[0] - (err_emg_2 * c_mem.emg_speed << 2) / (1024 - c_me
             -m.emg_threshold[1]);
 649   4                          }
 650   3                          break;
 651   3      
 652   3                      default:
 653   3                          break;
 654   3                  }
 655   2      
 656   2              default:
 657   2                  break;
 658   2          }
 659   1      
 660   1          // Position limit saturation
 661   1          if (c_mem.pos_lim_flag) {
 662   2              if (g_ref.pos[0] < c_mem.pos_lim_inf[0]) 
 663   2                  g_ref.pos[0] = c_mem.pos_lim_inf[0];
 664   2              if (g_ref.pos[0] > c_mem.pos_lim_sup[0]) 
 665   2                  g_ref.pos[0] = c_mem.pos_lim_sup[0];
 666   2          }
 667   1          
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 12  

 668   1          if (c_mem.rest_position_flag == TRUE) {
 669   2              if (rest_enabled == 1){
 670   3                  // Change position reference to drive motor to rest position smoothly
 671   3                  g_ref.pos[0] = rest_pos_curr_ref;
 672   3              }
 673   2              
 674   2              if (forced_open == 1) {
 675   3                  // Open the SoftHand as EMG PROPORTIONAL input mode 
 676   3                  if (err_emg_2 > 0)
 677   3                      g_ref.pos[0] = g_mem.rest_pos - (err_emg_2 * g_mem.rest_pos) / (1024 - c_mem.emg_threshold
             -[1]);
 678   3                  else {
 679   4                      g_ref.pos[0] = g_mem.rest_pos;
 680   4                      forced_open = 0;
 681   4                  }
 682   3              }
 683   2          }
 684   1      
 685   1          switch(c_mem.control_mode) {
 686   2              // ======================= CURRENT AND POSITION CONTROL =======================
 687   2              case CURR_AND_POS_CONTROL:
 688   2                  pos_error = g_ref.pos[0] - g_meas.pos[0];
 689   2      
 690   2                  pos_error_sum += pos_error;
 691   2                  
 692   2                  // pos error max saturation
 693   2                  if (pos_error > pos_error_max)
 694   2                      pos_error = pos_error_max;
 695   2                  else {
 696   3                      if (pos_error < -pos_error_max)
 697   3                          pos_error = -pos_error_max;
 698   3                  }
 699   2      
 700   2                  // error_sum saturation
 701   2                  if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 702   2                      pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 703   2                  else {
 704   3                      if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
 705   3                          pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 706   3                  }
 707   2                  
 708   2                  // ------ position PID control ------
 709   2                  
 710   2                  i_ref = 0;
 711   2                  
 712   2                  // Proportional
 713   2                  if (k_p_dl != 0)
 714   2                      i_ref += (int32)(k_p_dl * pos_error) >> 13;
 715   2      
 716   2                  // Integral
 717   2                  if (k_i_dl != 0)
 718   2                      i_ref += (int32)(k_i_dl * pos_error_sum) >> 13;
 719   2      
 720   2                  // Derivative
 721   2                  if (k_d_dl != 0)
 722   2                      i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 13;
 723   2                              
 724   2                  // Update previous position
 725   2                  prev_pos_err = pos_error;
 726   2      
 727   2                  i_ref += g_ref.curr_offset;
 728   2                                  
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 13  

 729   2                  // motor direction depends on i_ref
 730   2                  if (i_ref >= 0)
 731   2                      motor_dir = TRUE;
 732   2                  else
 733   2                      motor_dir = FALSE;
 734   2      
 735   2                  // saturate max current
 736   2                  if (i_ref > c_mem.current_limit)
 737   2                      i_ref = c_mem.current_limit;
 738   2                  else {
 739   3                      if (i_ref < -c_mem.current_limit)
 740   3                          i_ref = -c_mem.current_limit;
 741   3                      }
 742   2      
 743   2                  // current error and curr error sum
 744   2                  curr_error = i_ref - g_meas.curr[0];
 745   2                  curr_error_sum += curr_error;
 746   2                  
 747   2                  if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 748   2                      curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 749   2                  else {
 750   3                      if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 751   3                          curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 752   3                  }
 753   2      
 754   2                  // ----- current PID control -----
 755   2      
 756   2                  pwm_input = 0;
 757   2      
 758   2                  // Proportional
 759   2                  if (k_p_c_dl != 0)
 760   2                      pwm_input += (int32)(k_p_c_dl * curr_error) >> 13;
 761   2      
 762   2                  // Integral
 763   2                  if (k_i_c_dl != 0)
 764   2                      pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 13;
 765   2      
 766   2                  // Derivative
 767   2                  if (k_d_c_dl != 0)
 768   2                      pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 13;
 769   2      
 770   2                  // pwm_input saturation
 771   2                  if (pwm_input < -PWM_MAX_VALUE) 
 772   2                      pwm_input = -PWM_MAX_VALUE;
 773   2                  else {
 774   3                      if (pwm_input > PWM_MAX_VALUE)
 775   3                          pwm_input = PWM_MAX_VALUE;
 776   3                  }
 777   2      
 778   2                  // Update previous current
 779   2                  prev_curr_err = curr_error;
 780   2      
 781   2              break;
 782   2      
 783   2              // ============================== POSITION CONTROL =====================
 784   2              case CONTROL_ANGLE:
 785   2                  pos_error = g_ref.pos[0] - g_meas.pos[0];
 786   2      
 787   2                  pos_error_sum += pos_error;
 788   2      
 789   2                  // anti-windup (for integral control)
 790   2                  if (pos_error_sum > ANTI_WINDUP)
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 14  

 791   2                      pos_error_sum = ANTI_WINDUP;
 792   2                  else {
 793   3                                      if (pos_error_sum < -ANTI_WINDUP)
 794   3                              pos_error_sum = -ANTI_WINDUP;
 795   3                  }
 796   2      
 797   2                  // Proportional
 798   2                  if (k_p != 0) 
 799   2                      pwm_input = (int32)(k_p * pos_error) >> 16;
 800   2                  
 801   2      
 802   2                  // Integral
 803   2                  if (k_i != 0) 
 804   2                      pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 805   2                  
 806   2      
 807   2                  // Derivative
 808   2                  if (k_d != 0) 
 809   2                      pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 810   2                  
 811   2      
 812   2                  // Update measure
 813   2                  prev_pos_err = pos_error;
 814   2      
 815   2                  if (pwm_input > 0)
 816   2                      motor_dir = TRUE;
 817   2                  else
 818   2                      motor_dir = FALSE;
 819   2      
 820   2              break;
 821   2      
 822   2              // ========================== CURRENT CONTROL ==========================
 823   2              case CONTROL_CURRENT:
 824   2                  if(g_ref.onoff && tension_valid) {
 825   3                      
 826   3                      i_ref = g_ref.curr[0];
 827   3      
 828   3                      if (i_ref > c_mem.current_limit) 
 829   3                          i_ref = c_mem.current_limit;
 830   3                      else {
 831   4                          if (i_ref < -c_mem.current_limit)
 832   4                              i_ref = -c_mem.current_limit;
 833   4                      }
 834   3                      
 835   3                      // current error
 836   3                      curr_error = i_ref - g_meas.curr[0];            
 837   3                      curr_error_sum += curr_error;
 838   3                      
 839   3                      if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 840   3                          curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 841   3                      else {
 842   4                          if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 843   4                              curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 844   4                      }
 845   3      
 846   3                      pwm_input = 0;
 847   3      
 848   3                      // Proportional
 849   3                      if (k_p_c != 0)
 850   3                          pwm_input += (int32)(k_p_c * curr_error) >> 16;
 851   3      
 852   3                      // Integral
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 15  

 853   3                      if (k_i_c != 0)
 854   3                          pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 855   3      
 856   3                      // Derivative
 857   3                      if (k_d_c != 0)
 858   3                          pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 859   3                      
 860   3                      prev_curr_err = curr_error;
 861   3                      
 862   3                      if (pwm_input >= 0) 
 863   3                          motor_dir = TRUE;
 864   3                      else
 865   3                          motor_dir = FALSE;
 866   3                  }
 867   2              break;
 868   2              
 869   2              // ================= DIRECT PWM CONTROL ================================
 870   2              case CONTROL_PWM:
 871   2      
 872   2                  pwm_input = g_ref.pwm[0];
 873   2      
 874   2                  if (pwm_input > 0) 
 875   2                      motor_dir = TRUE;
 876   2                  else 
 877   2                      motor_dir = FALSE;
 878   2                  
 879   2      
 880   2                  // pwm_input saturation
 881   2                  if (pwm_input < -PWM_MAX_VALUE) 
 882   2                      pwm_input = -PWM_MAX_VALUE;
 883   2                  else {
 884   3                                      if (pwm_input > PWM_MAX_VALUE) 
 885   3                              pwm_input = PWM_MAX_VALUE;
 886   3                      }
 887   2      
 888   2              break;
 889   2          }
 890   1      
 891   1          ////////////////////////////////////////////////////////////////////////////
 892   1      
 893   1          if(pwm_input >  PWM_MAX_VALUE) 
 894   1              pwm_input =  PWM_MAX_VALUE;
 895   1          if(pwm_input < -PWM_MAX_VALUE) 
 896   1              pwm_input = -PWM_MAX_VALUE;
 897   1      
 898   1      
 899   1          if (c_mem.control_mode != CONTROL_PWM) 
 900   1              pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit) >> 10;
 901   1          
 902   1      
 903   1          pwm_sign = SIGN(pwm_input);
 904   1      
 905   1          if (motor_dir)
 906   1              MOTOR_DIR_Write(0x01);
 907   1          else
 908   1              MOTOR_DIR_Write(0x00);
 909   1      
 910   1          PWM_MOTORS_WriteCompare1(abs(pwm_input));
 911   1      }
 912          
 913          //==============================================================================
 914          //                                                               ENCODER READING
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 16  

 915          //==============================================================================
 916          
 917          void encoder_reading(const uint8 idx) {
 918   1      
 919   1          uint8 CYDATA index = idx;
 920   1          
 921   1          uint8 jj;
 922   1          
 923   1          uint32 data_encoder;
 924   1          int32 value_encoder;
 925   1          int32 speed_encoder;
 926   1          //int32 accel_encoder;
 927   1          int32 aux;
 928   1          int32 init_rot = 0;
 929   1      
 930   1          static int32 last_value_encoder[NUM_OF_SENSORS];
 931   1      
 932   1          static uint8 error[NUM_OF_SENSORS];
 933   1          
 934   1          static CYBIT only_first_time = TRUE;
 935   1      
 936   1          static uint8 one_time_execute = 0;
 937   1          static CYBIT pos_reconstruct = FALSE;
 938   1      
 939   1          static int32 v_value[NUM_OF_SENSORS];   //last value for velocity
 940   1          static int32 vv_value[NUM_OF_SENSORS];  //last last value for velocity
 941   1          static int32 vvv_value[NUM_OF_SENSORS];  //last last last value for velocity
 942   1          
 943   1          //static int32 a_value[NUM_OF_SENSORS];   //last value for acceleration
 944   1          //static int32 aa_value[NUM_OF_SENSORS];  //last last value for acceleration
 945   1          //static int32 aaa_value[NUM_OF_SENSORS];  //last last last value for acceleration
 946   1      
 947   1          if (index >= NUM_OF_SENSORS)
 948   1              return;
 949   1          
 950   1          if (reset_last_value_flag) {
 951   2              for (jj = NUM_OF_SENSORS; jj--;) 
 952   2                  last_value_encoder[jj] = 0;
 953   2              
 954   2              reset_last_value_flag = 0;
 955   2          }
 956   1      
 957   1          //======================================================     reading sensors
 958   1              // Shift 1 right to erase Dummy bit of chain
 959   1          if (index == 0)
 960   1                  data_encoder = (SHIFTREG_ENC_1_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 961   1          else {
 962   2              if (index == 1)
 963   2                  data_encoder = (SHIFTREG_ENC_2_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 964   2              else // index == 2
 965   2                  data_encoder = (SHIFTREG_ENC_3_ReadData() >> 1) & 0x3FFFF;  //0x0003FFFF reset first 14 bits
 966   2          }
 967   1             
 968   1      
 969   1          if (check_enc_data(&data_encoder)) {
 970   2      
 971   2              value_encoder = (int16) (((data_encoder & 0x3FFC0) - 0x20000) >> 2 ) + g_mem.m_off[index];
 972   2                                                          // reset last 6 bit 
 973   2                                                          // -> |:|:|id|dim|CMD|CHK|(data---
 974   2                                                          // subtract half of max value
 975   2                                                          // and shift to have 16 bit val
 976   2      
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 17  

 977   2              // Initialize last_value_encoder
 978   2              if (only_first_time) {
 979   3                  last_value_encoder[index] = value_encoder;
 980   3                  if (index == 2)
 981   3                      only_first_time = 0;
 982   3              }
 983   2      
 984   2              // Take care of rotations
 985   2              aux = value_encoder - last_value_encoder[index];
 986   2      
 987   2              // ====================== 1 TURN ======================
 988   2              // -32768                    0                    32767 -32768                   0                
             -     32767
 989   2              // |-------------------------|-------------------------|-------------------------|----------------
             ----------|
 990   2              //              |                         |      |           |      |                         |
 991   2              //           -16384                     16383    |           |   -16384                     16383
 992   2              //                                               |           |
 993   2              //                                           24575           -24576
 994   2              //                                               |___________|
 995   2              //                                                   49152
 996   2      
 997   2              // if we are in the right interval, take care of rotation
 998   2              // and update the variable only if the difference between
 999   2              // one measure and another is less than 1/4 of turn
1000   2      
1001   2              // Considering we are sampling at 1kHz, this means that our shaft needs
1002   2              // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1003   2              // equal to 250 turn/s -> 15000 RPM
1004   2      
1005   2              if (aux > 49152)
1006   2                  g_meas.rot[index]--;
1007   2              else{ 
1008   3                  if (aux < -49152)
1009   3                      g_meas.rot[index]++;
1010   3                  else{
1011   4                      if (abs(aux) > 16384) { // if two measure are too far
1012   5                          error[index]++;
1013   5                          if (error[index] < 10)
1014   5                              // Discard
1015   5                              return;
1016   5                      }
1017   4                  }
1018   3              }
1019   2      
1020   2              error[index] = 0;
1021   2      
1022   2              last_value_encoder[index] = value_encoder;
1023   2      
1024   2              value_encoder += (int32)g_meas.rot[index] << 16;
1025   2      
1026   2              if (c_mem.m_mult[index] != 1.0) {
1027   3                  value_encoder *= c_mem.m_mult[index];
1028   3              }
1029   2      
1030   2              g_meas.pos[index] = value_encoder;
1031   2          }
1032   1          
1033   1          switch(index) {
1034   2              case 0:
1035   2                  speed_encoder = (int16)filter_vel_1((11*value_encoder - 18* v_value[0] + 9 * vv_value[0] -2 * 
             -vvv_value[0]));
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 18  

1036   2              break;
1037   2       
1038   2              case 1:
1039   2                  speed_encoder = (int16)filter_vel_2((11*value_encoder - 18* v_value[1] + 9 * vv_value[1] -2 * 
             -vvv_value[1]));
1040   2              break;
1041   2          
1042   2              case 2:
1043   2                  speed_encoder = (int16)filter_vel_3((11*value_encoder - 18* v_value[2] + 9 * vv_value[2] -2 * 
             -vvv_value[2]));
1044   2              break;
1045   2          }
1046   1          //Update current speed
1047   1          speed_encoder = speed_encoder / (6*cycle_time);
1048   1          g_meas.vel[index] = speed_encoder;
1049   1          
1050   1          /*
1051   1          //Encoder rotational acceleration calculation
1052   1          switch(index) {
1053   1              case 0:
1054   1                  accel_encoder = (int16)filter_acc_1((11*speed_encoder - 18* a_value[0] + 9 * aa_value[0] -2* a
             -aa_value[0] ));
1055   1                  break;
1056   1              
1057   1              case 1:
1058   1                  accel_encoder = (int16)filter_acc_2((11*speed_encoder - 18* a_value[1] + 9 * aa_value[1] -2* a
             -aa_value[1] ));
1059   1                  break;
1060   1              
1061   1              case 2:
1062   1                  accel_encoder = (int16)filter_acc_3((11*speed_encoder - 18* a_value[2] + 9 * aa_value[2] -2* a
             -aa_value[2] ));
1063   1                  break;
1064   1          }
1065   1          //Update current acceleration
1066   1          g_meas.acc[index] = accel_encoder / (6*cycle_time);
1067   1          */
1068   1      
1069   1          // update old velocity and acceleration values
1070   1          vvv_value[index] = vv_value[index];
1071   1          vv_value[index] = v_value[index];
1072   1          v_value[index] = value_encoder;
1073   1      
1074   1          /*
1075   1          aaa_value[index] = aa_value[index];
1076   1          aa_value[index] = a_value[index];
1077   1          a_value[index] = speed_encoder;
1078   1          */
1079   1      
1080   1      
1081   1          // wait at least 3 * max_num_of_error (10) + 5 = 35 cycles to reconstruct the right turn
1082   1          if (pos_reconstruct == FALSE){
1083   2              if (one_time_execute < 34) 
1084   2                  one_time_execute++;
1085   2              else {
1086   3                  //Double encoder translation
1087   3                  if (c_mem.double_encoder_on_off){
1088   4      
1089   4                      init_rot = calc_turns_fcn(g_meas.pos[0],g_meas.pos[1]);
1090   4                      
1091   4                      if (c_mem.m_mult[0] < 0)
1092   4                          init_rot = -init_rot;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 19  

1093   4                      
1094   4                      g_meas.rot[0] = (int8)init_rot;
1095   4      
1096   4                  }
1097   3      
1098   3                  if (c_mem.m_mult != 1.0)
1099   3                      g_meas.pos[0] /= c_mem.m_mult[0];
1100   3                  
1101   3                  g_meas.pos[0] += (int32)(init_rot << 16);
1102   3                  
1103   3                  if (c_mem.m_mult != 1.0)
1104   3                      g_meas.pos[0] *= c_mem.m_mult[0];
1105   3                          
1106   3                  // If necessary activate motors
1107   3                  g_refNew.pos[0] = g_meas.pos[0];
1108   3      
1109   3                  MOTOR_ON_OFF_Write(g_ref.onoff);
1110   3                  
1111   3                  pos_reconstruct = TRUE;
1112   3              }
1113   2          }
1114   1      }
1115          
1116          //==============================================================================
1117          //                                                           ANALOG MEASUREMENTS
1118          //==============================================================================
1119          
1120          void analog_read_end() {
1121   1      
1122   1          /* =========================================================================
1123   1          /   Ideal formulation to calculate tension and current
1124   1          /
1125   1          /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1126   1          /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1127   1          /
1128   1          /   Definition:
1129   1          /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1130   1          /   offset = 2000 -> hardware amplifier bias in mV
1131   1          /   gain = 8.086 -> amplifier gain
1132   1          /   resistor = 18 -> resistor of voltage divider in KOhm 
1133   1          /
1134   1          /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1135   1          /   and offset unit of measurment is counts, instead dev_tension and
1136   1          /   g_meas.curr[] are converted in properly unit.
1137   1          /  =========================================================================
1138   1          */
1139   1      
1140   1          int32 CYDATA i_aux;                                        
1141   1          
1142   1          static uint16 emg_counter_1 = 0;
1143   1          static uint16 emg_counter_2 = 0;
1144   1              static uint8 first_tension_valid = TRUE;
1145   1          static int32 pow_tension = 12000;       //12000 mV (12 V)
1146   1          static uint16 count = 0;
1147   1          static uint32 count2 = 0;
1148   1      
1149   1      
1150   1          // Wait for conversion end
1151   1          
1152   1          while(!ADC_STATUS_Read()){
1153   2              if (interrupt_flag){
1154   3                  interrupt_flag = FALSE;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 20  

1155   3                  interrupt_manager();
1156   3              }
1157   2          }
1158   1          
1159   1          // Convert tension read
1160   1          dev_tension = ((int32)(ADC_buf[0] - 1638) * 1952) >> 7;
1161   1          
1162   1          if (interrupt_flag){
1163   2              interrupt_flag = FALSE;
1164   2              interrupt_manager();
1165   2          }
1166   1              if (first_tension_valid && tension_valid) {
1167   2              count = count + 1;
1168   2              
1169   2              if (count == 1000){
1170   3                  if (dev_tension < 9000) {   // 8 V case
1171   4                      pow_tension = 8000;
1172   4                  }
1173   3                  else {      // 12 V - 24 V cases
1174   4                      if (dev_tension < 13000) {
1175   5                          pow_tension = 12000;
1176   5                      }
1177   4                      else
1178   4                          pow_tension = 24000;
1179   4                  }
1180   3      
1181   3                  first_tension_valid = FALSE;
1182   3              }
1183   2          }
1184   1      
1185   1          // Until there is no valid input tension repeat this measurement
1186   1          
1187   1          if (dev_tension > 7000) {       //at least > 7.36 V (92% of 8 V) that is minimum charge of smallest ba
             -ttery
1188   2              // Set tension valid bit to TRUE
1189   2      
1190   2              if (count2 == 1000){
1191   3                  tension_valid = TRUE;   
1192   3              }
1193   2              else {                      // wait for battery voltage stabilization
1194   3                  count2 = count2 + 1;
1195   3                  dev_tension_f = filter_voltage(dev_tension);
1196   3              }
1197   2      
1198   2              if(g_mem.activate_pwm_rescaling)        //pwm rescaling is activated
1199   2                  pwm_limit_search();                 //only for 12V motors
1200   2      
1201   2              // Filter and Set currents
1202   2              g_meas.curr[0] = filter_i1((int16) (((int32)(ADC_buf[1] - 1638) * 25771) >> 13) * pwm_sign);
1203   2              
1204   2                      // Calculate current estimation and put it in the second part of the current measurement array;
1205   2                      g_meas.curr[1] = (int16) filter_curr_diff(((int32) g_meas.curr[0]) - curr_estim(g_meas.pos[0] >> g_mem.r
             -es[0], g_meas.vel[0] >> g_mem.res[0], g_ref.pos[0] >> g_mem.res[0]));
1206   2      
1207   2              // Check Interrupt 
1208   2          
1209   2              if (interrupt_flag){
1210   3                  interrupt_flag = FALSE;
1211   3                  interrupt_manager();
1212   3              }
1213   2      
1214   2              // if calibration is not needed go to "normal execution"
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 21  

1215   2              if (!g_mem.emg_calibration_flag){
1216   3                  emg_1_status = NORMAL; // normal execution
1217   3                  emg_2_status = NORMAL; // normal execution
1218   3              }
1219   2      
1220   2              // EMG 1 calibration state machine
1221   2              
1222   2              // Calibration state machine
1223   2              switch(emg_1_status) {
1224   3                  case NORMAL: // normal execution
1225   3                      i_aux = (int32)ADC_buf[2 + g_mem.switch_emg];
1226   3                      if (i_aux < 0) 
1227   3                          i_aux = 0;
1228   3                      i_aux = filter_ch1(i_aux);
1229   3                      i_aux = (i_aux << 10) / g_mem.emg_max_value[0];
1230   3          
1231   3                      if (interrupt_flag){
1232   4                          interrupt_flag = FALSE;
1233   4                          interrupt_manager();
1234   4                      }
1235   3                      //Saturation
1236   3                      if (i_aux < 0)
1237   3                          i_aux = 0;
1238   3                      else
1239   3                          if (i_aux > 1024) 
1240   3                              i_aux = 1024;
1241   3                      
1242   3                      g_meas.emg[0] = i_aux;
1243   3          
1244   3                      if (interrupt_flag){
1245   4                          interrupt_flag = FALSE;
1246   4                          interrupt_manager();
1247   4                      }
1248   3                      
1249   3                      break;
1250   3      
1251   3                  case RESET: // reset variables
1252   3                      emg_counter_1 = 0;
1253   3                      g_mem.emg_max_value[0] = 0;
1254   3                      emg_1_status = DISCARD; // goto next status
1255   3                      
1256   3                      break;
1257   3      
1258   3                  case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1259   3                      emg_counter_1++;
1260   3                      if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
1261   4                          emg_counter_1 = 0;          // reset counter
1262   4                          
1263   4                          LED_CTRL_Write(1);
1264   4                          LED_BLINK_EN_Write(0);
1265   4                              
1266   4                          if (interrupt_flag){
1267   5                              interrupt_flag = FALSE;
1268   5                              interrupt_manager();
1269   5                          }
1270   4                          
1271   4                          emg_1_status = SUM_AND_MEAN;           // sum and mean status
1272   4                      }
1273   3                      break;
1274   3      
1275   3                  case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1276   3                      // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 22  

1277   3                      emg_counter_1++;
1278   3                      if (ADC_buf[2 + g_mem.switch_emg] < 0) 
1279   3                          ADC_buf[2 + g_mem.switch_emg] = 0;
1280   3                      g_mem.emg_max_value[0] += filter_ch1((int32)ADC_buf[2 + g_mem.switch_emg]);
1281   3                      
1282   3                      if (interrupt_flag){
1283   4                          interrupt_flag = FALSE;
1284   4                          interrupt_manager();
1285   4                      }
1286   3                      
1287   3                      if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
1288   4                          g_mem.emg_max_value[0] = g_mem.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // calc mean
1289   4          
1290   4                          if (interrupt_flag){
1291   5                              interrupt_flag = FALSE;
1292   5                              interrupt_manager();
1293   5                          }                    
1294   4                          
1295   4                          LED_CTRL_Write(0);
1296   4                          LED_BLINK_EN_Write(0);
1297   4                          
1298   4                          emg_counter_1 = 0;          // reset counter
1299   4      
1300   4                          emg_1_status = NORMAL;           // goto normal execution
1301   4                      }
1302   3                      break;
1303   3      
1304   3                  default:
1305   3                      break;
1306   3              }
1307   2          
1308   2              if (interrupt_flag){
1309   3                  interrupt_flag = FALSE;
1310   3                  interrupt_manager();
1311   3              }
1312   2              // EMG 2 calibration state machine
1313   2              switch(emg_2_status) {
1314   3                  case NORMAL: // normal execution
1315   3                      i_aux = (int32)ADC_buf[3 - g_mem.switch_emg];
1316   3                      if (i_aux < 0)
1317   3                          i_aux = 0;
1318   3                      i_aux = filter_ch2(i_aux);
1319   3                      i_aux = (i_aux << 10) / g_mem.emg_max_value[1];
1320   3          
1321   3                      if (interrupt_flag){
1322   4                          interrupt_flag = FALSE;
1323   4                          interrupt_manager();
1324   4                      }
1325   3                      
1326   3                      if (i_aux < 0) 
1327   3                          i_aux = 0;
1328   3                      else
1329   3                          if (i_aux > 1024)
1330   3                              i_aux = 1024;
1331   3                      
1332   3                      g_meas.emg[1] = i_aux;
1333   3      
1334   3                      break;
1335   3      
1336   3                  case RESET: // reset variables
1337   3                      emg_counter_2 = 0;
1338   3                      g_mem.emg_max_value[1] = 0;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 23  

1339   3          
1340   3                      if (interrupt_flag){
1341   4                          interrupt_flag = FALSE;
1342   4                          interrupt_manager();
1343   4                      }
1344   3                      
1345   3                      emg_2_status = WAIT; // wait for EMG 1 calibration
1346   3                      break;
1347   3      
1348   3                  case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1349   3                      emg_counter_2++;
1350   3                      if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
1351   4                          emg_counter_2 = 0;          // reset counter
1352   4                          
1353   4                          LED_CTRL_Write(1);
1354   4                          LED_BLINK_EN_Write(0);
1355   4          
1356   4                          if (interrupt_flag){
1357   5                              interrupt_flag = FALSE;
1358   5                              interrupt_manager();
1359   5                          }
1360   4                          
1361   4                          emg_2_status = SUM_AND_MEAN;           // sum and mean status
1362   4                      }
1363   3                      break;
1364   3      
1365   3                  case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1366   3                      // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1367   3                      emg_counter_2++;
1368   3                      if (ADC_buf[3 - g_mem.switch_emg] < 0)
1369   3                          ADC_buf[3 - g_mem.switch_emg] = 0;
1370   3                      g_mem.emg_max_value[1] += filter_ch2((int32)ADC_buf[3 - g_mem.switch_emg]);
1371   3          
1372   3                      if (interrupt_flag){
1373   4                          interrupt_flag = FALSE;
1374   4                          interrupt_manager();
1375   4                      }
1376   3                      
1377   3                      if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
1378   4                          g_mem.emg_max_value[1] = g_mem.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // calc mean
1379   4                          
1380   4                          LED_CTRL_Write(0);
1381   4                          LED_BLINK_EN_Write(0);
1382   4                          
1383   4                          emg_counter_2 = 0;          // reset counter
1384   4                      
1385   4                          if (interrupt_flag){
1386   5                              interrupt_flag = FALSE;
1387   5                              interrupt_manager();
1388   5                          }
1389   4                          
1390   4                          emg_2_status = WAIT_EoC;           // goto end of calibration wait
1391   4                      }
1392   3                      break;
1393   3      
1394   3                  case WAIT: // wait for EMG calibration to be done
1395   3                      if (emg_1_status == NORMAL)
1396   3                          emg_2_status = DISCARD;           // goto discard sample
1397   3                      break;
1398   3      
1399   3                  case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
1400   3                      emg_counter_2++;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 24  

1401   3                      if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
1402   4                          emg_counter_2 = 0;          // reset counter
1403   4      
1404   4                          if (interrupt_flag){
1405   5                              interrupt_flag = FALSE;
1406   5                              interrupt_manager();
1407   5                          }
1408   4                          
1409   4                          // if EMG control mode active, activate motors accordingly with startup value
1410   4                          if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
1411   4                              (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
1412   4                              (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
1413   4                              (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
1414   5                              if (c_mem.control_mode == CONTROL_ANGLE) {
1415   6                                  g_ref.pos[0] = g_meas.pos[0];
1416   6                                  g_ref.pos[1] = g_meas.pos[1];
1417   6                              }
1418   5                              g_ref.onoff = c_mem.activ;
1419   5                              MOTOR_ON_OFF_Write(g_ref.onoff);
1420   5                          }
1421   4                              
1422   4                          emg_2_status = NORMAL;           // goto normal execution
1423   4                      }
1424   3                      break;
1425   3                      
1426   3                  default:
1427   3                      break;
1428   3              }
1429   2                  
1430   2              if (interrupt_flag){
1431   3                  interrupt_flag = FALSE;
1432   3                  interrupt_manager();
1433   3              }
1434   2          }
1435   1          else {
1436   2      
1437   2              emg_1_status = RESET; 
1438   2              emg_2_status = RESET;
1439   2      
1440   2              tension_valid = FALSE;
1441   2                      //fixed
1442   2              LED_CTRL_Write(1);
1443   2              //PWM Blink Enable
1444   2              LED_BLINK_EN_Write(0);
1445   2                  
1446   2              if (interrupt_flag){
1447   3                  interrupt_flag = FALSE;
1448   3                  interrupt_manager();
1449   3              }
1450   2              
1451   2              if (c_mem.emg_calibration_flag) {
1452   3                  if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
1453   3                      (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
1454   3                      (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
1455   3                      (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
1456   4                      g_ref.onoff = 0x00;
1457   4                      MOTOR_ON_OFF_Write(g_ref.onoff);
1458   4                  }
1459   3              }
1460   2      
1461   2              // Reset current
1462   2              g_meas.curr[0] = 0;
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 25  

1463   2      
1464   2              // Reset emg
1465   2              g_meas.emg[0] = 0;
1466   2              g_meas.emg[1] = 0;
1467   2      
1468   2          }
1469   1              // The board LED blinks if attached battery is not fully charged
1470   1          if (!first_tension_valid && tension_valid == TRUE && emg_1_status == NORMAL && emg_2_status == NORMAL)
             -{
1471   2              dev_tension_f = filter_voltage(dev_tension);
1472   2              if (dev_tension_f > 0.92 * pow_tension){        // Sometimes pow_tension is not well computed when
             - using power supply
1473   3                  //fixed
1474   3                  LED_CTRL_Write(1);
1475   3                  
1476   3                  //PWM Blink Enable
1477   3                  LED_BLINK_EN_Write(0);
1478   3              }
1479   2              else {
1480   3                  // blink
1481   3                  LED_CTRL_Write(0);
1482   3                  
1483   3                  //PWM Blink Enable
1484   3                  LED_BLINK_EN_Write(1);
1485   3                  
1486   3                  // Disable motors because of not fully charged battery
1487   3                //  g_refNew.onoff = 0x00;
1488   3                //  MOTOR_ON_OFF_Write(g_refNew.onoff); // Deactivate motors
1489   3              }
1490   2          }
1491   1              
1492   1          if (interrupt_flag){
1493   2              interrupt_flag = FALSE;
1494   2              interrupt_manager();
1495   2          }
1496   1      }
1497          
1498          //==============================================================================
1499          //                                                           OVERCURRENT CONTROL
1500          //==============================================================================
1501          
1502          void overcurrent_control() {
1503   1          if (c_mem.current_limit != 0) {
1504   2              // if the current is over the limit
1505   2              if (g_meas.curr[0] > c_mem.current_limit) {
1506   3                  //decrese pwm_limit
1507   3                  dev_pwm_limit--;
1508   3              // if the current is in the safe zone
1509   3              } else if (g_meas.curr[0] < (c_mem.current_limit - CURRENT_HYSTERESIS)) {
1510   3                  //increase pwm_limit
1511   3                  dev_pwm_limit++;
1512   3              }
1513   2      
1514   2              // Bound pwm_limit
1515   2              if (dev_pwm_limit < 0) 
1516   2                  dev_pwm_limit = 0;
1517   2              else 
1518   2                  if (dev_pwm_limit > dev_pwm_sat) 
1519   2                      dev_pwm_limit = dev_pwm_sat;
1520   2          }
1521   1      }
1522          
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 26  

1523          //==============================================================================
1524          //                                                              PWM_LIMIT_SEARCH
1525          //==============================================================================
1526          
1527           void pwm_limit_search() {
1528   1        
1529   1          uint8 CYDATA index;
1530   1          uint16 CYDATA max_tension = 25500;
1531   1          uint16 CYDATA min_tension = 11500;
1532   1           
1533   1          if (dev_tension > max_tension) {
1534   2                dev_pwm_sat = 0;
1535   2          } else if (dev_tension < min_tension) {
1536   2                dev_pwm_sat = 100;
1537   2          } else {
1538   2              index = (uint8)((dev_tension - min_tension) >> 9);
1539   2              dev_pwm_sat = pwm_preload_values[index];
1540   2          }
1541   1      }
1542          
1543          
1544          //==============================================================================
1545          //                                                         CYCLES COUNTER UPDATE
1546          //==============================================================================
1547          
1548          void cycles_counter_update() {
1549   1          static uint8 pos_cycle_status = STATE_INACTIVE;
1550   1          static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
1551   1          static uint8 rest_cycle_status = STATE_INACTIVE;
1552   1          static int32 bin_threshold = 250;
1553   1          static int32 thr_pos, max_pos;
1554   1          uint8 i, bin_st, bin_max;
1555   1          int32 curr_pos;
1556   1          int32 step;
1557   1          static uint32 timer_value_s, timer_value_e;
1558   1          
1559   1          curr_pos = (int32)(g_meas.pos[0] >> g_mem.res[0]);
1560   1          
1561   1          // State machine - Evaluate position counter update
1562   1          switch (pos_cycle_status){
1563   2              case STATE_INACTIVE:
1564   2                  if (pwm_sign == 1){
1565   3                      thr_pos = curr_pos; 
1566   3                      g_mem.wire_disp = g_mem.wire_disp + abs(max_pos - thr_pos);     //sum opening track
1567   3                      pos_cycle_status = STATE_ACTIVE;
1568   3                  }
1569   2                  break;
1570   2              case STATE_ACTIVE:
1571   2                  if (pwm_sign == -1){
1572   3                      max_pos = curr_pos;
1573   3                      g_mem.wire_disp = g_mem.wire_disp + abs(max_pos - thr_pos);     //sum closure track
1574   3                      pos_cycle_status = COUNTER_INC;
1575   3                  }
1576   2                  break;
1577   2              case COUNTER_INC:
1578   2                  if (abs(max_pos - thr_pos) > bin_threshold){
1579   3                      //update position histogram
1580   3                      step = ((int32)(g_mem.pos_lim_sup[0] >> g_mem.res[0]) / 10);
1581   3                      bin_st  = (uint8)(thr_pos/step);
1582   3                      bin_max = (uint8)(max_pos/step);
1583   3                      for (i=bin_st; i<= bin_max; i++){
1584   4                          //position_hist counts how many times the SoftHand stays in bin while closing
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 27  

1585   4                          g_mem.position_hist[i] = g_mem.position_hist[i] + 1;
1586   4                      }
1587   3                      
1588   3                      //update current histogram
1589   3                      step = ((int32)(g_mem.current_limit) / 4);
1590   3                      if (g_meas.curr[0] > g_mem.current_limit)
1591   3                          g_mem.current_hist[3] = g_mem.current_hist[3] + 1; 
1592   3                      else
1593   3                          g_mem.current_hist[(uint8)(g_meas.curr[0]/step)] = g_mem.current_hist[(uint8)(g_meas.c
             -urr[0]/step)] + 1;
1594   3                  }
1595   2                  pos_cycle_status = STATE_INACTIVE;
1596   2                  break;
1597   2          }
1598   1          
1599   1          // State machine - Evaluate EMG counter update
1600   1          for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
1601   2              switch (emg_cycle_status[i]){
1602   3                  case STATE_INACTIVE:
1603   3                      if (g_meas.emg[i] > g_mem.emg_threshold[i]){
1604   4                          emg_cycle_status[i] = STATE_ACTIVE;
1605   4                      }
1606   3                      break;
1607   3                  case STATE_ACTIVE:
1608   3                      if (g_meas.emg[i] < 10){
1609   4                          emg_cycle_status[i] = COUNTER_INC;
1610   4                      }
1611   3                      break;
1612   3                  case COUNTER_INC:
1613   3                      g_mem.emg_counter[i] = g_mem.emg_counter[i] + 1;
1614   3                      emg_cycle_status[i] = STATE_INACTIVE;
1615   3                      break;
1616   3              }
1617   2          }
1618   1          
1619   1          // State machine - Evaluate rest counter update
1620   1          switch (rest_cycle_status){
1621   2              case STATE_INACTIVE:
1622   2                  if (rest_enabled){
1623   3                      timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
1624   3                      rest_cycle_status = STATE_ACTIVE;
1625   3                  }
1626   2                  break;
1627   2              case STATE_ACTIVE:
1628   2                  if (!rest_enabled){
1629   3                      timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
1630   3                      if (timer_value_s < timer_value_e) {
1631   4                          timer_value_s = timer_value_s + (uint32)1200;
1632   4                      }
1633   3                      rest_cycle_status = COUNTER_INC;
1634   3                  }
1635   2                  break;
1636   2              case COUNTER_INC: 
1637   2                  g_mem.total_time_rest = g_mem.total_time_rest + (uint32)((timer_value_s - timer_value_e)/10);
1638   2                  g_mem.rest_counter = g_mem.rest_counter + 1;
1639   2                  rest_cycle_status = STATE_INACTIVE;
1640   2                  break;
1641   2          }
1642   1                  
1643   1          // This function writes rows [row_start, row_end] on EEPROM
1644   1          save_cycles_eeprom();
1645   1      }
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 28  

1646          
1647          //==============================================================================
1648          //                                                            SAVE CYCLES EEPROM
1649          //==============================================================================
1650          
1651          void save_cycles_eeprom() {
1652   1      
1653   1          cystatus status;
1654   1          static uint8 row_number;
1655   1          uint8 row_start = 11;
1656   1          uint8* addr_start   = &g_mem.emg_counter[0];    //Data at beginning of the row 11
1657   1          uint8* addr_start_c = &c_mem.emg_counter[0];
1658   1          uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
1659   1          static uint8* m_addr = NULL;
1660   1      
1661   1          // This part of code writes rows [row_start, row_end] on EEPROM    
1662   1          switch(cycles_status) {
1663   2              case PREPARE_DATA:
1664   2                  // Store data in c_mem structure to have consistent counters
1665   2                  memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
1666   2                  m_addr = addr_start;
1667   2                  row_number = row_start;
1668   2                  cycles_status = WRITE_CYCLES;
1669   2                  break;
1670   2                  
1671   2              case WRITE_CYCLES:
1672   2                  EEPROM_UpdateTemperature();     //Check temperature of chip before writing
1673   2                  status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
1674   2                  if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
1675   3                      cycles_status = WAIT_QUERY;
1676   3                      can_write = FALSE;
1677   3                  }
1678   2                  break;
1679   2                  
1680   2              case WAIT_QUERY:
1681   2                  status = EEPROM_Query();
1682   2                  if(status == CYRET_SUCCESS) {
1683   3                      if (row_number < row_end) {
1684   4                          m_addr = m_addr + EEPROM_BYTES_ROW;
1685   4                          row_number = row_number + 1;
1686   4                          cycles_status = WRITE_CYCLES;
1687   4                      }
1688   3                      else {
1689   4                          cycles_status = WRITE_END;
1690   4                      }
1691   3                  }
1692   2                  break;
1693   2                 
1694   2              case WRITE_END:
1695   2                  can_write = TRUE;            
1696   2                  cycles_status = NONE;
1697   2                  
1698   2                  // Restore data saved in c_mem structure
1699   2                  memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
1700   2                  break;
1701   2                  
1702   2              case NONE:
1703   2                  break;
1704   2          }
1705   1      }
1706          /* [] END OF FILE */
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 29  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION ISR_WATCHDOG_Handler (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 137
0000 D200        E     SETB    watchdog_flag
                                           ; SOURCE LINE # 139
0002 32                RETI    
             ; FUNCTION ISR_WATCHDOG_Handler (END)

             ; FUNCTION ISR_RS485_RX_ExInterrupt (BEGIN)
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 149
0000 D200        E     SETB    interrupt_flag
                                           ; SOURCE LINE # 151
0002 32                RETI    
             ; FUNCTION ISR_RS485_RX_ExInterrupt (END)

             ; FUNCTION ISR_CYCLES_Handler (BEGIN)
0000 C0E0              PUSH    ACC
0002 C083              PUSH    DPH
0004 C082              PUSH    DPL
0006 C085              PUSH    DPH1
0008 C084              PUSH    DPL1
000A C086              PUSH    DPS
000C 758600            MOV     DPS,#00H
000F C000        E     PUSH    ?C?XPAGE1SFR
0011 750000      E     MOV     ?C?XPAGE1SFR,#?C?XPAGE1RST
0014 C0D0              PUSH    PSW
0016 75D000            MOV     PSW,#00H
0019 C007              PUSH    AR7
                                           ; SOURCE LINE # 156
                                           ; SOURCE LINE # 160
001B D200        E     SETB    cycles_interrupt_flag
                                           ; SOURCE LINE # 162
001D 906568            MOV     DPTR,#06568H
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
                                           ; SOURCE LINE # 164
0022 D007              POP     AR7
0024 D0D0              POP     PSW
0026 D000        E     POP     ?C?XPAGE1SFR
0028 D086              POP     DPS
002A D084              POP     DPL1
002C D085              POP     DPH1
002E D082              POP     DPL
0030 D083              POP     DPH
0032 D0E0              POP     ACC
0034 32                RETI    
             ; FUNCTION ISR_CYCLES_Handler (END)

             ; FUNCTION interrupt_manager (BEGIN)
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 197
0000 750000      R     MOV     package_count,#00H
0003         ?C0004:
                                           ; SOURCE LINE # 203
0003 120000      E     LCALL   UART_RS485_GetRxBufferSize
0006 EF                MOV     A,R7
0007 7003              JNZ     $ + 5H
0009 020000      R     LJMP    ?C0027
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 30  

000C E500        R     MOV     A,package_count
000E C3                CLR     C
000F 9406              SUBB    A,#06H
0011 4003              JC      $ + 5H
0013 020000      R     LJMP    ?C0027
                                           ; SOURCE LINE # 207
0016 120000      E     LCALL   UART_RS485_GetChar
0019 8F00        R     MOV     rx_data,R7
                                           ; SOURCE LINE # 209
001B E500        R     MOV     A,state
001D 120000      E     LCALL   ?C?CCASE
0020 0000        R     DW      ?C0007
0022 00                DB      00H
0023 0000        R     DW      ?C0011
0025 01                DB      01H
0026 0000        R     DW      ?C0015
0028 02                DB      02H
0029 0000        R     DW      ?C0022
002B 03                DB      03H
002C 0000        R     DW      ?C0025
002E 04                DB      04H
002F 0000              DW      00H
0031 0000        R     DW      ?C0004
                                           ; SOURCE LINE # 211
0033         ?C0007:
                                           ; SOURCE LINE # 213
0033 850000      R     MOV     rx_queue,rx_queue+01H
                                           ; SOURCE LINE # 214
0036 850000      R     MOV     rx_queue+01H,rx_queue+02H
                                           ; SOURCE LINE # 215
0039 850000      R     MOV     rx_queue+02H,rx_data
                                           ; SOURCE LINE # 218
003C E500        R     MOV     A,rx_queue+01H
003E B43A13            CJNE    A,#03AH,?C0008
0041 E500        R     MOV     A,rx_queue+02H
0043 B43A0E            CJNE    A,#03AH,?C0008
                                           ; SOURCE LINE # 219
0046 750000      R     MOV     rx_queue,#00H
                                           ; SOURCE LINE # 220
0049 750000      R     MOV     rx_queue+01H,#00H
                                           ; SOURCE LINE # 221
004C 750000      R     MOV     rx_queue+02H,#00H
                                           ; SOURCE LINE # 222
004F 750001      R     MOV     state,#01H
                                           ; SOURCE LINE # 223
0052 80AF              SJMP    ?C0004
0054         ?C0008:
                                           ; SOURCE LINE # 224
0054 E500        R     MOV     A,rx_queue
0056 B43FAA            CJNE    A,#03FH,?C0004
0059 E500        R     MOV     A,rx_queue+01H
005B B40DA5            CJNE    A,#0DH,?C0004
005E E500        R     MOV     A,rx_queue+02H
0060 B40AA0            CJNE    A,#0AH,?C0004
                                           ; SOURCE LINE # 227
0063 7F00              MOV     R7,#00H
0065 7E00              MOV     R6,#00H
0067 120000      E     LCALL   _infoGet
                                           ; SOURCE LINE # 228
006A 8097              SJMP    ?C0004
                                           ; SOURCE LINE # 231
006C         ?C0011:
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 31  

                                           ; SOURCE LINE # 234
006C 900000      E     MOV     DPTR,#c_mem+01H
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 E500        R     MOV     A,rx_data
0073 6F                XRL     A,R7
0074 6004              JZ      ?C0013
0076 E500        R     MOV     A,rx_data
0078 7004              JNZ     ?C0012
007A         ?C0013:
                                           ; SOURCE LINE # 235
007A C200        R     CLR     rx_data_type
007C 8002              SJMP    ?C0014
007E         ?C0012:
                                           ; SOURCE LINE # 237
007E D200        R     SETB    rx_data_type
0080         ?C0014:
                                           ; SOURCE LINE # 239
0080 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 240
0083 750002      R     MOV     state,#02H
                                           ; SOURCE LINE # 241
0086 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 244
0089         ?C0015:
                                           ; SOURCE LINE # 247
0089 850000      R     MOV     data_packet_length,rx_data
                                           ; SOURCE LINE # 249
008C E500        R     MOV     A,data_packet_length
008E D3                SETB    C
008F 9401              SUBB    A,#01H
0091 5009              JNC     ?C0016
                                           ; SOURCE LINE # 250
0093 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 251
0096 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 252
0099 020000      R     LJMP    ?C0004
009C         ?C0016:
009C E500        R     MOV     A,data_packet_length
009E D3                SETB    C
009F 9480              SUBB    A,#080H
00A1 4009              JC      ?C0018
                                           ; SOURCE LINE # 253
00A3 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 254
00A6 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 255
00A9 020000      R     LJMP    ?C0004
00AC         ?C0018:
                                           ; SOURCE LINE # 256
00AC 750000      R     MOV     data_packet_index,#00H
                                           ; SOURCE LINE # 258
00AF 200006            JB      rx_data_type,?C0020
                                           ; SOURCE LINE # 259
00B2 750003      R     MOV     state,#03H
00B5 020000      R     LJMP    ?C0004
00B8         ?C0020:
                                           ; SOURCE LINE # 261
00B8 750004      R     MOV     state,#04H
                                           ; SOURCE LINE # 262
                                           ; SOURCE LINE # 263
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 32  

00BB 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 266
00BE         ?C0022:
                                           ; SOURCE LINE # 268
00BE AF00        R     MOV     R7,data_packet_index
00C0 7400        R     MOV     A,#LOW data_packet_buffer
00C2 2F                ADD     A,R7
00C3 F582              MOV     DPL,A
00C5 E4                CLR     A
00C6 3400        R     ADDC    A,#HIGH data_packet_buffer
00C8 F583              MOV     DPH,A
00CA E500        R     MOV     A,rx_data
00CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
00CD 0500        R     INC     data_packet_index
                                           ; SOURCE LINE # 272
00CF E500        R     MOV     A,data_packet_index
00D1 C3                CLR     C
00D2 9500        R     SUBB    A,data_packet_length
00D4 5003              JNC     $ + 5H
00D6 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 274
00D9 20003A            JB      rx_data_type,?C0024
                                           ; SOURCE LINE # 276
00DC AF00        R     MOV     R7,data_packet_length
00DE 7E00              MOV     R6,#00H
00E0 7B01              MOV     R3,#01H
00E2 7A00        R     MOV     R2,#HIGH data_packet_buffer
00E4 7900        R     MOV     R1,#LOW data_packet_buffer
00E6 C003              PUSH    AR3
00E8 C002              PUSH    AR2
00EA C001              PUSH    AR1
00EC 7B01              MOV     R3,#01H
00EE 7A00        E     MOV     R2,#HIGH g_rx
00F0 7900        E     MOV     R1,#LOW g_rx
00F2 A801              MOV     R0,AR1
00F4 AC02              MOV     R4,AR2
00F6 AD03              MOV     R5,AR3
00F8 D001              POP     AR1
00FA D002              POP     AR2
00FC D003              POP     AR3
00FE 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 277
0101 AF00        R     MOV     R7,data_packet_length
0103 7E00              MOV     R6,#00H
0105 900000      E     MOV     DPTR,#g_rx+080H
0108 EE                MOV     A,R6
0109 F0                MOVX    @DPTR,A
010A A3                INC     DPTR
010B EF                MOV     A,R7
010C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
010D 900000      E     MOV     DPTR,#g_rx+084H
0110 7401              MOV     A,#01H
0112 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
0113 120000      E     LCALL   commProcess
                                           ; SOURCE LINE # 280
0116         ?C0024:
                                           ; SOURCE LINE # 282
0116 750000      R     MOV     data_packet_index,#00H
                                           ; SOURCE LINE # 283
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 33  

0119 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 284
011C 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 285
011F 0500        R     INC     package_count
                                           ; SOURCE LINE # 287
                                           ; SOURCE LINE # 288
0121 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 291
0124         ?C0025:
                                           ; SOURCE LINE # 292
0124 1500        R     DEC     data_packet_length
0126 AF00        R     MOV     R7,data_packet_length
0128 EF                MOV     A,R7
0129 6003              JZ      $ + 5H
012B 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 293
012E 750000      R     MOV     data_packet_index,#00H
                                           ; SOURCE LINE # 294
0131 750000      R     MOV     data_packet_length,#00H
                                           ; SOURCE LINE # 295
0134 7F01              MOV     R7,#01H
0136 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 296
0139 7F00              MOV     R7,#00H
013B 120000      E     LCALL   _RS485_CTS_Write
                                           ; SOURCE LINE # 297
013E 750000      R     MOV     state,#00H
                                           ; SOURCE LINE # 298
0141 0500        R     INC     package_count
                                           ; SOURCE LINE # 299
                                           ; SOURCE LINE # 300
0143 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
0146 020000      R     LJMP    ?C0004
                                           ; SOURCE LINE # 303
0149         ?C0027:
0149 22                RET     
             ; FUNCTION interrupt_manager (END)

             ; FUNCTION function_scheduler (BEGIN)
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 315
0000 C200        R     CLR     write_cycles
                                           ; SOURCE LINE # 316
0002 120000      E     LCALL   MY_TIMER_ReadCounter
0005 900000      E     MOV     DPTR,#timer_value0
0008 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 320
000B 7F01              MOV     R7,#01H
000D 120000      E     LCALL   _ADC_SOC_Write
                                           ; SOURCE LINE # 324
0010 300007            JNB     interrupt_flag,?C0028
                                           ; SOURCE LINE # 325
0013 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 326
0015 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 327
0018 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 328
001A         ?C0028:
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 34  

                                           ; SOURCE LINE # 332
001A 7F00              MOV     R7,#00H
001C 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 336
001F 300007            JNB     interrupt_flag,?C0029
                                           ; SOURCE LINE # 337
0022 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 338
0024 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 339
0027 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 340
0029         ?C0029:
                                           ; SOURCE LINE # 342
0029 7F01              MOV     R7,#01H
002B 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 346
002E 300007            JNB     interrupt_flag,?C0030
                                           ; SOURCE LINE # 347
0031 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 348
0033 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 349
0036 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 350
0038         ?C0030:
                                           ; SOURCE LINE # 352
0038 7F02              MOV     R7,#02H
003A 120000      R     LCALL   _encoder_reading
                                           ; SOURCE LINE # 356
003D 300007            JNB     interrupt_flag,?C0031
                                           ; SOURCE LINE # 357
0040 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 358
0042 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 359
0045 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 360
0047         ?C0031:
                                           ; SOURCE LINE # 364
0047 120000      R     LCALL   motor_control
                                           ; SOURCE LINE # 368
004A 300007            JNB     interrupt_flag,?C0032
                                           ; SOURCE LINE # 369
004D C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 370
004F 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 371
0052 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 372
0054         ?C0032:
                                           ; SOURCE LINE # 376
0054 120000      R     LCALL   analog_read_end
                                           ; SOURCE LINE # 378
0057 300007            JNB     interrupt_flag,?C0033
                                           ; SOURCE LINE # 379
005A C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 380
005C 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 381
005F D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 382
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 35  

0061         ?C0033:
                                           ; SOURCE LINE # 386
0061 120000      R     LCALL   overcurrent_control
                                           ; SOURCE LINE # 390
0064 300007            JNB     interrupt_flag,?C0034
                                           ; SOURCE LINE # 391
0067 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 392
0069 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 393
006C D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 394
006E         ?C0034:
                                           ; SOURCE LINE # 399
006E 900000      E     MOV     DPTR,#calib
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 EF                MOV     A,R7
0074 B40123            CJNE    A,#01H,?C0035
                                           ; SOURCE LINE # 400
0077 900000      R     MOV     DPTR,#counter_calibration
007A E0                MOVX    A,@DPTR
007B FE                MOV     R6,A
007C A3                INC     DPTR
007D E0                MOVX    A,@DPTR
007E FF                MOV     R7,A
007F EF                MOV     A,R7
0080 640A              XRL     A,#0AH
0082 4E                ORL     A,R6
0083 700B              JNZ     ?C0036
                                           ; SOURCE LINE # 401
0085 120000      E     LCALL   calibration
                                           ; SOURCE LINE # 402
0088 900000      R     MOV     DPTR,#counter_calibration
008B E4                CLR     A
008C F0                MOVX    @DPTR,A
008D A3                INC     DPTR
008E E4                CLR     A
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 403
0090         ?C0036:
                                           ; SOURCE LINE # 404
0090 900000      R     MOV     DPTR,#counter_calibration
0093 E4                CLR     A
0094 75F001            MOV     B,#01H
0097 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 405
009A         ?C0035:
                                           ; SOURCE LINE # 409
009A 300007            JNB     interrupt_flag,?C0037
                                           ; SOURCE LINE # 410
009D C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 411
009F 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 412
00A2 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 413
00A4         ?C0037:
                                           ; SOURCE LINE # 418
00A4 900000      E     MOV     DPTR,#c_mem+0A6H
00A7 E0                MOVX    A,@DPTR
00A8 FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 36  

00A9 EF                MOV     A,R7
00AA B4012D            CJNE    A,#01H,?C0038
                                           ; SOURCE LINE # 419
00AD 900000      R     MOV     DPTR,#counter_calibration
00B0 E0                MOVX    A,@DPTR
00B1 FE                MOV     R6,A
00B2 A3                INC     DPTR
00B3 E0                MOVX    A,@DPTR
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 640A              XRL     A,#0AH
00B8 4E                ORL     A,R6
00B9 700B              JNZ     ?C0039
                                           ; SOURCE LINE # 420
00BB 120000      E     LCALL   check_rest_position
                                           ; SOURCE LINE # 421
00BE 900000      R     MOV     DPTR,#counter_calibration
00C1 E4                CLR     A
00C2 F0                MOVX    @DPTR,A
00C3 A3                INC     DPTR
00C4 E4                CLR     A
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 422
00C6         ?C0039:
                                           ; SOURCE LINE # 423
00C6 900000      R     MOV     DPTR,#counter_calibration
00C9 E4                CLR     A
00CA 75F001            MOV     B,#01H
00CD 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 426
00D0 300007            JNB     interrupt_flag,?C0038
                                           ; SOURCE LINE # 427
00D3 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 428
00D5 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 429
00D8 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 430
                                           ; SOURCE LINE # 431
00DA         ?C0038:
                                           ; SOURCE LINE # 435
00DA 120000      R     LCALL   cycles_counter_update
                                           ; SOURCE LINE # 439
00DD 300024            JNB     cycles_interrupt_flag,?C0041
                                           ; SOURCE LINE # 440
00E0 C200        E     CLR     cycles_interrupt_flag
                                           ; SOURCE LINE # 444
00E2 30001F            JNB     can_write,?C0041
                                           ; SOURCE LINE # 445
00E5 750000      E     MOV     cycles_status,#00H
                                           ; SOURCE LINE # 448
00E8 900000      E     MOV     DPTR,#g_mem+0F8H
00EB 120000      E     LCALL   ?C?LLDXDATA
00EE EF                MOV     A,R7
00EF 2478              ADD     A,#078H
00F1 FF                MOV     R7,A
00F2 EE                MOV     A,R6
00F3 3400              ADDC    A,#00H
00F5 FE                MOV     R6,A
00F6 ED                MOV     A,R5
00F7 3400              ADDC    A,#00H
00F9 FD                MOV     R5,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 37  

00FA EC                MOV     A,R4
00FB 3400              ADDC    A,#00H
00FD FC                MOV     R4,A
00FE 900000      E     MOV     DPTR,#g_mem+0F8H
0101 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 449
                                           ; SOURCE LINE # 450
0104         ?C0041:
                                           ; SOURCE LINE # 454
0104 300005            JNB     interrupt_flag,?C0043
                                           ; SOURCE LINE # 455
0107 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 456
0109 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 457
010C         ?C0043:
                                           ; SOURCE LINE # 462
010C 7B01              MOV     R3,#01H
010E 7A00        E     MOV     R2,#HIGH g_meas
0110 7900        E     MOV     R1,#LOW g_meas
0112 C003              PUSH    AR3
0114 C002              PUSH    AR2
0116 C001              PUSH    AR1
0118 7B01              MOV     R3,#01H
011A 7A00        E     MOV     R2,#HIGH g_measOld
011C 7900        E     MOV     R1,#LOW g_measOld
011E A801              MOV     R0,AR1
0120 AC02              MOV     R4,AR2
0122 AD03              MOV     R5,AR3
0124 D001              POP     AR1
0126 D002              POP     AR2
0128 D003              POP     AR3
012A 7E00              MOV     R6,#00H
012C 7F37              MOV     R7,#037H
012E 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 463
0131 7B01              MOV     R3,#01H
0133 7A00        E     MOV     R2,#HIGH g_ref
0135 7900        E     MOV     R1,#LOW g_ref
0137 C003              PUSH    AR3
0139 C002              PUSH    AR2
013B C001              PUSH    AR1
013D 7B01              MOV     R3,#01H
013F 7A00        E     MOV     R2,#HIGH g_refOld
0141 7900        E     MOV     R1,#LOW g_refOld
0143 A801              MOV     R0,AR1
0145 AC02              MOV     R4,AR2
0147 AD03              MOV     R5,AR3
0149 D001              POP     AR1
014B D002              POP     AR2
014D D003              POP     AR3
014F 7E00              MOV     R6,#00H
0151 7F1D              MOV     R7,#01DH
0153 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 466
0156 7B01              MOV     R3,#01H
0158 7A00        E     MOV     R2,#HIGH g_refNew
015A 7900        E     MOV     R1,#LOW g_refNew
015C C003              PUSH    AR3
015E C002              PUSH    AR2
0160 C001              PUSH    AR1
0162 7B01              MOV     R3,#01H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 38  

0164 7A00        E     MOV     R2,#HIGH g_ref
0166 7900        E     MOV     R1,#LOW g_ref
0168 A801              MOV     R0,AR1
016A AC02              MOV     R4,AR2
016C AD03              MOV     R5,AR3
016E D001              POP     AR1
0170 D002              POP     AR2
0172 D003              POP     AR3
0174 7E00              MOV     R6,#00H
0176 7F1D              MOV     R7,#01DH
0178 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 468
017B 300007            JNB     interrupt_flag,?C0044
                                           ; SOURCE LINE # 469
017E C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 470
0180 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 471
0183 D200        R     SETB    write_cycles
                                           ; SOURCE LINE # 472
0185         ?C0044:
                                           ; SOURCE LINE # 474
0185 120000      E     LCALL   MY_TIMER_ReadCounter
0188 900000      E     MOV     DPTR,#timer_value
018B 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 475
018E 900000      E     MOV     DPTR,#timer_value
0191 120000      E     LCALL   ?C?LLDXDATA0
0194 900000      E     MOV     DPTR,#timer_value0
0197 120000      E     LCALL   ?C?LLDXDATA
019A 120000      E     LCALL   ?C?LSUB
019D E4                CLR     A
019E 120000      E     LCALL   ?C?FCASTL
01A1 7B00              MOV     R3,#00H
01A3 7A24              MOV     R2,#024H
01A5 7974              MOV     R1,#074H
01A7 7849              MOV     R0,#049H
01A9 120000      E     LCALL   ?C?FPDIV
01AC 900000      E     MOV     DPTR,#cycle_time
01AF 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 476
01B2 7F40              MOV     R7,#040H
01B4 7E4B              MOV     R6,#04BH
01B6 7D4C              MOV     R5,#04CH
01B8 7C00              MOV     R4,#00H
01BA 120000      E     LCALL   _MY_TIMER_WriteCounter
                                           ; SOURCE LINE # 478
01BD 22                RET     
             ; FUNCTION function_scheduler (END)

             ; FUNCTION motor_control (BEGIN)
                                           ; SOURCE LINE # 484
                                           ; SOURCE LINE # 486
0000 7F00              MOV     R7,#00H
0002 7E00              MOV     R6,#00H
0004 7D00              MOV     R5,#00H
0006 7C00              MOV     R4,#00H
0008 8F00        R     MOV     pwm_input+03H,R7
000A 8E00        R     MOV     pwm_input+02H,R6
000C 8D00        R     MOV     pwm_input+01H,R5
000E 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 496
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 39  

0010 900000      E     MOV     DPTR,#c_mem+02H
0013 120000      E     LCALL   ?C?LLDXDATA
0016 8F00        R     MOV     k_p+03H,R7
0018 8E00        R     MOV     k_p+02H,R6
001A 8D00        R     MOV     k_p+01H,R5
001C 8C00        R     MOV     k_p,R4
                                           ; SOURCE LINE # 497
001E 900000      E     MOV     DPTR,#c_mem+06H
0021 120000      E     LCALL   ?C?LLDXDATA
0024 8F00        R     MOV     k_i+03H,R7
0026 8E00        R     MOV     k_i+02H,R6
0028 8D00        R     MOV     k_i+01H,R5
002A 8C00        R     MOV     k_i,R4
                                           ; SOURCE LINE # 498
002C 900000      E     MOV     DPTR,#c_mem+0AH
002F 120000      E     LCALL   ?C?LLDXDATA
0032 8F00        R     MOV     k_d+03H,R7
0034 8E00        R     MOV     k_d+02H,R6
0036 8D00        R     MOV     k_d+01H,R5
0038 8C00        R     MOV     k_d,R4
                                           ; SOURCE LINE # 500
003A 900000      E     MOV     DPTR,#c_mem+0EH
003D 120000      E     LCALL   ?C?LLDXDATA
0040 8F00        R     MOV     k_p_c+03H,R7
0042 8E00        R     MOV     k_p_c+02H,R6
0044 8D00        R     MOV     k_p_c+01H,R5
0046 8C00        R     MOV     k_p_c,R4
                                           ; SOURCE LINE # 501
0048 900000      E     MOV     DPTR,#c_mem+012H
004B 120000      E     LCALL   ?C?LLDXDATA
004E 8F00        R     MOV     k_i_c+03H,R7
0050 8E00        R     MOV     k_i_c+02H,R6
0052 8D00        R     MOV     k_i_c+01H,R5
0054 8C00        R     MOV     k_i_c,R4
                                           ; SOURCE LINE # 502
0056 900000      E     MOV     DPTR,#c_mem+016H
0059 120000      E     LCALL   ?C?LLDXDATA
005C 8F00        R     MOV     k_d_c+03H,R7
005E 8E00        R     MOV     k_d_c+02H,R6
0060 8D00        R     MOV     k_d_c+01H,R5
0062 8C00        R     MOV     k_d_c,R4
                                           ; SOURCE LINE # 504
0064 900000      E     MOV     DPTR,#c_mem+01AH
0067 120000      E     LCALL   ?C?LLDXDATA
006A 8F00        R     MOV     k_p_dl+03H,R7
006C 8E00        R     MOV     k_p_dl+02H,R6
006E 8D00        R     MOV     k_p_dl+01H,R5
0070 8C00        R     MOV     k_p_dl,R4
                                           ; SOURCE LINE # 505
0072 900000      E     MOV     DPTR,#c_mem+01EH
0075 120000      E     LCALL   ?C?LLDXDATA
0078 8F00        R     MOV     k_i_dl+03H,R7
007A 8E00        R     MOV     k_i_dl+02H,R6
007C 8D00        R     MOV     k_i_dl+01H,R5
007E 8C00        R     MOV     k_i_dl,R4
                                           ; SOURCE LINE # 506
0080 900000      E     MOV     DPTR,#c_mem+022H
0083 120000      E     LCALL   ?C?LLDXDATA
0086 8F00        R     MOV     k_d_dl+03H,R7
0088 8E00        R     MOV     k_d_dl+02H,R6
008A 8D00        R     MOV     k_d_dl+01H,R5
008C 8C00        R     MOV     k_d_dl,R4
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 40  

                                           ; SOURCE LINE # 507
008E 900000      E     MOV     DPTR,#c_mem+069H
0091 E0                MOVX    A,@DPTR
0092 FE                MOV     R6,A
0093 A3                INC     DPTR
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EE                MOV     A,R6
0097 33                RLC     A
0098 95E0              SUBB    A,ACC
009A FD                MOV     R5,A
009B FC                MOV     R4,A
009C 780D              MOV     R0,#0DH
009E 120000      E     LCALL   ?C?LSHL
00A1 AB00        R     MOV     R3,k_p_dl+03H
00A3 AA00        R     MOV     R2,k_p_dl+02H
00A5 A900        R     MOV     R1,k_p_dl+01H
00A7 A800        R     MOV     R0,k_p_dl
00A9 120000      E     LCALL   ?C?SLDIV
00AC 8F00        R     MOV     pos_error_max+03H,R7
00AE 8E00        R     MOV     pos_error_max+02H,R6
00B0 8D00        R     MOV     pos_error_max+01H,R5
00B2 8C00        R     MOV     pos_error_max,R4
                                           ; SOURCE LINE # 509
00B4 900000      E     MOV     DPTR,#c_mem+026H
00B7 120000      E     LCALL   ?C?LLDXDATA
00BA 8F00        R     MOV     k_p_c_dl+03H,R7
00BC 8E00        R     MOV     k_p_c_dl+02H,R6
00BE 8D00        R     MOV     k_p_c_dl+01H,R5
00C0 8C00        R     MOV     k_p_c_dl,R4
                                           ; SOURCE LINE # 510
00C2 900000      E     MOV     DPTR,#c_mem+02AH
00C5 120000      E     LCALL   ?C?LLDXDATA
00C8 8F00        R     MOV     k_i_c_dl+03H,R7
00CA 8E00        R     MOV     k_i_c_dl+02H,R6
00CC 8D00        R     MOV     k_i_c_dl+01H,R5
00CE 8C00        R     MOV     k_i_c_dl,R4
                                           ; SOURCE LINE # 511
00D0 900000      E     MOV     DPTR,#c_mem+02EH
00D3 120000      E     LCALL   ?C?LLDXDATA
00D6 8F00        R     MOV     k_d_c_dl+03H,R7
00D8 8E00        R     MOV     k_d_c_dl+02H,R6
00DA 8D00        R     MOV     k_d_c_dl+01H,R5
00DC 8C00        R     MOV     k_d_c_dl,R4
                                           ; SOURCE LINE # 528
00DE 900000      E     MOV     DPTR,#c_mem+06BH
00E1 E0                MOVX    A,@DPTR
00E2 FE                MOV     R6,A
00E3 A3                INC     DPTR
00E4 E0                MOVX    A,@DPTR
00E5 FF                MOV     R7,A
00E6 AB07              MOV     R3,AR7
00E8 AA06              MOV     R2,AR6
00EA E4                CLR     A
00EB F9                MOV     R1,A
00EC F8                MOV     R0,A
00ED 900000      E     MOV     DPTR,#g_meas+017H
00F0 120000      E     LCALL   ?C?LLDXDATA
00F3 120000      E     LCALL   ?C?LSUB
00F6 8F00        R     MOV     err_emg_1+03H,R7
00F8 8E00        R     MOV     err_emg_1+02H,R6
00FA 8D00        R     MOV     err_emg_1+01H,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 41  

00FC 8C00        R     MOV     err_emg_1,R4
                                           ; SOURCE LINE # 529
00FE 900000      E     MOV     DPTR,#c_mem+06DH
0101 E0                MOVX    A,@DPTR
0102 FE                MOV     R6,A
0103 A3                INC     DPTR
0104 E0                MOVX    A,@DPTR
0105 FF                MOV     R7,A
0106 AB07              MOV     R3,AR7
0108 AA06              MOV     R2,AR6
010A E4                CLR     A
010B F9                MOV     R1,A
010C F8                MOV     R0,A
010D 900000      E     MOV     DPTR,#g_meas+01BH
0110 120000      E     LCALL   ?C?LLDXDATA
0113 120000      E     LCALL   ?C?LSUB
0116 8F00        R     MOV     err_emg_2+03H,R7
0118 8E00        R     MOV     err_emg_2+02H,R6
011A 8D00        R     MOV     err_emg_2+01H,R5
011C 8C00        R     MOV     err_emg_2,R4
                                           ; SOURCE LINE # 532
011E 900000      E     MOV     DPTR,#c_mem+033H
0121 E0                MOVX    A,@DPTR
0122 FF                MOV     R7,A
0123 EF                MOV     A,R7
0124 120000      E     LCALL   ?C?CCASE
0127 0000        R     DW      ?C0047
0129 01                DB      01H
012A 0000        R     DW      ?C0054
012C 02                DB      02H
012D 0000        R     DW      ?C0057
012F 03                DB      03H
0130 0000        R     DW      ?C0060
0132 04                DB      04H
0133 0000        R     DW      ?C0070
0135 05                DB      05H
0136 0000              DW      00H
0138 0000        R     DW      ?C0046
                                           ; SOURCE LINE # 534
013A         ?C0047:
                                           ; SOURCE LINE # 538
013A 900000      E     MOV     DPTR,#c_mem+079H
013D E0                MOVX    A,@DPTR
013E FF                MOV     R7,A
013F EF                MOV     A,R7
0140 601F              JZ      ?C0048
                                           ; SOURCE LINE # 539
0142 900000      E     MOV     DPTR,#c_mem+07AH
0145 E0                MOVX    A,@DPTR
0146 FF                MOV     R7,A
0147 EF                MOV     A,R7
0148 33                RLC     A
0149 95E0              SUBB    A,ACC
014B FE                MOV     R6,A
014C FD                MOV     R5,A
014D FC                MOV     R4,A
014E 900000      E     MOV     DPTR,#g_meas+08H
0151 120000      E     LCALL   ?C?LLDXDATA0
0154 120000      E     LCALL   ?C?LMUL
0157 8F00        R     MOV     handle_value+03H,R7
0159 8E00        R     MOV     handle_value+02H,R6
015B 8D00        R     MOV     handle_value+01H,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 42  

015D 8C00        R     MOV     handle_value,R4
015F 801D              SJMP    ?C0049
0161         ?C0048:
                                           ; SOURCE LINE # 541
0161 900000      E     MOV     DPTR,#c_mem+07AH
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 EF                MOV     A,R7
0167 33                RLC     A
0168 95E0              SUBB    A,ACC
016A FE                MOV     R6,A
016B FD                MOV     R5,A
016C FC                MOV     R4,A
016D 900000      E     MOV     DPTR,#g_meas+04H
0170 120000      E     LCALL   ?C?LLDXDATA0
0173 120000      E     LCALL   ?C?LMUL
0176 8F00        R     MOV     handle_value+03H,R7
0178 8E00        R     MOV     handle_value+02H,R6
017A 8D00        R     MOV     handle_value+01H,R5
017C 8C00        R     MOV     handle_value,R4
017E         ?C0049:
                                           ; SOURCE LINE # 545
017E 900000      E     MOV     DPTR,#g_ref
0181 120000      E     LCALL   ?C?LLDXDATA0
0184 C3                CLR     C
0185 E500        R     MOV     A,handle_value+03H
0187 9B                SUBB    A,R3
0188 FF                MOV     R7,A
0189 E500        R     MOV     A,handle_value+02H
018B 9A                SUBB    A,R2
018C FE                MOV     R6,A
018D E500        R     MOV     A,handle_value+01H
018F 99                SUBB    A,R1
0190 FD                MOV     R5,A
0191 E500        R     MOV     A,handle_value
0193 98                SUBB    A,R0
0194 FC                MOV     R4,A
0195 900000      E     MOV     DPTR,#c_mem+061H
0198 120000      E     LCALL   ?C?LLDXDATA0
019B C3                CLR     C
019C 120000      E     LCALL   ?C?SLCMP
019F 502C              JNC     ?C0050
01A1 7F00              MOV     R7,#00H
01A3 7E00              MOV     R6,#00H
01A5 7D00              MOV     R5,#00H
01A7 7C00              MOV     R4,#00H
01A9 900000      E     MOV     DPTR,#c_mem+061H
01AC 120000      E     LCALL   ?C?LLDXDATA0
01AF C3                CLR     C
01B0 120000      E     LCALL   ?C?SLCMP
01B3 6018              JZ      ?C0050
                                           ; SOURCE LINE # 546
01B5 900000      E     MOV     DPTR,#g_ref
01B8 120000      E     LCALL   ?C?LLDXDATA
01BB 900000      E     MOV     DPTR,#c_mem+061H
01BE 120000      E     LCALL   ?C?LLDXDATA0
01C1 120000      E     LCALL   ?C?LADD
01C4 900000      E     MOV     DPTR,#g_ref
01C7 120000      E     LCALL   ?C?LSTXDATA
01CA 020000      R     LJMP    ?C0046
01CD         ?C0050:
                                           ; SOURCE LINE # 547
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 43  

                                           ; SOURCE LINE # 548
01CD 900000      E     MOV     DPTR,#g_ref
01D0 120000      E     LCALL   ?C?LLDXDATA0
01D3 C3                CLR     C
01D4 E500        R     MOV     A,handle_value+03H
01D6 9B                SUBB    A,R3
01D7 FF                MOV     R7,A
01D8 E500        R     MOV     A,handle_value+02H
01DA 9A                SUBB    A,R2
01DB FE                MOV     R6,A
01DC E500        R     MOV     A,handle_value+01H
01DE 99                SUBB    A,R1
01DF FD                MOV     R5,A
01E0 E500        R     MOV     A,handle_value
01E2 98                SUBB    A,R0
01E3 FC                MOV     R4,A
01E4 900000      E     MOV     DPTR,#c_mem+065H
01E7 120000      E     LCALL   ?C?LLDXDATA0
01EA D3                SETB    C
01EB 120000      E     LCALL   ?C?SLCMP
01EE 402C              JC      ?C0052
01F0 7F00              MOV     R7,#00H
01F2 7E00              MOV     R6,#00H
01F4 7D00              MOV     R5,#00H
01F6 7C00              MOV     R4,#00H
01F8 900000      E     MOV     DPTR,#c_mem+065H
01FB 120000      E     LCALL   ?C?LLDXDATA0
01FE C3                CLR     C
01FF 120000      E     LCALL   ?C?SLCMP
0202 6018              JZ      ?C0052
                                           ; SOURCE LINE # 549
0204 900000      E     MOV     DPTR,#g_ref
0207 120000      E     LCALL   ?C?LLDXDATA
020A 900000      E     MOV     DPTR,#c_mem+065H
020D 120000      E     LCALL   ?C?LLDXDATA0
0210 120000      E     LCALL   ?C?LADD
0213 900000      E     MOV     DPTR,#g_ref
0216 120000      E     LCALL   ?C?LSTXDATA
0219 020000      R     LJMP    ?C0046
021C         ?C0052:
                                           ; SOURCE LINE # 551
021C AF00        R     MOV     R7,handle_value+03H
021E AE00        R     MOV     R6,handle_value+02H
0220 AD00        R     MOV     R5,handle_value+01H
0222 AC00        R     MOV     R4,handle_value
0224 900000      E     MOV     DPTR,#g_ref
0227 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 552
                                           ; SOURCE LINE # 553
022A 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 555
022D         ?C0054:
                                           ; SOURCE LINE # 556
022D 7F00              MOV     R7,#00H
022F 7E00              MOV     R6,#00H
0231 7D00              MOV     R5,#00H
0233 7C00              MOV     R4,#00H
0235 AB00        R     MOV     R3,err_emg_1+03H
0237 AA00        R     MOV     R2,err_emg_1+02H
0239 A900        R     MOV     R1,err_emg_1+01H
023B A800        R     MOV     R0,err_emg_1
023D D3                SETB    C
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 44  

023E 120000      E     LCALL   ?C?SLCMP
0241 4044              JC      ?C0055
                                           ; SOURCE LINE # 557
0243 900000      E     MOV     DPTR,#g_mem+059H
0246 120000      E     LCALL   ?C?LLDXDATA
0249 AB00        R     MOV     R3,err_emg_1+03H
024B AA00        R     MOV     R2,err_emg_1+02H
024D A900        R     MOV     R1,err_emg_1+01H
024F A800        R     MOV     R0,err_emg_1
0251 120000      E     LCALL   ?C?LMUL
0254 C004              PUSH    AR4
0256 C005              PUSH    AR5
0258 C006              PUSH    AR6
025A C007              PUSH    AR7
025C 900000      E     MOV     DPTR,#c_mem+06BH
025F E0                MOVX    A,@DPTR
0260 FE                MOV     R6,A
0261 A3                INC     DPTR
0262 E0                MOVX    A,@DPTR
0263 FF                MOV     R7,A
0264 C3                CLR     C
0265 E4                CLR     A
0266 9F                SUBB    A,R7
0267 FF                MOV     R7,A
0268 7404              MOV     A,#04H
026A 9E                SUBB    A,R6
026B FE                MOV     R6,A
026C AB07              MOV     R3,AR7
026E AA06              MOV     R2,AR6
0270 E4                CLR     A
0271 F9                MOV     R1,A
0272 F8                MOV     R0,A
0273 D007              POP     AR7
0275 D006              POP     AR6
0277 D005              POP     AR5
0279 D004              POP     AR4
027B 120000      E     LCALL   ?C?SLDIV
027E 900000      E     MOV     DPTR,#g_ref
0281 120000      E     LCALL   ?C?LSTXDATA
0284 020000      R     LJMP    ?C0046
0287         ?C0055:
                                           ; SOURCE LINE # 559
0287 7F00              MOV     R7,#00H
0289 7E00              MOV     R6,#00H
028B 7D00              MOV     R5,#00H
028D 7C00              MOV     R4,#00H
028F 900000      E     MOV     DPTR,#g_ref
0292 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 560
0295 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 562
0298         ?C0057:
                                           ; SOURCE LINE # 563
0298 900000      E     MOV     DPTR,#g_refOld
029B 120000      E     LCALL   ?C?LLDXDATA
029E 900000      E     MOV     DPTR,#g_ref
02A1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 564
02A4 7F00              MOV     R7,#00H
02A6 7E00              MOV     R6,#00H
02A8 7D00              MOV     R5,#00H
02AA 7C00              MOV     R4,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 45  

02AC AB00        R     MOV     R3,err_emg_1+03H
02AE AA00        R     MOV     R2,err_emg_1+02H
02B0 A900        R     MOV     R1,err_emg_1+01H
02B2 A800        R     MOV     R0,err_emg_1
02B4 D3                SETB    C
02B5 120000      E     LCALL   ?C?SLCMP
02B8 4058              JC      ?C0058
                                           ; SOURCE LINE # 565
02BA 900000      E     MOV     DPTR,#g_mem+078H
02BD E0                MOVX    A,@DPTR
02BE FF                MOV     R7,A
02BF E4                CLR     A
02C0 FC                MOV     R4,A
02C1 FD                MOV     R5,A
02C2 FE                MOV     R6,A
02C3 AB00        R     MOV     R3,err_emg_1+03H
02C5 AA00        R     MOV     R2,err_emg_1+02H
02C7 A900        R     MOV     R1,err_emg_1+01H
02C9 A800        R     MOV     R0,err_emg_1
02CB 120000      E     LCALL   ?C?LMUL
02CE 7B02              MOV     R3,#02H
02D0 7A00              MOV     R2,#00H
02D2 7900              MOV     R1,#00H
02D4 7800              MOV     R0,#00H
02D6 120000      E     LCALL   ?C?LMUL
02D9 C004              PUSH    AR4
02DB C005              PUSH    AR5
02DD C006              PUSH    AR6
02DF C007              PUSH    AR7
02E1 900000      E     MOV     DPTR,#c_mem+06BH
02E4 E0                MOVX    A,@DPTR
02E5 FE                MOV     R6,A
02E6 A3                INC     DPTR
02E7 E0                MOVX    A,@DPTR
02E8 FF                MOV     R7,A
02E9 C3                CLR     C
02EA E4                CLR     A
02EB 9F                SUBB    A,R7
02EC FF                MOV     R7,A
02ED 7404              MOV     A,#04H
02EF 9E                SUBB    A,R6
02F0 FE                MOV     R6,A
02F1 AB07              MOV     R3,AR7
02F3 AA06              MOV     R2,AR6
02F5 E4                CLR     A
02F6 F9                MOV     R1,A
02F7 F8                MOV     R0,A
02F8 D007              POP     AR7
02FA D006              POP     AR6
02FC D005              POP     AR5
02FE D004              POP     AR4
0300 120000      E     LCALL   ?C?SLDIV
0303 900000      E     MOV     DPTR,#g_refOld
0306 120000      E     LCALL   ?C?LLDXDATA0
0309 120000      E     LCALL   ?C?LADD
030C 900000      E     MOV     DPTR,#g_ref
030F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 566
0312         ?C0058:
                                           ; SOURCE LINE # 567
0312 7F00              MOV     R7,#00H
0314 7E00              MOV     R6,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 46  

0316 7D00              MOV     R5,#00H
0318 7C00              MOV     R4,#00H
031A AB00        R     MOV     R3,err_emg_2+03H
031C AA00        R     MOV     R2,err_emg_2+02H
031E A900        R     MOV     R1,err_emg_2+01H
0320 A800        R     MOV     R0,err_emg_2
0322 D3                SETB    C
0323 120000      E     LCALL   ?C?SLCMP
0326 5003              JNC     $ + 5H
0328 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 568
032B 900000      E     MOV     DPTR,#g_mem+078H
032E E0                MOVX    A,@DPTR
032F FF                MOV     R7,A
0330 E4                CLR     A
0331 FC                MOV     R4,A
0332 FD                MOV     R5,A
0333 FE                MOV     R6,A
0334 AB00        R     MOV     R3,err_emg_2+03H
0336 AA00        R     MOV     R2,err_emg_2+02H
0338 A900        R     MOV     R1,err_emg_2+01H
033A A800        R     MOV     R0,err_emg_2
033C 120000      E     LCALL   ?C?LMUL
033F 7B02              MOV     R3,#02H
0341 7A00              MOV     R2,#00H
0343 7900              MOV     R1,#00H
0345 7800              MOV     R0,#00H
0347 120000      E     LCALL   ?C?LMUL
034A C004              PUSH    AR4
034C C005              PUSH    AR5
034E C006              PUSH    AR6
0350 C007              PUSH    AR7
0352 900000      E     MOV     DPTR,#c_mem+06DH
0355 E0                MOVX    A,@DPTR
0356 FE                MOV     R6,A
0357 A3                INC     DPTR
0358 E0                MOVX    A,@DPTR
0359 FF                MOV     R7,A
035A C3                CLR     C
035B E4                CLR     A
035C 9F                SUBB    A,R7
035D FF                MOV     R7,A
035E 7404              MOV     A,#04H
0360 9E                SUBB    A,R6
0361 FE                MOV     R6,A
0362 AB07              MOV     R3,AR7
0364 AA06              MOV     R2,AR6
0366 E4                CLR     A
0367 F9                MOV     R1,A
0368 F8                MOV     R0,A
0369 D007              POP     AR7
036B D006              POP     AR6
036D D005              POP     AR5
036F D004              POP     AR4
0371 120000      E     LCALL   ?C?SLDIV
0374 A804              MOV     R0,AR4
0376 A905              MOV     R1,AR5
0378 AA06              MOV     R2,AR6
037A AB07              MOV     R3,AR7
037C 900000      E     MOV     DPTR,#g_refOld
037F 120000      E     LCALL   ?C?LLDXDATA
0382 120000      E     LCALL   ?C?LSUB
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 47  

0385 900000      E     MOV     DPTR,#g_ref
0388 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 570
038B 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 572
038E         ?C0060:
                                           ; SOURCE LINE # 573
038E 900000      E     MOV     DPTR,#g_refOld
0391 120000      E     LCALL   ?C?LLDXDATA
0394 900000      E     MOV     DPTR,#g_ref
0397 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 574
039A 900000      R     MOV     DPTR,#current_emg
039D E0                MOVX    A,@DPTR
039E FF                MOV     R7,A
039F EF                MOV     A,R7
03A0 120000      E     LCALL   ?C?CCASE
03A3 0000        R     DW      ?C0062
03A5 00                DB      00H
03A6 0000        R     DW      ?C0065
03A8 01                DB      01H
03A9 0000        R     DW      ?C0067
03AB 02                DB      02H
03AC 0000              DW      00H
03AE 0000        R     DW      ?C0046
                                           ; SOURCE LINE # 575
03B0         ?C0062:
                                           ; SOURCE LINE # 577
03B0 7F00              MOV     R7,#00H
03B2 7E00              MOV     R6,#00H
03B4 7D00              MOV     R5,#00H
03B6 7C00              MOV     R4,#00H
03B8 AB00        R     MOV     R3,err_emg_1+03H
03BA AA00        R     MOV     R2,err_emg_1+02H
03BC A900        R     MOV     R1,err_emg_1+01H
03BE A800        R     MOV     R0,err_emg_1
03C0 D3                SETB    C
03C1 120000      E     LCALL   ?C?SLCMP
03C4 4009              JC      ?C0063
                                           ; SOURCE LINE # 578
03C6 900000      R     MOV     DPTR,#current_emg
03C9 7401              MOV     A,#01H
03CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 579
03CC 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 580
03CF         ?C0063:
                                           ; SOURCE LINE # 581
03CF 7F00              MOV     R7,#00H
03D1 7E00              MOV     R6,#00H
03D3 7D00              MOV     R5,#00H
03D5 7C00              MOV     R4,#00H
03D7 AB00        R     MOV     R3,err_emg_2+03H
03D9 AA00        R     MOV     R2,err_emg_2+02H
03DB A900        R     MOV     R1,err_emg_2+01H
03DD A800        R     MOV     R0,err_emg_2
03DF D3                SETB    C
03E0 120000      E     LCALL   ?C?SLCMP
03E3 5003              JNC     $ + 5H
03E5 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 582
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 48  

03E8 900000      R     MOV     DPTR,#current_emg
03EB 7402              MOV     A,#02H
03ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 583
03EE 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 584
                                           ; SOURCE LINE # 585
                                           ; SOURCE LINE # 587
03F1         ?C0065:
                                           ; SOURCE LINE # 589
03F1 7F00              MOV     R7,#00H
03F3 7E00              MOV     R6,#00H
03F5 7D00              MOV     R5,#00H
03F7 7C00              MOV     R4,#00H
03F9 AB00        R     MOV     R3,err_emg_1+03H
03FB AA00        R     MOV     R2,err_emg_1+02H
03FD A900        R     MOV     R1,err_emg_1+01H
03FF A800        R     MOV     R0,err_emg_1
0401 C3                CLR     C
0402 120000      E     LCALL   ?C?SLCMP
0405 5008              JNC     ?C0066
                                           ; SOURCE LINE # 590
0407 900000      R     MOV     DPTR,#current_emg
040A E4                CLR     A
040B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 591
040C 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 592
040F         ?C0066:
                                           ; SOURCE LINE # 593
040F 900000      E     MOV     DPTR,#g_mem+078H
0412 E0                MOVX    A,@DPTR
0413 FF                MOV     R7,A
0414 E4                CLR     A
0415 FC                MOV     R4,A
0416 FD                MOV     R5,A
0417 FE                MOV     R6,A
0418 AB00        R     MOV     R3,err_emg_1+03H
041A AA00        R     MOV     R2,err_emg_1+02H
041C A900        R     MOV     R1,err_emg_1+01H
041E A800        R     MOV     R0,err_emg_1
0420 120000      E     LCALL   ?C?LMUL
0423 7B02              MOV     R3,#02H
0425 7A00              MOV     R2,#00H
0427 7900              MOV     R1,#00H
0429 7800              MOV     R0,#00H
042B 120000      E     LCALL   ?C?LMUL
042E C004              PUSH    AR4
0430 C005              PUSH    AR5
0432 C006              PUSH    AR6
0434 C007              PUSH    AR7
0436 900000      E     MOV     DPTR,#c_mem+06BH
0439 E0                MOVX    A,@DPTR
043A FE                MOV     R6,A
043B A3                INC     DPTR
043C E0                MOVX    A,@DPTR
043D FF                MOV     R7,A
043E C3                CLR     C
043F E4                CLR     A
0440 9F                SUBB    A,R7
0441 FF                MOV     R7,A
0442 7404              MOV     A,#04H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 49  

0444 9E                SUBB    A,R6
0445 FE                MOV     R6,A
0446 AB07              MOV     R3,AR7
0448 AA06              MOV     R2,AR6
044A E4                CLR     A
044B F9                MOV     R1,A
044C F8                MOV     R0,A
044D D007              POP     AR7
044F D006              POP     AR6
0451 D005              POP     AR5
0453 D004              POP     AR4
0455 120000      E     LCALL   ?C?SLDIV
0458 900000      E     MOV     DPTR,#g_refOld
045B 120000      E     LCALL   ?C?LLDXDATA0
045E 120000      E     LCALL   ?C?LADD
0461 900000      E     MOV     DPTR,#g_ref
0464 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 594
0467 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 596
046A         ?C0067:
                                           ; SOURCE LINE # 598
046A 7F00              MOV     R7,#00H
046C 7E00              MOV     R6,#00H
046E 7D00              MOV     R5,#00H
0470 7C00              MOV     R4,#00H
0472 AB00        R     MOV     R3,err_emg_2+03H
0474 AA00        R     MOV     R2,err_emg_2+02H
0476 A900        R     MOV     R1,err_emg_2+01H
0478 A800        R     MOV     R0,err_emg_2
047A C3                CLR     C
047B 120000      E     LCALL   ?C?SLCMP
047E 5008              JNC     ?C0068
                                           ; SOURCE LINE # 599
0480 900000      R     MOV     DPTR,#current_emg
0483 E4                CLR     A
0484 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
0485 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 601
0488         ?C0068:
                                           ; SOURCE LINE # 602
0488 900000      E     MOV     DPTR,#g_mem+078H
048B E0                MOVX    A,@DPTR
048C FF                MOV     R7,A
048D E4                CLR     A
048E FC                MOV     R4,A
048F FD                MOV     R5,A
0490 FE                MOV     R6,A
0491 AB00        R     MOV     R3,err_emg_2+03H
0493 AA00        R     MOV     R2,err_emg_2+02H
0495 A900        R     MOV     R1,err_emg_2+01H
0497 A800        R     MOV     R0,err_emg_2
0499 120000      E     LCALL   ?C?LMUL
049C 7B02              MOV     R3,#02H
049E 7A00              MOV     R2,#00H
04A0 7900              MOV     R1,#00H
04A2 7800              MOV     R0,#00H
04A4 120000      E     LCALL   ?C?LMUL
04A7 C004              PUSH    AR4
04A9 C005              PUSH    AR5
04AB C006              PUSH    AR6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 50  

04AD C007              PUSH    AR7
04AF 900000      E     MOV     DPTR,#c_mem+06DH
04B2 E0                MOVX    A,@DPTR
04B3 FE                MOV     R6,A
04B4 A3                INC     DPTR
04B5 E0                MOVX    A,@DPTR
04B6 FF                MOV     R7,A
04B7 C3                CLR     C
04B8 E4                CLR     A
04B9 9F                SUBB    A,R7
04BA FF                MOV     R7,A
04BB 7404              MOV     A,#04H
04BD 9E                SUBB    A,R6
04BE FE                MOV     R6,A
04BF AB07              MOV     R3,AR7
04C1 AA06              MOV     R2,AR6
04C3 E4                CLR     A
04C4 F9                MOV     R1,A
04C5 F8                MOV     R0,A
04C6 D007              POP     AR7
04C8 D006              POP     AR6
04CA D005              POP     AR5
04CC D004              POP     AR4
04CE 120000      E     LCALL   ?C?SLDIV
04D1 A804              MOV     R0,AR4
04D3 A905              MOV     R1,AR5
04D5 AA06              MOV     R2,AR6
04D7 AB07              MOV     R3,AR7
04D9 900000      E     MOV     DPTR,#g_refOld
04DC 120000      E     LCALL   ?C?LLDXDATA
04DF 120000      E     LCALL   ?C?LSUB
04E2 900000      E     MOV     DPTR,#g_ref
04E5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 603
04E8 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 605
                                           ; SOURCE LINE # 606
                                           ; SOURCE LINE # 607
                                           ; SOURCE LINE # 609
04EB 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 611
04EE         ?C0070:
                                           ; SOURCE LINE # 612
04EE 900000      E     MOV     DPTR,#g_refOld
04F1 120000      E     LCALL   ?C?LLDXDATA
04F4 900000      E     MOV     DPTR,#g_ref
04F7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 613
04FA 900000      R     MOV     DPTR,#current_emg
04FD E0                MOVX    A,@DPTR
04FE FF                MOV     R7,A
04FF EF                MOV     A,R7
0500 120000      E     LCALL   ?C?CCASE
0503 0000        R     DW      ?C0072
0505 00                DB      00H
0506 0000        R     DW      ?C0075
0508 01                DB      01H
0509 0000        R     DW      ?C0078
050B 02                DB      02H
050C 0000              DW      00H
050E 0000        R     DW      ?C0046
                                           ; SOURCE LINE # 615
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 51  

0510         ?C0072:
                                           ; SOURCE LINE # 616
0510 7F00              MOV     R7,#00H
0512 7E00              MOV     R6,#00H
0514 7D00              MOV     R5,#00H
0516 7C00              MOV     R4,#00H
0518 AB00        R     MOV     R3,err_emg_1+03H
051A AA00        R     MOV     R2,err_emg_1+02H
051C A900        R     MOV     R1,err_emg_1+01H
051E A800        R     MOV     R0,err_emg_1
0520 D3                SETB    C
0521 120000      E     LCALL   ?C?SLCMP
0524 4009              JC      ?C0073
                                           ; SOURCE LINE # 617
0526 900000      R     MOV     DPTR,#current_emg
0529 7401              MOV     A,#01H
052B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 618
052C 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 619
052F         ?C0073:
                                           ; SOURCE LINE # 620
052F 7F00              MOV     R7,#00H
0531 7E00              MOV     R6,#00H
0533 7D00              MOV     R5,#00H
0535 7C00              MOV     R4,#00H
0537 AB00        R     MOV     R3,err_emg_2+03H
0539 AA00        R     MOV     R2,err_emg_2+02H
053B A900        R     MOV     R1,err_emg_2+01H
053D A800        R     MOV     R0,err_emg_2
053F D3                SETB    C
0540 120000      E     LCALL   ?C?SLCMP
0543 5003              JNC     $ + 5H
0545 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 621
0548 900000      R     MOV     DPTR,#current_emg
054B 7402              MOV     A,#02H
054D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 622
054E 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 623
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 627
0551         ?C0075:
                                           ; SOURCE LINE # 629
0551 7F00              MOV     R7,#00H
0553 7E00              MOV     R6,#00H
0555 7D00              MOV     R5,#00H
0557 7C00              MOV     R4,#00H
0559 AB00        R     MOV     R3,err_emg_1+03H
055B AA00        R     MOV     R2,err_emg_1+02H
055D A900        R     MOV     R1,err_emg_1+01H
055F A800        R     MOV     R0,err_emg_1
0561 C3                CLR     C
0562 120000      E     LCALL   ?C?SLCMP
0565 501E              JNC     ?C0076
0567 7F00              MOV     R7,#00H
0569 7E00              MOV     R6,#00H
056B 7D00              MOV     R5,#00H
056D 7C00              MOV     R4,#00H
056F AB00        R     MOV     R3,err_emg_2+03H
0571 AA00        R     MOV     R2,err_emg_2+02H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 52  

0573 A900        R     MOV     R1,err_emg_2+01H
0575 A800        R     MOV     R0,err_emg_2
0577 C3                CLR     C
0578 120000      E     LCALL   ?C?SLCMP
057B 5008              JNC     ?C0076
                                           ; SOURCE LINE # 630
057D 900000      R     MOV     DPTR,#current_emg
0580 E4                CLR     A
0581 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
0582 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 632
0585         ?C0076:
                                           ; SOURCE LINE # 634
0585 7F00              MOV     R7,#00H
0587 7E00              MOV     R6,#00H
0589 7D00              MOV     R5,#00H
058B 7C00              MOV     R4,#00H
058D AB00        R     MOV     R3,err_emg_1+03H
058F AA00        R     MOV     R2,err_emg_1+02H
0591 A900        R     MOV     R1,err_emg_1+01H
0593 A800        R     MOV     R0,err_emg_1
0595 D3                SETB    C
0596 120000      E     LCALL   ?C?SLCMP
0599 5003              JNC     $ + 5H
059B 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 635
059E 900000      E     MOV     DPTR,#g_mem+078H
05A1 E0                MOVX    A,@DPTR
05A2 FF                MOV     R7,A
05A3 E4                CLR     A
05A4 FC                MOV     R4,A
05A5 FD                MOV     R5,A
05A6 FE                MOV     R6,A
05A7 AB00        R     MOV     R3,err_emg_1+03H
05A9 AA00        R     MOV     R2,err_emg_1+02H
05AB A900        R     MOV     R1,err_emg_1+01H
05AD A800        R     MOV     R0,err_emg_1
05AF 120000      E     LCALL   ?C?LMUL
05B2 7802              MOV     R0,#02H
05B4 120000      E     LCALL   ?C?LSHL
05B7 C004              PUSH    AR4
05B9 C005              PUSH    AR5
05BB C006              PUSH    AR6
05BD C007              PUSH    AR7
05BF 900000      E     MOV     DPTR,#c_mem+06BH
05C2 E0                MOVX    A,@DPTR
05C3 FE                MOV     R6,A
05C4 A3                INC     DPTR
05C5 E0                MOVX    A,@DPTR
05C6 FF                MOV     R7,A
05C7 C3                CLR     C
05C8 E4                CLR     A
05C9 9F                SUBB    A,R7
05CA FF                MOV     R7,A
05CB 7404              MOV     A,#04H
05CD 9E                SUBB    A,R6
05CE FE                MOV     R6,A
05CF AB07              MOV     R3,AR7
05D1 AA06              MOV     R2,AR6
05D3 E4                CLR     A
05D4 F9                MOV     R1,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 53  

05D5 F8                MOV     R0,A
05D6 D007              POP     AR7
05D8 D006              POP     AR6
05DA D005              POP     AR5
05DC D004              POP     AR4
05DE 120000      E     LCALL   ?C?SLDIV
05E1 900000      E     MOV     DPTR,#g_refOld
05E4 120000      E     LCALL   ?C?LLDXDATA0
05E7 120000      E     LCALL   ?C?LADD
05EA 900000      E     MOV     DPTR,#g_ref
05ED 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 637
05F0 020000      R     LJMP    ?C0046
                                           ; SOURCE LINE # 640
05F3         ?C0078:
                                           ; SOURCE LINE # 642
05F3 7F00              MOV     R7,#00H
05F5 7E00              MOV     R6,#00H
05F7 7D00              MOV     R5,#00H
05F9 7C00              MOV     R4,#00H
05FB AB00        R     MOV     R3,err_emg_1+03H
05FD AA00        R     MOV     R2,err_emg_1+02H
05FF A900        R     MOV     R1,err_emg_1+01H
0601 A800        R     MOV     R0,err_emg_1
0603 C3                CLR     C
0604 120000      E     LCALL   ?C?SLCMP
0607 501D              JNC     ?C0079
0609 7F00              MOV     R7,#00H
060B 7E00              MOV     R6,#00H
060D 7D00              MOV     R5,#00H
060F 7C00              MOV     R4,#00H
0611 AB00        R     MOV     R3,err_emg_2+03H
0613 AA00        R     MOV     R2,err_emg_2+02H
0615 A900        R     MOV     R1,err_emg_2+01H
0617 A800        R     MOV     R0,err_emg_2
0619 C3                CLR     C
061A 120000      E     LCALL   ?C?SLCMP
061D 5007              JNC     ?C0079
                                           ; SOURCE LINE # 643
061F 900000      R     MOV     DPTR,#current_emg
0622 E4                CLR     A
0623 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 644
0624 8070              SJMP    ?C0046
                                           ; SOURCE LINE # 645
0626         ?C0079:
                                           ; SOURCE LINE # 647
0626 7F00              MOV     R7,#00H
0628 7E00              MOV     R6,#00H
062A 7D00              MOV     R5,#00H
062C 7C00              MOV     R4,#00H
062E AB00        R     MOV     R3,err_emg_2+03H
0630 AA00        R     MOV     R2,err_emg_2+02H
0632 A900        R     MOV     R1,err_emg_2+01H
0634 A800        R     MOV     R0,err_emg_2
0636 D3                SETB    C
0637 120000      E     LCALL   ?C?SLCMP
063A 405A              JC      ?C0046
                                           ; SOURCE LINE # 648
063C 900000      E     MOV     DPTR,#c_mem+078H
063F E0                MOVX    A,@DPTR
0640 FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 54  

0641 E4                CLR     A
0642 FC                MOV     R4,A
0643 FD                MOV     R5,A
0644 FE                MOV     R6,A
0645 AB00        R     MOV     R3,err_emg_2+03H
0647 AA00        R     MOV     R2,err_emg_2+02H
0649 A900        R     MOV     R1,err_emg_2+01H
064B A800        R     MOV     R0,err_emg_2
064D 120000      E     LCALL   ?C?LMUL
0650 7802              MOV     R0,#02H
0652 120000      E     LCALL   ?C?LSHL
0655 C004              PUSH    AR4
0657 C005              PUSH    AR5
0659 C006              PUSH    AR6
065B C007              PUSH    AR7
065D 900000      E     MOV     DPTR,#c_mem+06DH
0660 E0                MOVX    A,@DPTR
0661 FE                MOV     R6,A
0662 A3                INC     DPTR
0663 E0                MOVX    A,@DPTR
0664 FF                MOV     R7,A
0665 C3                CLR     C
0666 E4                CLR     A
0667 9F                SUBB    A,R7
0668 FF                MOV     R7,A
0669 7404              MOV     A,#04H
066B 9E                SUBB    A,R6
066C FE                MOV     R6,A
066D AB07              MOV     R3,AR7
066F AA06              MOV     R2,AR6
0671 E4                CLR     A
0672 F9                MOV     R1,A
0673 F8                MOV     R0,A
0674 D007              POP     AR7
0676 D006              POP     AR6
0678 D005              POP     AR5
067A D004              POP     AR4
067C 120000      E     LCALL   ?C?SLDIV
067F A804              MOV     R0,AR4
0681 A905              MOV     R1,AR5
0683 AA06              MOV     R2,AR6
0685 AB07              MOV     R3,AR7
0687 900000      E     MOV     DPTR,#g_refOld
068A 120000      E     LCALL   ?C?LLDXDATA
068D 120000      E     LCALL   ?C?LSUB
0690 900000      E     MOV     DPTR,#g_ref
0693 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 649
                                           ; SOURCE LINE # 650
                                           ; SOURCE LINE # 652
                                           ; SOURCE LINE # 653
                                           ; SOURCE LINE # 654
                                           ; SOURCE LINE # 656
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
0696         ?C0046:
                                           ; SOURCE LINE # 661
0696 900000      E     MOV     DPTR,#c_mem+050H
0699 E0                MOVX    A,@DPTR
069A FF                MOV     R7,A
069B EF                MOV     A,R7
069C 603C              JZ      ?C0083
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 55  

                                           ; SOURCE LINE # 662
069E 900000      E     MOV     DPTR,#c_mem+051H
06A1 120000      E     LCALL   ?C?LLDXDATA
06A4 900000      E     MOV     DPTR,#g_ref
06A7 120000      E     LCALL   ?C?LLDXDATA0
06AA C3                CLR     C
06AB 120000      E     LCALL   ?C?SLCMP
06AE 500C              JNC     ?C0084
                                           ; SOURCE LINE # 663
06B0 900000      E     MOV     DPTR,#c_mem+051H
06B3 120000      E     LCALL   ?C?LLDXDATA
06B6 900000      E     MOV     DPTR,#g_ref
06B9 120000      E     LCALL   ?C?LSTXDATA
06BC         ?C0084:
                                           ; SOURCE LINE # 664
06BC 900000      E     MOV     DPTR,#c_mem+059H
06BF 120000      E     LCALL   ?C?LLDXDATA
06C2 900000      E     MOV     DPTR,#g_ref
06C5 120000      E     LCALL   ?C?LLDXDATA0
06C8 D3                SETB    C
06C9 120000      E     LCALL   ?C?SLCMP
06CC 400C              JC      ?C0083
                                           ; SOURCE LINE # 665
06CE 900000      E     MOV     DPTR,#c_mem+059H
06D1 120000      E     LCALL   ?C?LLDXDATA
06D4 900000      E     MOV     DPTR,#g_ref
06D7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 666
06DA         ?C0083:
                                           ; SOURCE LINE # 668
06DA 900000      E     MOV     DPTR,#c_mem+0A6H
06DD E0                MOVX    A,@DPTR
06DE FF                MOV     R7,A
06DF EF                MOV     A,R7
06E0 6401              XRL     A,#01H
06E2 6003              JZ      $ + 5H
06E4 020000      R     LJMP    ?C0086
                                           ; SOURCE LINE # 669
06E7 900000      E     MOV     DPTR,#rest_enabled
06EA E0                MOVX    A,@DPTR
06EB FF                MOV     R7,A
06EC EF                MOV     A,R7
06ED B4010C            CJNE    A,#01H,?C0087
                                           ; SOURCE LINE # 671
06F0 900000      E     MOV     DPTR,#rest_pos_curr_ref
06F3 120000      E     LCALL   ?C?LLDXDATA
06F6 900000      E     MOV     DPTR,#g_ref
06F9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 672
06FC         ?C0087:
                                           ; SOURCE LINE # 674
06FC 900000      E     MOV     DPTR,#forced_open
06FF E0                MOVX    A,@DPTR
0700 FF                MOV     R7,A
0701 EF                MOV     A,R7
0702 6401              XRL     A,#01H
0704 707B              JNZ     ?C0086
                                           ; SOURCE LINE # 676
0706 7F00              MOV     R7,#00H
0708 7E00              MOV     R6,#00H
070A 7D00              MOV     R5,#00H
070C 7C00              MOV     R4,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 56  

070E AB00        R     MOV     R3,err_emg_2+03H
0710 AA00        R     MOV     R2,err_emg_2+02H
0712 A900        R     MOV     R1,err_emg_2+01H
0714 A800        R     MOV     R0,err_emg_2
0716 D3                SETB    C
0717 120000      E     LCALL   ?C?SLCMP
071A 4054              JC      ?C0089
                                           ; SOURCE LINE # 677
071C 900000      E     MOV     DPTR,#g_mem+096H
071F 120000      E     LCALL   ?C?LLDXDATA
0722 AB00        R     MOV     R3,err_emg_2+03H
0724 AA00        R     MOV     R2,err_emg_2+02H
0726 A900        R     MOV     R1,err_emg_2+01H
0728 A800        R     MOV     R0,err_emg_2
072A 120000      E     LCALL   ?C?LMUL
072D C004              PUSH    AR4
072F C005              PUSH    AR5
0731 C006              PUSH    AR6
0733 C007              PUSH    AR7
0735 900000      E     MOV     DPTR,#c_mem+06DH
0738 E0                MOVX    A,@DPTR
0739 FE                MOV     R6,A
073A A3                INC     DPTR
073B E0                MOVX    A,@DPTR
073C FF                MOV     R7,A
073D C3                CLR     C
073E E4                CLR     A
073F 9F                SUBB    A,R7
0740 FF                MOV     R7,A
0741 7404              MOV     A,#04H
0743 9E                SUBB    A,R6
0744 FE                MOV     R6,A
0745 AB07              MOV     R3,AR7
0747 AA06              MOV     R2,AR6
0749 E4                CLR     A
074A F9                MOV     R1,A
074B F8                MOV     R0,A
074C D007              POP     AR7
074E D006              POP     AR6
0750 D005              POP     AR5
0752 D004              POP     AR4
0754 120000      E     LCALL   ?C?SLDIV
0757 A804              MOV     R0,AR4
0759 A905              MOV     R1,AR5
075B AA06              MOV     R2,AR6
075D AB07              MOV     R3,AR7
075F 900000      E     MOV     DPTR,#g_mem+096H
0762 120000      E     LCALL   ?C?LLDXDATA
0765 120000      E     LCALL   ?C?LSUB
0768 900000      E     MOV     DPTR,#g_ref
076B 120000      E     LCALL   ?C?LSTXDATA
076E 8011              SJMP    ?C0086
0770         ?C0089:
                                           ; SOURCE LINE # 678
                                           ; SOURCE LINE # 679
0770 900000      E     MOV     DPTR,#g_mem+096H
0773 120000      E     LCALL   ?C?LLDXDATA
0776 900000      E     MOV     DPTR,#g_ref
0779 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 680
077C 900000      E     MOV     DPTR,#forced_open
077F E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 57  

0780 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
                                           ; SOURCE LINE # 682
                                           ; SOURCE LINE # 683
0781         ?C0086:
                                           ; SOURCE LINE # 685
0781 900000      E     MOV     DPTR,#c_mem+034H
0784 E0                MOVX    A,@DPTR
0785 FF                MOV     R7,A
0786 EF                MOV     A,R7
0787 120000      E     LCALL   ?C?CCASE
078A 0000        R     DW      ?C0116
078C 00                DB      00H
078D 0000        R     DW      ?C0138
078F 01                DB      01H
0790 0000        R     DW      ?C0125
0792 02                DB      02H
0793 0000        R     DW      ?C0092
0795 03                DB      03H
0796 0000              DW      00H
0798 0000        R     DW      ?C0091
                                           ; SOURCE LINE # 687
079A         ?C0092:
                                           ; SOURCE LINE # 688
079A 900000      E     MOV     DPTR,#g_meas
079D 120000      E     LCALL   ?C?LLDXDATA0
07A0 900000      E     MOV     DPTR,#g_ref
07A3 120000      E     LCALL   ?C?LLDXDATA
07A6 120000      E     LCALL   ?C?LSUB
07A9 8F00        R     MOV     pos_error+03H,R7
07AB 8E00        R     MOV     pos_error+02H,R6
07AD 8D00        R     MOV     pos_error+01H,R5
07AF 8C00        R     MOV     pos_error,R4
                                           ; SOURCE LINE # 690
07B1 900000      R     MOV     DPTR,#pos_error_sum
07B4 120000      E     LCALL   ?C?LLDXDATA
07B7 EF                MOV     A,R7
07B8 2500        R     ADD     A,pos_error+03H
07BA FF                MOV     R7,A
07BB EE                MOV     A,R6
07BC 3500        R     ADDC    A,pos_error+02H
07BE FE                MOV     R6,A
07BF ED                MOV     A,R5
07C0 3500        R     ADDC    A,pos_error+01H
07C2 FD                MOV     R5,A
07C3 EC                MOV     A,R4
07C4 3500        R     ADDC    A,pos_error
07C6 FC                MOV     R4,A
07C7 900000      R     MOV     DPTR,#pos_error_sum
07CA 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 693
07CD AF00        R     MOV     R7,pos_error_max+03H
07CF AE00        R     MOV     R6,pos_error_max+02H
07D1 AD00        R     MOV     R5,pos_error_max+01H
07D3 AC00        R     MOV     R4,pos_error_max
07D5 AB00        R     MOV     R3,pos_error+03H
07D7 AA00        R     MOV     R2,pos_error+02H
07D9 A900        R     MOV     R1,pos_error+01H
07DB A800        R     MOV     R0,pos_error
07DD D3                SETB    C
07DE 120000      E     LCALL   ?C?SLCMP
07E1 4012              JC      ?C0093
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 58  

                                           ; SOURCE LINE # 694
07E3 AF00        R     MOV     R7,pos_error_max+03H
07E5 AE00        R     MOV     R6,pos_error_max+02H
07E7 AD00        R     MOV     R5,pos_error_max+01H
07E9 AC00        R     MOV     R4,pos_error_max
07EB 8F00        R     MOV     pos_error+03H,R7
07ED 8E00        R     MOV     pos_error+02H,R6
07EF 8D00        R     MOV     pos_error+01H,R5
07F1 8C00        R     MOV     pos_error,R4
07F3 802C              SJMP    ?C0094
07F5         ?C0093:
                                           ; SOURCE LINE # 695
                                           ; SOURCE LINE # 696
07F5 AF00        R     MOV     R7,pos_error_max+03H
07F7 AE00        R     MOV     R6,pos_error_max+02H
07F9 AD00        R     MOV     R5,pos_error_max+01H
07FB AC00        R     MOV     R4,pos_error_max
07FD 120000      E     LCALL   ?C?LNEG
0800 AB00        R     MOV     R3,pos_error+03H
0802 AA00        R     MOV     R2,pos_error+02H
0804 A900        R     MOV     R1,pos_error+01H
0806 A800        R     MOV     R0,pos_error
0808 C3                CLR     C
0809 120000      E     LCALL   ?C?SLCMP
080C 5013              JNC     ?C0094
                                           ; SOURCE LINE # 697
080E AF00        R     MOV     R7,pos_error_max+03H
0810 AE00        R     MOV     R6,pos_error_max+02H
0812 AD00        R     MOV     R5,pos_error_max+01H
0814 AC00        R     MOV     R4,pos_error_max
0816 120000      E     LCALL   ?C?LNEG
0819 8F00        R     MOV     pos_error+03H,R7
081B 8E00        R     MOV     pos_error+02H,R6
081D 8D00        R     MOV     pos_error+01H,R5
081F 8C00        R     MOV     pos_error,R4
                                           ; SOURCE LINE # 698
0821         ?C0094:
                                           ; SOURCE LINE # 701
0821 7F80              MOV     R7,#080H
0823 7EF0              MOV     R6,#0F0H
0825 7DFA              MOV     R5,#0FAH
0827 7C02              MOV     R4,#02H
0829 900000      R     MOV     DPTR,#pos_error_sum
082C 120000      E     LCALL   ?C?LLDXDATA0
082F D3                SETB    C
0830 120000      E     LCALL   ?C?SLCMP
0833 4010              JC      ?C0096
                                           ; SOURCE LINE # 702
0835 7F80              MOV     R7,#080H
0837 7EF0              MOV     R6,#0F0H
0839 7DFA              MOV     R5,#0FAH
083B 7C02              MOV     R4,#02H
083D 900000      R     MOV     DPTR,#pos_error_sum
0840 120000      E     LCALL   ?C?LSTXDATA
0843 8022              SJMP    ?C0097
0845         ?C0096:
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 704
0845 7F80              MOV     R7,#080H
0847 7E0F              MOV     R6,#0FH
0849 7D05              MOV     R5,#05H
084B 7CFD              MOV     R4,#0FDH
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 59  

084D 900000      R     MOV     DPTR,#pos_error_sum
0850 120000      E     LCALL   ?C?LLDXDATA0
0853 C3                CLR     C
0854 120000      E     LCALL   ?C?SLCMP
0857 500E              JNC     ?C0097
                                           ; SOURCE LINE # 705
0859 7F80              MOV     R7,#080H
085B 7E0F              MOV     R6,#0FH
085D 7D05              MOV     R5,#05H
085F 7CFD              MOV     R4,#0FDH
0861 900000      R     MOV     DPTR,#pos_error_sum
0864 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 706
0867         ?C0097:
                                           ; SOURCE LINE # 710
0867 7F00              MOV     R7,#00H
0869 7E00              MOV     R6,#00H
086B 7D00              MOV     R5,#00H
086D 7C00              MOV     R4,#00H
086F 8F00        R     MOV     i_ref+03H,R7
0871 8E00        R     MOV     i_ref+02H,R6
0873 8D00        R     MOV     i_ref+01H,R5
0875 8C00        R     MOV     i_ref,R4
                                           ; SOURCE LINE # 713
0877 7F00              MOV     R7,#00H
0879 7E00              MOV     R6,#00H
087B 7D00              MOV     R5,#00H
087D 7C00              MOV     R4,#00H
087F AB00        R     MOV     R3,k_p_dl+03H
0881 AA00        R     MOV     R2,k_p_dl+02H
0883 A900        R     MOV     R1,k_p_dl+01H
0885 A800        R     MOV     R0,k_p_dl
0887 C3                CLR     C
0888 120000      E     LCALL   ?C?SLCMP
088B 6030              JZ      ?C0099
                                           ; SOURCE LINE # 714
088D AF00        R     MOV     R7,pos_error+03H
088F AE00        R     MOV     R6,pos_error+02H
0891 AD00        R     MOV     R5,pos_error+01H
0893 AC00        R     MOV     R4,pos_error
0895 AB00        R     MOV     R3,k_p_dl+03H
0897 AA00        R     MOV     R2,k_p_dl+02H
0899 A900        R     MOV     R1,k_p_dl+01H
089B A800        R     MOV     R0,k_p_dl
089D 120000      E     LCALL   ?C?LMUL
08A0 780D              MOV     R0,#0DH
08A2 120000      E     LCALL   ?C?SLSHR
08A5 E500        R     MOV     A,i_ref+03H
08A7 2F                ADD     A,R7
08A8 FF                MOV     R7,A
08A9 E500        R     MOV     A,i_ref+02H
08AB 3E                ADDC    A,R6
08AC FE                MOV     R6,A
08AD E500        R     MOV     A,i_ref+01H
08AF 3D                ADDC    A,R5
08B0 FD                MOV     R5,A
08B1 E500        R     MOV     A,i_ref
08B3 3C                ADDC    A,R4
08B4 FC                MOV     R4,A
08B5 8F00        R     MOV     i_ref+03H,R7
08B7 8E00        R     MOV     i_ref+02H,R6
08B9 8D00        R     MOV     i_ref+01H,R5
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 60  

08BB 8C00        R     MOV     i_ref,R4
08BD         ?C0099:
                                           ; SOURCE LINE # 717
08BD 7F00              MOV     R7,#00H
08BF 7E00              MOV     R6,#00H
08C1 7D00              MOV     R5,#00H
08C3 7C00              MOV     R4,#00H
08C5 AB00        R     MOV     R3,k_i_dl+03H
08C7 AA00        R     MOV     R2,k_i_dl+02H
08C9 A900        R     MOV     R1,k_i_dl+01H
08CB A800        R     MOV     R0,k_i_dl
08CD C3                CLR     C
08CE 120000      E     LCALL   ?C?SLCMP
08D1 602E              JZ      ?C0100
                                           ; SOURCE LINE # 718
08D3 900000      R     MOV     DPTR,#pos_error_sum
08D6 120000      E     LCALL   ?C?LLDXDATA
08D9 AB00        R     MOV     R3,k_i_dl+03H
08DB AA00        R     MOV     R2,k_i_dl+02H
08DD A900        R     MOV     R1,k_i_dl+01H
08DF A800        R     MOV     R0,k_i_dl
08E1 120000      E     LCALL   ?C?LMUL
08E4 780D              MOV     R0,#0DH
08E6 120000      E     LCALL   ?C?SLSHR
08E9 E500        R     MOV     A,i_ref+03H
08EB 2F                ADD     A,R7
08EC FF                MOV     R7,A
08ED E500        R     MOV     A,i_ref+02H
08EF 3E                ADDC    A,R6
08F0 FE                MOV     R6,A
08F1 E500        R     MOV     A,i_ref+01H
08F3 3D                ADDC    A,R5
08F4 FD                MOV     R5,A
08F5 E500        R     MOV     A,i_ref
08F7 3C                ADDC    A,R4
08F8 FC                MOV     R4,A
08F9 8F00        R     MOV     i_ref+03H,R7
08FB 8E00        R     MOV     i_ref+02H,R6
08FD 8D00        R     MOV     i_ref+01H,R5
08FF 8C00        R     MOV     i_ref,R4
0901         ?C0100:
                                           ; SOURCE LINE # 721
0901 7F00              MOV     R7,#00H
0903 7E00              MOV     R6,#00H
0905 7D00              MOV     R5,#00H
0907 7C00              MOV     R4,#00H
0909 AB00        R     MOV     R3,k_d_dl+03H
090B AA00        R     MOV     R2,k_d_dl+02H
090D A900        R     MOV     R1,k_d_dl+01H
090F A800        R     MOV     R0,k_d_dl
0911 C3                CLR     C
0912 120000      E     LCALL   ?C?SLCMP
0915 603F              JZ      ?C0101
                                           ; SOURCE LINE # 722
0917 900000      R     MOV     DPTR,#prev_pos_err
091A 120000      E     LCALL   ?C?LLDXDATA0
091D C3                CLR     C
091E E500        R     MOV     A,pos_error+03H
0920 9B                SUBB    A,R3
0921 FF                MOV     R7,A
0922 E500        R     MOV     A,pos_error+02H
0924 9A                SUBB    A,R2
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 61  

0925 FE                MOV     R6,A
0926 E500        R     MOV     A,pos_error+01H
0928 99                SUBB    A,R1
0929 FD                MOV     R5,A
092A E500        R     MOV     A,pos_error
092C 98                SUBB    A,R0
092D FC                MOV     R4,A
092E AB00        R     MOV     R3,k_d_dl+03H
0930 AA00        R     MOV     R2,k_d_dl+02H
0932 A900        R     MOV     R1,k_d_dl+01H
0934 A800        R     MOV     R0,k_d_dl
0936 120000      E     LCALL   ?C?LMUL
0939 780D              MOV     R0,#0DH
093B 120000      E     LCALL   ?C?SLSHR
093E E500        R     MOV     A,i_ref+03H
0940 2F                ADD     A,R7
0941 FF                MOV     R7,A
0942 E500        R     MOV     A,i_ref+02H
0944 3E                ADDC    A,R6
0945 FE                MOV     R6,A
0946 E500        R     MOV     A,i_ref+01H
0948 3D                ADDC    A,R5
0949 FD                MOV     R5,A
094A E500        R     MOV     A,i_ref
094C 3C                ADDC    A,R4
094D FC                MOV     R4,A
094E 8F00        R     MOV     i_ref+03H,R7
0950 8E00        R     MOV     i_ref+02H,R6
0952 8D00        R     MOV     i_ref+01H,R5
0954 8C00        R     MOV     i_ref,R4
0956         ?C0101:
                                           ; SOURCE LINE # 725
0956 AF00        R     MOV     R7,pos_error+03H
0958 AE00        R     MOV     R6,pos_error+02H
095A AD00        R     MOV     R5,pos_error+01H
095C AC00        R     MOV     R4,pos_error
095E 900000      R     MOV     DPTR,#prev_pos_err
0961 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 727
0964 900000      E     MOV     DPTR,#g_ref+019H
0967 120000      E     LCALL   ?C?LLDXDATA
096A E500        R     MOV     A,i_ref+03H
096C 2F                ADD     A,R7
096D FF                MOV     R7,A
096E E500        R     MOV     A,i_ref+02H
0970 3E                ADDC    A,R6
0971 FE                MOV     R6,A
0972 E500        R     MOV     A,i_ref+01H
0974 3D                ADDC    A,R5
0975 FD                MOV     R5,A
0976 E500        R     MOV     A,i_ref
0978 3C                ADDC    A,R4
0979 FC                MOV     R4,A
097A 8F00        R     MOV     i_ref+03H,R7
097C 8E00        R     MOV     i_ref+02H,R6
097E 8D00        R     MOV     i_ref+01H,R5
0980 8C00        R     MOV     i_ref,R4
                                           ; SOURCE LINE # 730
0982 7F00              MOV     R7,#00H
0984 7E00              MOV     R6,#00H
0986 7D00              MOV     R5,#00H
0988 7C00              MOV     R4,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 62  

098A AB00        R     MOV     R3,i_ref+03H
098C AA00        R     MOV     R2,i_ref+02H
098E A900        R     MOV     R1,i_ref+01H
0990 A800        R     MOV     R0,i_ref
0992 C3                CLR     C
0993 120000      E     LCALL   ?C?SLCMP
0996 4004              JC      ?C0102
                                           ; SOURCE LINE # 731
0998 D200        R     SETB    motor_dir
099A 8002              SJMP    ?C0103
099C         ?C0102:
                                           ; SOURCE LINE # 733
099C C200        R     CLR     motor_dir
099E         ?C0103:
                                           ; SOURCE LINE # 736
099E 900000      E     MOV     DPTR,#c_mem+069H
09A1 E0                MOVX    A,@DPTR
09A2 FE                MOV     R6,A
09A3 A3                INC     DPTR
09A4 E0                MOVX    A,@DPTR
09A5 FF                MOV     R7,A
09A6 EE                MOV     A,R6
09A7 33                RLC     A
09A8 95E0              SUBB    A,ACC
09AA FD                MOV     R5,A
09AB FC                MOV     R4,A
09AC AB00        R     MOV     R3,i_ref+03H
09AE AA00        R     MOV     R2,i_ref+02H
09B0 A900        R     MOV     R1,i_ref+01H
09B2 A800        R     MOV     R0,i_ref
09B4 D3                SETB    C
09B5 120000      E     LCALL   ?C?SLCMP
09B8 4018              JC      ?C0104
                                           ; SOURCE LINE # 737
09BA 900000      E     MOV     DPTR,#c_mem+069H
09BD E0                MOVX    A,@DPTR
09BE FE                MOV     R6,A
09BF A3                INC     DPTR
09C0 E0                MOVX    A,@DPTR
09C1 FF                MOV     R7,A
09C2 EE                MOV     A,R6
09C3 33                RLC     A
09C4 95E0              SUBB    A,ACC
09C6 FD                MOV     R5,A
09C7 FC                MOV     R4,A
09C8 8F00        R     MOV     i_ref+03H,R7
09CA 8E00        R     MOV     i_ref+02H,R6
09CC 8D00        R     MOV     i_ref+01H,R5
09CE 8C00        R     MOV     i_ref,R4
09D0 8040              SJMP    ?C0105
09D2         ?C0104:
                                           ; SOURCE LINE # 738
                                           ; SOURCE LINE # 739
09D2 900000      E     MOV     DPTR,#c_mem+069H
09D5 E0                MOVX    A,@DPTR
09D6 FE                MOV     R6,A
09D7 A3                INC     DPTR
09D8 E0                MOVX    A,@DPTR
09D9 FF                MOV     R7,A
09DA C3                CLR     C
09DB E4                CLR     A
09DC 9F                SUBB    A,R7
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 63  

09DD FF                MOV     R7,A
09DE E4                CLR     A
09DF 9E                SUBB    A,R6
09E0 FE                MOV     R6,A
09E1 EE                MOV     A,R6
09E2 33                RLC     A
09E3 95E0              SUBB    A,ACC
09E5 FD                MOV     R5,A
09E6 FC                MOV     R4,A
09E7 AB00        R     MOV     R3,i_ref+03H
09E9 AA00        R     MOV     R2,i_ref+02H
09EB A900        R     MOV     R1,i_ref+01H
09ED A800        R     MOV     R0,i_ref
09EF C3                CLR     C
09F0 120000      E     LCALL   ?C?SLCMP
09F3 501D              JNC     ?C0105
                                           ; SOURCE LINE # 740
09F5 900000      E     MOV     DPTR,#c_mem+069H
09F8 E0                MOVX    A,@DPTR
09F9 FE                MOV     R6,A
09FA A3                INC     DPTR
09FB E0                MOVX    A,@DPTR
09FC FF                MOV     R7,A
09FD C3                CLR     C
09FE E4                CLR     A
09FF 9F                SUBB    A,R7
0A00 FF                MOV     R7,A
0A01 E4                CLR     A
0A02 9E                SUBB    A,R6
0A03 FE                MOV     R6,A
0A04 EE                MOV     A,R6
0A05 33                RLC     A
0A06 95E0              SUBB    A,ACC
0A08 FD                MOV     R5,A
0A09 FC                MOV     R4,A
0A0A 8F00        R     MOV     i_ref+03H,R7
0A0C 8E00        R     MOV     i_ref+02H,R6
0A0E 8D00        R     MOV     i_ref+01H,R5
0A10 8C00        R     MOV     i_ref,R4
                                           ; SOURCE LINE # 741
0A12         ?C0105:
                                           ; SOURCE LINE # 744
0A12 900000      E     MOV     DPTR,#g_meas+0CH
0A15 120000      E     LCALL   ?C?LLDXDATA0
0A18 C3                CLR     C
0A19 E500        R     MOV     A,i_ref+03H
0A1B 9B                SUBB    A,R3
0A1C FF                MOV     R7,A
0A1D E500        R     MOV     A,i_ref+02H
0A1F 9A                SUBB    A,R2
0A20 FE                MOV     R6,A
0A21 E500        R     MOV     A,i_ref+01H
0A23 99                SUBB    A,R1
0A24 FD                MOV     R5,A
0A25 E500        R     MOV     A,i_ref
0A27 98                SUBB    A,R0
0A28 FC                MOV     R4,A
0A29 8F00        R     MOV     curr_error+03H,R7
0A2B 8E00        R     MOV     curr_error+02H,R6
0A2D 8D00        R     MOV     curr_error+01H,R5
0A2F 8C00        R     MOV     curr_error,R4
                                           ; SOURCE LINE # 745
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 64  

0A31 900000      R     MOV     DPTR,#curr_error_sum
0A34 120000      E     LCALL   ?C?LLDXDATA
0A37 EF                MOV     A,R7
0A38 2500        R     ADD     A,curr_error+03H
0A3A FF                MOV     R7,A
0A3B EE                MOV     A,R6
0A3C 3500        R     ADDC    A,curr_error+02H
0A3E FE                MOV     R6,A
0A3F ED                MOV     A,R5
0A40 3500        R     ADDC    A,curr_error+01H
0A42 FD                MOV     R5,A
0A43 EC                MOV     A,R4
0A44 3500        R     ADDC    A,curr_error
0A46 FC                MOV     R4,A
0A47 900000      R     MOV     DPTR,#curr_error_sum
0A4A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 747
0A4D 7FA0              MOV     R7,#0A0H
0A4F 7E86              MOV     R6,#086H
0A51 7D01              MOV     R5,#01H
0A53 7C00              MOV     R4,#00H
0A55 900000      R     MOV     DPTR,#curr_error_sum
0A58 120000      E     LCALL   ?C?LLDXDATA0
0A5B D3                SETB    C
0A5C 120000      E     LCALL   ?C?SLCMP
0A5F 4010              JC      ?C0107
                                           ; SOURCE LINE # 748
0A61 7FA0              MOV     R7,#0A0H
0A63 7E86              MOV     R6,#086H
0A65 7D01              MOV     R5,#01H
0A67 7C00              MOV     R4,#00H
0A69 900000      R     MOV     DPTR,#curr_error_sum
0A6C 120000      E     LCALL   ?C?LSTXDATA
0A6F 8022              SJMP    ?C0108
0A71         ?C0107:
                                           ; SOURCE LINE # 749
                                           ; SOURCE LINE # 750
0A71 7F60              MOV     R7,#060H
0A73 7E79              MOV     R6,#079H
0A75 7DFE              MOV     R5,#0FEH
0A77 7CFF              MOV     R4,#0FFH
0A79 900000      R     MOV     DPTR,#curr_error_sum
0A7C 120000      E     LCALL   ?C?LLDXDATA0
0A7F C3                CLR     C
0A80 120000      E     LCALL   ?C?SLCMP
0A83 500E              JNC     ?C0108
                                           ; SOURCE LINE # 751
0A85 7F60              MOV     R7,#060H
0A87 7E79              MOV     R6,#079H
0A89 7DFE              MOV     R5,#0FEH
0A8B 7CFF              MOV     R4,#0FFH
0A8D 900000      R     MOV     DPTR,#curr_error_sum
0A90 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 752
0A93         ?C0108:
                                           ; SOURCE LINE # 756
0A93 7F00              MOV     R7,#00H
0A95 7E00              MOV     R6,#00H
0A97 7D00              MOV     R5,#00H
0A99 7C00              MOV     R4,#00H
0A9B 8F00        R     MOV     pwm_input+03H,R7
0A9D 8E00        R     MOV     pwm_input+02H,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 65  

0A9F 8D00        R     MOV     pwm_input+01H,R5
0AA1 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 759
0AA3 7F00              MOV     R7,#00H
0AA5 7E00              MOV     R6,#00H
0AA7 7D00              MOV     R5,#00H
0AA9 7C00              MOV     R4,#00H
0AAB AB00        R     MOV     R3,k_p_c_dl+03H
0AAD AA00        R     MOV     R2,k_p_c_dl+02H
0AAF A900        R     MOV     R1,k_p_c_dl+01H
0AB1 A800        R     MOV     R0,k_p_c_dl
0AB3 C3                CLR     C
0AB4 120000      E     LCALL   ?C?SLCMP
0AB7 6030              JZ      ?C0110
                                           ; SOURCE LINE # 760
0AB9 AF00        R     MOV     R7,curr_error+03H
0ABB AE00        R     MOV     R6,curr_error+02H
0ABD AD00        R     MOV     R5,curr_error+01H
0ABF AC00        R     MOV     R4,curr_error
0AC1 AB00        R     MOV     R3,k_p_c_dl+03H
0AC3 AA00        R     MOV     R2,k_p_c_dl+02H
0AC5 A900        R     MOV     R1,k_p_c_dl+01H
0AC7 A800        R     MOV     R0,k_p_c_dl
0AC9 120000      E     LCALL   ?C?LMUL
0ACC 780D              MOV     R0,#0DH
0ACE 120000      E     LCALL   ?C?SLSHR
0AD1 E500        R     MOV     A,pwm_input+03H
0AD3 2F                ADD     A,R7
0AD4 FF                MOV     R7,A
0AD5 E500        R     MOV     A,pwm_input+02H
0AD7 3E                ADDC    A,R6
0AD8 FE                MOV     R6,A
0AD9 E500        R     MOV     A,pwm_input+01H
0ADB 3D                ADDC    A,R5
0ADC FD                MOV     R5,A
0ADD E500        R     MOV     A,pwm_input
0ADF 3C                ADDC    A,R4
0AE0 FC                MOV     R4,A
0AE1 8F00        R     MOV     pwm_input+03H,R7
0AE3 8E00        R     MOV     pwm_input+02H,R6
0AE5 8D00        R     MOV     pwm_input+01H,R5
0AE7 8C00        R     MOV     pwm_input,R4
0AE9         ?C0110:
                                           ; SOURCE LINE # 763
0AE9 7F00              MOV     R7,#00H
0AEB 7E00              MOV     R6,#00H
0AED 7D00              MOV     R5,#00H
0AEF 7C00              MOV     R4,#00H
0AF1 AB00        R     MOV     R3,k_i_c_dl+03H
0AF3 AA00        R     MOV     R2,k_i_c_dl+02H
0AF5 A900        R     MOV     R1,k_i_c_dl+01H
0AF7 A800        R     MOV     R0,k_i_c_dl
0AF9 C3                CLR     C
0AFA 120000      E     LCALL   ?C?SLCMP
0AFD 602E              JZ      ?C0111
                                           ; SOURCE LINE # 764
0AFF 900000      R     MOV     DPTR,#curr_error_sum
0B02 120000      E     LCALL   ?C?LLDXDATA
0B05 AB00        R     MOV     R3,k_i_c_dl+03H
0B07 AA00        R     MOV     R2,k_i_c_dl+02H
0B09 A900        R     MOV     R1,k_i_c_dl+01H
0B0B A800        R     MOV     R0,k_i_c_dl
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 66  

0B0D 120000      E     LCALL   ?C?LMUL
0B10 780D              MOV     R0,#0DH
0B12 120000      E     LCALL   ?C?SLSHR
0B15 E500        R     MOV     A,pwm_input+03H
0B17 2F                ADD     A,R7
0B18 FF                MOV     R7,A
0B19 E500        R     MOV     A,pwm_input+02H
0B1B 3E                ADDC    A,R6
0B1C FE                MOV     R6,A
0B1D E500        R     MOV     A,pwm_input+01H
0B1F 3D                ADDC    A,R5
0B20 FD                MOV     R5,A
0B21 E500        R     MOV     A,pwm_input
0B23 3C                ADDC    A,R4
0B24 FC                MOV     R4,A
0B25 8F00        R     MOV     pwm_input+03H,R7
0B27 8E00        R     MOV     pwm_input+02H,R6
0B29 8D00        R     MOV     pwm_input+01H,R5
0B2B 8C00        R     MOV     pwm_input,R4
0B2D         ?C0111:
                                           ; SOURCE LINE # 767
0B2D 7F00              MOV     R7,#00H
0B2F 7E00              MOV     R6,#00H
0B31 7D00              MOV     R5,#00H
0B33 7C00              MOV     R4,#00H
0B35 AB00        R     MOV     R3,k_d_c_dl+03H
0B37 AA00        R     MOV     R2,k_d_c_dl+02H
0B39 A900        R     MOV     R1,k_d_c_dl+01H
0B3B A800        R     MOV     R0,k_d_c_dl
0B3D C3                CLR     C
0B3E 120000      E     LCALL   ?C?SLCMP
0B41 603F              JZ      ?C0112
                                           ; SOURCE LINE # 768
0B43 900000      R     MOV     DPTR,#prev_curr_err
0B46 120000      E     LCALL   ?C?LLDXDATA0
0B49 C3                CLR     C
0B4A E500        R     MOV     A,curr_error+03H
0B4C 9B                SUBB    A,R3
0B4D FF                MOV     R7,A
0B4E E500        R     MOV     A,curr_error+02H
0B50 9A                SUBB    A,R2
0B51 FE                MOV     R6,A
0B52 E500        R     MOV     A,curr_error+01H
0B54 99                SUBB    A,R1
0B55 FD                MOV     R5,A
0B56 E500        R     MOV     A,curr_error
0B58 98                SUBB    A,R0
0B59 FC                MOV     R4,A
0B5A AB00        R     MOV     R3,k_d_c_dl+03H
0B5C AA00        R     MOV     R2,k_d_c_dl+02H
0B5E A900        R     MOV     R1,k_d_c_dl+01H
0B60 A800        R     MOV     R0,k_d_c_dl
0B62 120000      E     LCALL   ?C?LMUL
0B65 780D              MOV     R0,#0DH
0B67 120000      E     LCALL   ?C?SLSHR
0B6A E500        R     MOV     A,pwm_input+03H
0B6C 2F                ADD     A,R7
0B6D FF                MOV     R7,A
0B6E E500        R     MOV     A,pwm_input+02H
0B70 3E                ADDC    A,R6
0B71 FE                MOV     R6,A
0B72 E500        R     MOV     A,pwm_input+01H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 67  

0B74 3D                ADDC    A,R5
0B75 FD                MOV     R5,A
0B76 E500        R     MOV     A,pwm_input
0B78 3C                ADDC    A,R4
0B79 FC                MOV     R4,A
0B7A 8F00        R     MOV     pwm_input+03H,R7
0B7C 8E00        R     MOV     pwm_input+02H,R6
0B7E 8D00        R     MOV     pwm_input+01H,R5
0B80 8C00        R     MOV     pwm_input,R4
0B82         ?C0112:
                                           ; SOURCE LINE # 771
0B82 7F9C              MOV     R7,#09CH
0B84 7EFF              MOV     R6,#0FFH
0B86 7DFF              MOV     R5,#0FFH
0B88 7CFF              MOV     R4,#0FFH
0B8A AB00        R     MOV     R3,pwm_input+03H
0B8C AA00        R     MOV     R2,pwm_input+02H
0B8E A900        R     MOV     R1,pwm_input+01H
0B90 A800        R     MOV     R0,pwm_input
0B92 C3                CLR     C
0B93 120000      E     LCALL   ?C?SLCMP
0B96 5012              JNC     ?C0113
                                           ; SOURCE LINE # 772
0B98 7F9C              MOV     R7,#09CH
0B9A 7EFF              MOV     R6,#0FFH
0B9C 7DFF              MOV     R5,#0FFH
0B9E 7CFF              MOV     R4,#0FFH
0BA0 8F00        R     MOV     pwm_input+03H,R7
0BA2 8E00        R     MOV     pwm_input+02H,R6
0BA4 8D00        R     MOV     pwm_input+01H,R5
0BA6 8C00        R     MOV     pwm_input,R4
0BA8 8026              SJMP    ?C0114
0BAA         ?C0113:
                                           ; SOURCE LINE # 773
                                           ; SOURCE LINE # 774
0BAA 7F64              MOV     R7,#064H
0BAC 7E00              MOV     R6,#00H
0BAE 7D00              MOV     R5,#00H
0BB0 7C00              MOV     R4,#00H
0BB2 AB00        R     MOV     R3,pwm_input+03H
0BB4 AA00        R     MOV     R2,pwm_input+02H
0BB6 A900        R     MOV     R1,pwm_input+01H
0BB8 A800        R     MOV     R0,pwm_input
0BBA D3                SETB    C
0BBB 120000      E     LCALL   ?C?SLCMP
0BBE 4010              JC      ?C0114
                                           ; SOURCE LINE # 775
0BC0 7F64              MOV     R7,#064H
0BC2 7E00              MOV     R6,#00H
0BC4 7D00              MOV     R5,#00H
0BC6 7C00              MOV     R4,#00H
0BC8 8F00        R     MOV     pwm_input+03H,R7
0BCA 8E00        R     MOV     pwm_input+02H,R6
0BCC 8D00        R     MOV     pwm_input+01H,R5
0BCE 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 776
0BD0         ?C0114:
                                           ; SOURCE LINE # 779
0BD0 AF00        R     MOV     R7,curr_error+03H
0BD2 AE00        R     MOV     R6,curr_error+02H
0BD4 AD00        R     MOV     R5,curr_error+01H
0BD6 AC00        R     MOV     R4,curr_error
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 68  

0BD8 900000      R     MOV     DPTR,#prev_curr_err
0BDB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 781
0BDE 020000      R     LJMP    ?C0091
                                           ; SOURCE LINE # 784
0BE1         ?C0116:
                                           ; SOURCE LINE # 785
0BE1 900000      E     MOV     DPTR,#g_meas
0BE4 120000      E     LCALL   ?C?LLDXDATA0
0BE7 900000      E     MOV     DPTR,#g_ref
0BEA 120000      E     LCALL   ?C?LLDXDATA
0BED 120000      E     LCALL   ?C?LSUB
0BF0 8F00        R     MOV     pos_error+03H,R7
0BF2 8E00        R     MOV     pos_error+02H,R6
0BF4 8D00        R     MOV     pos_error+01H,R5
0BF6 8C00        R     MOV     pos_error,R4
                                           ; SOURCE LINE # 787
0BF8 900000      R     MOV     DPTR,#pos_error_sum
0BFB 120000      E     LCALL   ?C?LLDXDATA
0BFE EF                MOV     A,R7
0BFF 2500        R     ADD     A,pos_error+03H
0C01 FF                MOV     R7,A
0C02 EE                MOV     A,R6
0C03 3500        R     ADDC    A,pos_error+02H
0C05 FE                MOV     R6,A
0C06 ED                MOV     A,R5
0C07 3500        R     ADDC    A,pos_error+01H
0C09 FD                MOV     R5,A
0C0A EC                MOV     A,R4
0C0B 3500        R     ADDC    A,pos_error
0C0D FC                MOV     R4,A
0C0E 900000      R     MOV     DPTR,#pos_error_sum
0C11 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 790
0C14 7FE8              MOV     R7,#0E8H
0C16 7E03              MOV     R6,#03H
0C18 7D00              MOV     R5,#00H
0C1A 7C00              MOV     R4,#00H
0C1C 900000      R     MOV     DPTR,#pos_error_sum
0C1F 120000      E     LCALL   ?C?LLDXDATA0
0C22 D3                SETB    C
0C23 120000      E     LCALL   ?C?SLCMP
0C26 4010              JC      ?C0117
                                           ; SOURCE LINE # 791
0C28 7FE8              MOV     R7,#0E8H
0C2A 7E03              MOV     R6,#03H
0C2C 7D00              MOV     R5,#00H
0C2E 7C00              MOV     R4,#00H
0C30 900000      R     MOV     DPTR,#pos_error_sum
0C33 120000      E     LCALL   ?C?LSTXDATA
0C36 8022              SJMP    ?C0118
0C38         ?C0117:
                                           ; SOURCE LINE # 792
                                           ; SOURCE LINE # 793
0C38 7F18              MOV     R7,#018H
0C3A 7EFC              MOV     R6,#0FCH
0C3C 7DFF              MOV     R5,#0FFH
0C3E 7CFF              MOV     R4,#0FFH
0C40 900000      R     MOV     DPTR,#pos_error_sum
0C43 120000      E     LCALL   ?C?LLDXDATA0
0C46 C3                CLR     C
0C47 120000      E     LCALL   ?C?SLCMP
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 69  

0C4A 500E              JNC     ?C0118
                                           ; SOURCE LINE # 794
0C4C 7F18              MOV     R7,#018H
0C4E 7EFC              MOV     R6,#0FCH
0C50 7DFF              MOV     R5,#0FFH
0C52 7CFF              MOV     R4,#0FFH
0C54 900000      R     MOV     DPTR,#pos_error_sum
0C57 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 795
0C5A         ?C0118:
                                           ; SOURCE LINE # 798
0C5A 7F00              MOV     R7,#00H
0C5C 7E00              MOV     R6,#00H
0C5E 7D00              MOV     R5,#00H
0C60 7C00              MOV     R4,#00H
0C62 AB00        R     MOV     R3,k_p+03H
0C64 AA00        R     MOV     R2,k_p+02H
0C66 A900        R     MOV     R1,k_p+01H
0C68 A800        R     MOV     R0,k_p
0C6A C3                CLR     C
0C6B 120000      E     LCALL   ?C?SLCMP
0C6E 6020              JZ      ?C0120
                                           ; SOURCE LINE # 799
0C70 AF00        R     MOV     R7,pos_error+03H
0C72 AE00        R     MOV     R6,pos_error+02H
0C74 AD00        R     MOV     R5,pos_error+01H
0C76 AC00        R     MOV     R4,pos_error
0C78 AB00        R     MOV     R3,k_p+03H
0C7A AA00        R     MOV     R2,k_p+02H
0C7C A900        R     MOV     R1,k_p+01H
0C7E A800        R     MOV     R0,k_p
0C80 120000      E     LCALL   ?C?LMUL
0C83 7810              MOV     R0,#010H
0C85 120000      E     LCALL   ?C?SLSHR
0C88 8F00        R     MOV     pwm_input+03H,R7
0C8A 8E00        R     MOV     pwm_input+02H,R6
0C8C 8D00        R     MOV     pwm_input+01H,R5
0C8E 8C00        R     MOV     pwm_input,R4
0C90         ?C0120:
                                           ; SOURCE LINE # 803
0C90 7F00              MOV     R7,#00H
0C92 7E00              MOV     R6,#00H
0C94 7D00              MOV     R5,#00H
0C96 7C00              MOV     R4,#00H
0C98 AB00        R     MOV     R3,k_i+03H
0C9A AA00        R     MOV     R2,k_i+02H
0C9C A900        R     MOV     R1,k_i+01H
0C9E A800        R     MOV     R0,k_i
0CA0 C3                CLR     C
0CA1 120000      E     LCALL   ?C?SLCMP
0CA4 602E              JZ      ?C0121
                                           ; SOURCE LINE # 804
0CA6 900000      R     MOV     DPTR,#pos_error_sum
0CA9 120000      E     LCALL   ?C?LLDXDATA
0CAC AB00        R     MOV     R3,k_i+03H
0CAE AA00        R     MOV     R2,k_i+02H
0CB0 A900        R     MOV     R1,k_i+01H
0CB2 A800        R     MOV     R0,k_i
0CB4 120000      E     LCALL   ?C?LMUL
0CB7 7810              MOV     R0,#010H
0CB9 120000      E     LCALL   ?C?SLSHR
0CBC E500        R     MOV     A,pwm_input+03H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 70  

0CBE 2F                ADD     A,R7
0CBF FF                MOV     R7,A
0CC0 E500        R     MOV     A,pwm_input+02H
0CC2 3E                ADDC    A,R6
0CC3 FE                MOV     R6,A
0CC4 E500        R     MOV     A,pwm_input+01H
0CC6 3D                ADDC    A,R5
0CC7 FD                MOV     R5,A
0CC8 E500        R     MOV     A,pwm_input
0CCA 3C                ADDC    A,R4
0CCB FC                MOV     R4,A
0CCC 8F00        R     MOV     pwm_input+03H,R7
0CCE 8E00        R     MOV     pwm_input+02H,R6
0CD0 8D00        R     MOV     pwm_input+01H,R5
0CD2 8C00        R     MOV     pwm_input,R4
0CD4         ?C0121:
                                           ; SOURCE LINE # 808
0CD4 7F00              MOV     R7,#00H
0CD6 7E00              MOV     R6,#00H
0CD8 7D00              MOV     R5,#00H
0CDA 7C00              MOV     R4,#00H
0CDC AB00        R     MOV     R3,k_d+03H
0CDE AA00        R     MOV     R2,k_d+02H
0CE0 A900        R     MOV     R1,k_d+01H
0CE2 A800        R     MOV     R0,k_d
0CE4 C3                CLR     C
0CE5 120000      E     LCALL   ?C?SLCMP
0CE8 603F              JZ      ?C0122
                                           ; SOURCE LINE # 809
0CEA 900000      R     MOV     DPTR,#prev_pos_err
0CED 120000      E     LCALL   ?C?LLDXDATA0
0CF0 C3                CLR     C
0CF1 E500        R     MOV     A,pos_error+03H
0CF3 9B                SUBB    A,R3
0CF4 FF                MOV     R7,A
0CF5 E500        R     MOV     A,pos_error+02H
0CF7 9A                SUBB    A,R2
0CF8 FE                MOV     R6,A
0CF9 E500        R     MOV     A,pos_error+01H
0CFB 99                SUBB    A,R1
0CFC FD                MOV     R5,A
0CFD E500        R     MOV     A,pos_error
0CFF 98                SUBB    A,R0
0D00 FC                MOV     R4,A
0D01 AB00        R     MOV     R3,k_d+03H
0D03 AA00        R     MOV     R2,k_d+02H
0D05 A900        R     MOV     R1,k_d+01H
0D07 A800        R     MOV     R0,k_d
0D09 120000      E     LCALL   ?C?LMUL
0D0C 7810              MOV     R0,#010H
0D0E 120000      E     LCALL   ?C?SLSHR
0D11 E500        R     MOV     A,pwm_input+03H
0D13 2F                ADD     A,R7
0D14 FF                MOV     R7,A
0D15 E500        R     MOV     A,pwm_input+02H
0D17 3E                ADDC    A,R6
0D18 FE                MOV     R6,A
0D19 E500        R     MOV     A,pwm_input+01H
0D1B 3D                ADDC    A,R5
0D1C FD                MOV     R5,A
0D1D E500        R     MOV     A,pwm_input
0D1F 3C                ADDC    A,R4
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 71  

0D20 FC                MOV     R4,A
0D21 8F00        R     MOV     pwm_input+03H,R7
0D23 8E00        R     MOV     pwm_input+02H,R6
0D25 8D00        R     MOV     pwm_input+01H,R5
0D27 8C00        R     MOV     pwm_input,R4
0D29         ?C0122:
                                           ; SOURCE LINE # 813
0D29 AF00        R     MOV     R7,pos_error+03H
0D2B AE00        R     MOV     R6,pos_error+02H
0D2D AD00        R     MOV     R5,pos_error+01H
0D2F AC00        R     MOV     R4,pos_error
0D31 900000      R     MOV     DPTR,#prev_pos_err
0D34 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 815
0D37 7F00              MOV     R7,#00H
0D39 7E00              MOV     R6,#00H
0D3B 7D00              MOV     R5,#00H
0D3D 7C00              MOV     R4,#00H
0D3F AB00        R     MOV     R3,pwm_input+03H
0D41 AA00        R     MOV     R2,pwm_input+02H
0D43 A900        R     MOV     R1,pwm_input+01H
0D45 A800        R     MOV     R0,pwm_input
0D47 D3                SETB    C
0D48 120000      E     LCALL   ?C?SLCMP
0D4B 4005              JC      ?C0123
                                           ; SOURCE LINE # 816
0D4D D200        R     SETB    motor_dir
0D4F 020000      R     LJMP    ?C0091
0D52         ?C0123:
                                           ; SOURCE LINE # 818
0D52 C200        R     CLR     motor_dir
                                           ; SOURCE LINE # 820
0D54 020000      R     LJMP    ?C0091
                                           ; SOURCE LINE # 823
0D57         ?C0125:
                                           ; SOURCE LINE # 824
0D57 900000      E     MOV     DPTR,#g_ref+018H
0D5A E0                MOVX    A,@DPTR
0D5B FF                MOV     R7,A
0D5C EF                MOV     A,R7
0D5D 7003              JNZ     $ + 5H
0D5F 020000      R     LJMP    ?C0091
0D62 200003      E     JB      tension_valid,$ + 6H
0D65 020000      R     LJMP    ?C0091
                                           ; SOURCE LINE # 826
0D68 900000      E     MOV     DPTR,#g_ref+08H
0D6B 120000      E     LCALL   ?C?LLDXDATA
0D6E 8F00        R     MOV     i_ref+03H,R7
0D70 8E00        R     MOV     i_ref+02H,R6
0D72 8D00        R     MOV     i_ref+01H,R5
0D74 8C00        R     MOV     i_ref,R4
                                           ; SOURCE LINE # 828
0D76 900000      E     MOV     DPTR,#c_mem+069H
0D79 E0                MOVX    A,@DPTR
0D7A FE                MOV     R6,A
0D7B A3                INC     DPTR
0D7C E0                MOVX    A,@DPTR
0D7D FF                MOV     R7,A
0D7E EE                MOV     A,R6
0D7F 33                RLC     A
0D80 95E0              SUBB    A,ACC
0D82 FD                MOV     R5,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 72  

0D83 FC                MOV     R4,A
0D84 AB00        R     MOV     R3,i_ref+03H
0D86 AA00        R     MOV     R2,i_ref+02H
0D88 A900        R     MOV     R1,i_ref+01H
0D8A A800        R     MOV     R0,i_ref
0D8C D3                SETB    C
0D8D 120000      E     LCALL   ?C?SLCMP
0D90 4018              JC      ?C0127
                                           ; SOURCE LINE # 829
0D92 900000      E     MOV     DPTR,#c_mem+069H
0D95 E0                MOVX    A,@DPTR
0D96 FE                MOV     R6,A
0D97 A3                INC     DPTR
0D98 E0                MOVX    A,@DPTR
0D99 FF                MOV     R7,A
0D9A EE                MOV     A,R6
0D9B 33                RLC     A
0D9C 95E0              SUBB    A,ACC
0D9E FD                MOV     R5,A
0D9F FC                MOV     R4,A
0DA0 8F00        R     MOV     i_ref+03H,R7
0DA2 8E00        R     MOV     i_ref+02H,R6
0DA4 8D00        R     MOV     i_ref+01H,R5
0DA6 8C00        R     MOV     i_ref,R4
0DA8 8040              SJMP    ?C0128
0DAA         ?C0127:
                                           ; SOURCE LINE # 830
                                           ; SOURCE LINE # 831
0DAA 900000      E     MOV     DPTR,#c_mem+069H
0DAD E0                MOVX    A,@DPTR
0DAE FE                MOV     R6,A
0DAF A3                INC     DPTR
0DB0 E0                MOVX    A,@DPTR
0DB1 FF                MOV     R7,A
0DB2 C3                CLR     C
0DB3 E4                CLR     A
0DB4 9F                SUBB    A,R7
0DB5 FF                MOV     R7,A
0DB6 E4                CLR     A
0DB7 9E                SUBB    A,R6
0DB8 FE                MOV     R6,A
0DB9 EE                MOV     A,R6
0DBA 33                RLC     A
0DBB 95E0              SUBB    A,ACC
0DBD FD                MOV     R5,A
0DBE FC                MOV     R4,A
0DBF AB00        R     MOV     R3,i_ref+03H
0DC1 AA00        R     MOV     R2,i_ref+02H
0DC3 A900        R     MOV     R1,i_ref+01H
0DC5 A800        R     MOV     R0,i_ref
0DC7 C3                CLR     C
0DC8 120000      E     LCALL   ?C?SLCMP
0DCB 501D              JNC     ?C0128
                                           ; SOURCE LINE # 832
0DCD 900000      E     MOV     DPTR,#c_mem+069H
0DD0 E0                MOVX    A,@DPTR
0DD1 FE                MOV     R6,A
0DD2 A3                INC     DPTR
0DD3 E0                MOVX    A,@DPTR
0DD4 FF                MOV     R7,A
0DD5 C3                CLR     C
0DD6 E4                CLR     A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 73  

0DD7 9F                SUBB    A,R7
0DD8 FF                MOV     R7,A
0DD9 E4                CLR     A
0DDA 9E                SUBB    A,R6
0DDB FE                MOV     R6,A
0DDC EE                MOV     A,R6
0DDD 33                RLC     A
0DDE 95E0              SUBB    A,ACC
0DE0 FD                MOV     R5,A
0DE1 FC                MOV     R4,A
0DE2 8F00        R     MOV     i_ref+03H,R7
0DE4 8E00        R     MOV     i_ref+02H,R6
0DE6 8D00        R     MOV     i_ref+01H,R5
0DE8 8C00        R     MOV     i_ref,R4
                                           ; SOURCE LINE # 833
0DEA         ?C0128:
                                           ; SOURCE LINE # 836
0DEA 900000      E     MOV     DPTR,#g_meas+0CH
0DED 120000      E     LCALL   ?C?LLDXDATA0
0DF0 C3                CLR     C
0DF1 E500        R     MOV     A,i_ref+03H
0DF3 9B                SUBB    A,R3
0DF4 FF                MOV     R7,A
0DF5 E500        R     MOV     A,i_ref+02H
0DF7 9A                SUBB    A,R2
0DF8 FE                MOV     R6,A
0DF9 E500        R     MOV     A,i_ref+01H
0DFB 99                SUBB    A,R1
0DFC FD                MOV     R5,A
0DFD E500        R     MOV     A,i_ref
0DFF 98                SUBB    A,R0
0E00 FC                MOV     R4,A
0E01 8F00        R     MOV     curr_error+03H,R7
0E03 8E00        R     MOV     curr_error+02H,R6
0E05 8D00        R     MOV     curr_error+01H,R5
0E07 8C00        R     MOV     curr_error,R4
                                           ; SOURCE LINE # 837
0E09 900000      R     MOV     DPTR,#curr_error_sum
0E0C 120000      E     LCALL   ?C?LLDXDATA
0E0F EF                MOV     A,R7
0E10 2500        R     ADD     A,curr_error+03H
0E12 FF                MOV     R7,A
0E13 EE                MOV     A,R6
0E14 3500        R     ADDC    A,curr_error+02H
0E16 FE                MOV     R6,A
0E17 ED                MOV     A,R5
0E18 3500        R     ADDC    A,curr_error+01H
0E1A FD                MOV     R5,A
0E1B EC                MOV     A,R4
0E1C 3500        R     ADDC    A,curr_error
0E1E FC                MOV     R4,A
0E1F 900000      R     MOV     DPTR,#curr_error_sum
0E22 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 839
0E25 7FA0              MOV     R7,#0A0H
0E27 7E86              MOV     R6,#086H
0E29 7D01              MOV     R5,#01H
0E2B 7C00              MOV     R4,#00H
0E2D 900000      R     MOV     DPTR,#curr_error_sum
0E30 120000      E     LCALL   ?C?LLDXDATA0
0E33 D3                SETB    C
0E34 120000      E     LCALL   ?C?SLCMP
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 74  

0E37 4010              JC      ?C0130
                                           ; SOURCE LINE # 840
0E39 7FA0              MOV     R7,#0A0H
0E3B 7E86              MOV     R6,#086H
0E3D 7D01              MOV     R5,#01H
0E3F 7C00              MOV     R4,#00H
0E41 900000      R     MOV     DPTR,#curr_error_sum
0E44 120000      E     LCALL   ?C?LSTXDATA
0E47 8022              SJMP    ?C0131
0E49         ?C0130:
                                           ; SOURCE LINE # 841
                                           ; SOURCE LINE # 842
0E49 7F60              MOV     R7,#060H
0E4B 7E79              MOV     R6,#079H
0E4D 7DFE              MOV     R5,#0FEH
0E4F 7CFF              MOV     R4,#0FFH
0E51 900000      R     MOV     DPTR,#curr_error_sum
0E54 120000      E     LCALL   ?C?LLDXDATA0
0E57 C3                CLR     C
0E58 120000      E     LCALL   ?C?SLCMP
0E5B 500E              JNC     ?C0131
                                           ; SOURCE LINE # 843
0E5D 7F60              MOV     R7,#060H
0E5F 7E79              MOV     R6,#079H
0E61 7DFE              MOV     R5,#0FEH
0E63 7CFF              MOV     R4,#0FFH
0E65 900000      R     MOV     DPTR,#curr_error_sum
0E68 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 844
0E6B         ?C0131:
                                           ; SOURCE LINE # 846
0E6B 7F00              MOV     R7,#00H
0E6D 7E00              MOV     R6,#00H
0E6F 7D00              MOV     R5,#00H
0E71 7C00              MOV     R4,#00H
0E73 8F00        R     MOV     pwm_input+03H,R7
0E75 8E00        R     MOV     pwm_input+02H,R6
0E77 8D00        R     MOV     pwm_input+01H,R5
0E79 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 849
0E7B 7F00              MOV     R7,#00H
0E7D 7E00              MOV     R6,#00H
0E7F 7D00              MOV     R5,#00H
0E81 7C00              MOV     R4,#00H
0E83 AB00        R     MOV     R3,k_p_c+03H
0E85 AA00        R     MOV     R2,k_p_c+02H
0E87 A900        R     MOV     R1,k_p_c+01H
0E89 A800        R     MOV     R0,k_p_c
0E8B C3                CLR     C
0E8C 120000      E     LCALL   ?C?SLCMP
0E8F 6030              JZ      ?C0133
                                           ; SOURCE LINE # 850
0E91 AF00        R     MOV     R7,curr_error+03H
0E93 AE00        R     MOV     R6,curr_error+02H
0E95 AD00        R     MOV     R5,curr_error+01H
0E97 AC00        R     MOV     R4,curr_error
0E99 AB00        R     MOV     R3,k_p_c+03H
0E9B AA00        R     MOV     R2,k_p_c+02H
0E9D A900        R     MOV     R1,k_p_c+01H
0E9F A800        R     MOV     R0,k_p_c
0EA1 120000      E     LCALL   ?C?LMUL
0EA4 7810              MOV     R0,#010H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 75  

0EA6 120000      E     LCALL   ?C?SLSHR
0EA9 E500        R     MOV     A,pwm_input+03H
0EAB 2F                ADD     A,R7
0EAC FF                MOV     R7,A
0EAD E500        R     MOV     A,pwm_input+02H
0EAF 3E                ADDC    A,R6
0EB0 FE                MOV     R6,A
0EB1 E500        R     MOV     A,pwm_input+01H
0EB3 3D                ADDC    A,R5
0EB4 FD                MOV     R5,A
0EB5 E500        R     MOV     A,pwm_input
0EB7 3C                ADDC    A,R4
0EB8 FC                MOV     R4,A
0EB9 8F00        R     MOV     pwm_input+03H,R7
0EBB 8E00        R     MOV     pwm_input+02H,R6
0EBD 8D00        R     MOV     pwm_input+01H,R5
0EBF 8C00        R     MOV     pwm_input,R4
0EC1         ?C0133:
                                           ; SOURCE LINE # 853
0EC1 7F00              MOV     R7,#00H
0EC3 7E00              MOV     R6,#00H
0EC5 7D00              MOV     R5,#00H
0EC7 7C00              MOV     R4,#00H
0EC9 AB00        R     MOV     R3,k_i_c+03H
0ECB AA00        R     MOV     R2,k_i_c+02H
0ECD A900        R     MOV     R1,k_i_c+01H
0ECF A800        R     MOV     R0,k_i_c
0ED1 C3                CLR     C
0ED2 120000      E     LCALL   ?C?SLCMP
0ED5 602E              JZ      ?C0134
                                           ; SOURCE LINE # 854
0ED7 900000      R     MOV     DPTR,#curr_error_sum
0EDA 120000      E     LCALL   ?C?LLDXDATA
0EDD AB00        R     MOV     R3,k_i_c+03H
0EDF AA00        R     MOV     R2,k_i_c+02H
0EE1 A900        R     MOV     R1,k_i_c+01H
0EE3 A800        R     MOV     R0,k_i_c
0EE5 120000      E     LCALL   ?C?LMUL
0EE8 7810              MOV     R0,#010H
0EEA 120000      E     LCALL   ?C?SLSHR
0EED E500        R     MOV     A,pwm_input+03H
0EEF 2F                ADD     A,R7
0EF0 FF                MOV     R7,A
0EF1 E500        R     MOV     A,pwm_input+02H
0EF3 3E                ADDC    A,R6
0EF4 FE                MOV     R6,A
0EF5 E500        R     MOV     A,pwm_input+01H
0EF7 3D                ADDC    A,R5
0EF8 FD                MOV     R5,A
0EF9 E500        R     MOV     A,pwm_input
0EFB 3C                ADDC    A,R4
0EFC FC                MOV     R4,A
0EFD 8F00        R     MOV     pwm_input+03H,R7
0EFF 8E00        R     MOV     pwm_input+02H,R6
0F01 8D00        R     MOV     pwm_input+01H,R5
0F03 8C00        R     MOV     pwm_input,R4
0F05         ?C0134:
                                           ; SOURCE LINE # 857
0F05 7F00              MOV     R7,#00H
0F07 7E00              MOV     R6,#00H
0F09 7D00              MOV     R5,#00H
0F0B 7C00              MOV     R4,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 76  

0F0D AB00        R     MOV     R3,k_d_c+03H
0F0F AA00        R     MOV     R2,k_d_c+02H
0F11 A900        R     MOV     R1,k_d_c+01H
0F13 A800        R     MOV     R0,k_d_c
0F15 C3                CLR     C
0F16 120000      E     LCALL   ?C?SLCMP
0F19 603F              JZ      ?C0135
                                           ; SOURCE LINE # 858
0F1B 900000      R     MOV     DPTR,#prev_curr_err
0F1E 120000      E     LCALL   ?C?LLDXDATA0
0F21 C3                CLR     C
0F22 E500        R     MOV     A,curr_error+03H
0F24 9B                SUBB    A,R3
0F25 FF                MOV     R7,A
0F26 E500        R     MOV     A,curr_error+02H
0F28 9A                SUBB    A,R2
0F29 FE                MOV     R6,A
0F2A E500        R     MOV     A,curr_error+01H
0F2C 99                SUBB    A,R1
0F2D FD                MOV     R5,A
0F2E E500        R     MOV     A,curr_error
0F30 98                SUBB    A,R0
0F31 FC                MOV     R4,A
0F32 AB00        R     MOV     R3,k_d_c+03H
0F34 AA00        R     MOV     R2,k_d_c+02H
0F36 A900        R     MOV     R1,k_d_c+01H
0F38 A800        R     MOV     R0,k_d_c
0F3A 120000      E     LCALL   ?C?LMUL
0F3D 7810              MOV     R0,#010H
0F3F 120000      E     LCALL   ?C?SLSHR
0F42 E500        R     MOV     A,pwm_input+03H
0F44 2F                ADD     A,R7
0F45 FF                MOV     R7,A
0F46 E500        R     MOV     A,pwm_input+02H
0F48 3E                ADDC    A,R6
0F49 FE                MOV     R6,A
0F4A E500        R     MOV     A,pwm_input+01H
0F4C 3D                ADDC    A,R5
0F4D FD                MOV     R5,A
0F4E E500        R     MOV     A,pwm_input
0F50 3C                ADDC    A,R4
0F51 FC                MOV     R4,A
0F52 8F00        R     MOV     pwm_input+03H,R7
0F54 8E00        R     MOV     pwm_input+02H,R6
0F56 8D00        R     MOV     pwm_input+01H,R5
0F58 8C00        R     MOV     pwm_input,R4
0F5A         ?C0135:
                                           ; SOURCE LINE # 860
0F5A AF00        R     MOV     R7,curr_error+03H
0F5C AE00        R     MOV     R6,curr_error+02H
0F5E AD00        R     MOV     R5,curr_error+01H
0F60 AC00        R     MOV     R4,curr_error
0F62 900000      R     MOV     DPTR,#prev_curr_err
0F65 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 862
0F68 7F00              MOV     R7,#00H
0F6A 7E00              MOV     R6,#00H
0F6C 7D00              MOV     R5,#00H
0F6E 7C00              MOV     R4,#00H
0F70 AB00        R     MOV     R3,pwm_input+03H
0F72 AA00        R     MOV     R2,pwm_input+02H
0F74 A900        R     MOV     R1,pwm_input+01H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 77  

0F76 A800        R     MOV     R0,pwm_input
0F78 C3                CLR     C
0F79 120000      E     LCALL   ?C?SLCMP
0F7C 4004              JC      ?C0136
                                           ; SOURCE LINE # 863
0F7E D200        R     SETB    motor_dir
0F80 807C              SJMP    ?C0091
0F82         ?C0136:
                                           ; SOURCE LINE # 865
0F82 C200        R     CLR     motor_dir
                                           ; SOURCE LINE # 866
                                           ; SOURCE LINE # 867
0F84 8078              SJMP    ?C0091
                                           ; SOURCE LINE # 870
0F86         ?C0138:
                                           ; SOURCE LINE # 872
0F86 900000      E     MOV     DPTR,#g_ref+010H
0F89 120000      E     LCALL   ?C?LLDXDATA
0F8C 8F00        R     MOV     pwm_input+03H,R7
0F8E 8E00        R     MOV     pwm_input+02H,R6
0F90 8D00        R     MOV     pwm_input+01H,R5
0F92 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 874
0F94 7F00              MOV     R7,#00H
0F96 7E00              MOV     R6,#00H
0F98 7D00              MOV     R5,#00H
0F9A 7C00              MOV     R4,#00H
0F9C AB00        R     MOV     R3,pwm_input+03H
0F9E AA00        R     MOV     R2,pwm_input+02H
0FA0 A900        R     MOV     R1,pwm_input+01H
0FA2 A800        R     MOV     R0,pwm_input
0FA4 D3                SETB    C
0FA5 120000      E     LCALL   ?C?SLCMP
0FA8 4004              JC      ?C0139
                                           ; SOURCE LINE # 875
0FAA D200        R     SETB    motor_dir
0FAC 8002              SJMP    ?C0140
0FAE         ?C0139:
                                           ; SOURCE LINE # 877
0FAE C200        R     CLR     motor_dir
0FB0         ?C0140:
                                           ; SOURCE LINE # 881
0FB0 7F9C              MOV     R7,#09CH
0FB2 7EFF              MOV     R6,#0FFH
0FB4 7DFF              MOV     R5,#0FFH
0FB6 7CFF              MOV     R4,#0FFH
0FB8 AB00        R     MOV     R3,pwm_input+03H
0FBA AA00        R     MOV     R2,pwm_input+02H
0FBC A900        R     MOV     R1,pwm_input+01H
0FBE A800        R     MOV     R0,pwm_input
0FC0 C3                CLR     C
0FC1 120000      E     LCALL   ?C?SLCMP
0FC4 5012              JNC     ?C0141
                                           ; SOURCE LINE # 882
0FC6 7F9C              MOV     R7,#09CH
0FC8 7EFF              MOV     R6,#0FFH
0FCA 7DFF              MOV     R5,#0FFH
0FCC 7CFF              MOV     R4,#0FFH
0FCE 8F00        R     MOV     pwm_input+03H,R7
0FD0 8E00        R     MOV     pwm_input+02H,R6
0FD2 8D00        R     MOV     pwm_input+01H,R5
0FD4 8C00        R     MOV     pwm_input,R4
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 78  

0FD6 8026              SJMP    ?C0091
0FD8         ?C0141:
                                           ; SOURCE LINE # 883
                                           ; SOURCE LINE # 884
0FD8 7F64              MOV     R7,#064H
0FDA 7E00              MOV     R6,#00H
0FDC 7D00              MOV     R5,#00H
0FDE 7C00              MOV     R4,#00H
0FE0 AB00        R     MOV     R3,pwm_input+03H
0FE2 AA00        R     MOV     R2,pwm_input+02H
0FE4 A900        R     MOV     R1,pwm_input+01H
0FE6 A800        R     MOV     R0,pwm_input
0FE8 D3                SETB    C
0FE9 120000      E     LCALL   ?C?SLCMP
0FEC 4010              JC      ?C0091
                                           ; SOURCE LINE # 885
0FEE 7F64              MOV     R7,#064H
0FF0 7E00              MOV     R6,#00H
0FF2 7D00              MOV     R5,#00H
0FF4 7C00              MOV     R4,#00H
0FF6 8F00        R     MOV     pwm_input+03H,R7
0FF8 8E00        R     MOV     pwm_input+02H,R6
0FFA 8D00        R     MOV     pwm_input+01H,R5
0FFC 8C00        R     MOV     pwm_input,R4
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 888
                                           ; SOURCE LINE # 889
0FFE         ?C0091:
                                           ; SOURCE LINE # 893
0FFE 7F64              MOV     R7,#064H
1000 7E00              MOV     R6,#00H
1002 7D00              MOV     R5,#00H
1004 7C00              MOV     R4,#00H
1006 AB00        R     MOV     R3,pwm_input+03H
1008 AA00        R     MOV     R2,pwm_input+02H
100A A900        R     MOV     R1,pwm_input+01H
100C A800        R     MOV     R0,pwm_input
100E D3                SETB    C
100F 120000      E     LCALL   ?C?SLCMP
1012 4010              JC      ?C0144
                                           ; SOURCE LINE # 894
1014 7F64              MOV     R7,#064H
1016 7E00              MOV     R6,#00H
1018 7D00              MOV     R5,#00H
101A 7C00              MOV     R4,#00H
101C 8F00        R     MOV     pwm_input+03H,R7
101E 8E00        R     MOV     pwm_input+02H,R6
1020 8D00        R     MOV     pwm_input+01H,R5
1022 8C00        R     MOV     pwm_input,R4
1024         ?C0144:
                                           ; SOURCE LINE # 895
1024 7F9C              MOV     R7,#09CH
1026 7EFF              MOV     R6,#0FFH
1028 7DFF              MOV     R5,#0FFH
102A 7CFF              MOV     R4,#0FFH
102C AB00        R     MOV     R3,pwm_input+03H
102E AA00        R     MOV     R2,pwm_input+02H
1030 A900        R     MOV     R1,pwm_input+01H
1032 A800        R     MOV     R0,pwm_input
1034 C3                CLR     C
1035 120000      E     LCALL   ?C?SLCMP
1038 5010              JNC     ?C0145
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 79  

                                           ; SOURCE LINE # 896
103A 7F9C              MOV     R7,#09CH
103C 7EFF              MOV     R6,#0FFH
103E 7DFF              MOV     R5,#0FFH
1040 7CFF              MOV     R4,#0FFH
1042 8F00        R     MOV     pwm_input+03H,R7
1044 8E00        R     MOV     pwm_input+02H,R6
1046 8D00        R     MOV     pwm_input+01H,R5
1048 8C00        R     MOV     pwm_input,R4
104A         ?C0145:
                                           ; SOURCE LINE # 899
104A 900000      E     MOV     DPTR,#c_mem+034H
104D E0                MOVX    A,@DPTR
104E FF                MOV     R7,A
104F EF                MOV     A,R7
1050 6401              XRL     A,#01H
1052 6039              JZ      ?C0146
                                           ; SOURCE LINE # 900
1054 AF00        R     MOV     R7,pwm_input+03H
1056 AE00        R     MOV     R6,pwm_input+02H
1058 AD00        R     MOV     R5,pwm_input+01H
105A AC00        R     MOV     R4,pwm_input
105C 780A              MOV     R0,#0AH
105E 120000      E     LCALL   ?C?LSHL
1061 7B64              MOV     R3,#064H
1063 7A00              MOV     R2,#00H
1065 7900              MOV     R1,#00H
1067 7800              MOV     R0,#00H
1069 120000      E     LCALL   ?C?SLDIV
106C A804              MOV     R0,AR4
106E A905              MOV     R1,AR5
1070 AA06              MOV     R2,AR6
1072 AB07              MOV     R3,AR7
1074 900000      E     MOV     DPTR,#dev_pwm_limit
1077 E0                MOVX    A,@DPTR
1078 FF                MOV     R7,A
1079 E4                CLR     A
107A FC                MOV     R4,A
107B FD                MOV     R5,A
107C FE                MOV     R6,A
107D 120000      E     LCALL   ?C?LMUL
1080 780A              MOV     R0,#0AH
1082 120000      E     LCALL   ?C?SLSHR
1085 8F00        R     MOV     pwm_input+03H,R7
1087 8E00        R     MOV     pwm_input+02H,R6
1089 8D00        R     MOV     pwm_input+01H,R5
108B 8C00        R     MOV     pwm_input,R4
108D         ?C0146:
                                           ; SOURCE LINE # 903
108D 7F00              MOV     R7,#00H
108F 7E00              MOV     R6,#00H
1091 7D00              MOV     R5,#00H
1093 7C00              MOV     R4,#00H
1095 AB00        R     MOV     R3,pwm_input+03H
1097 AA00        R     MOV     R2,pwm_input+02H
1099 A900        R     MOV     R1,pwm_input+01H
109B A800        R     MOV     R0,pwm_input
109D C3                CLR     C
109E 120000      E     LCALL   ?C?SLCMP
10A1 4004              JC      ?C0147
10A3 7F01              MOV     R7,#01H
10A5 8002              SJMP    ?C0148
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 80  

10A7         ?C0147:
10A7 7FFF              MOV     R7,#0FFH
10A9         ?C0148:
10A9 900000      E     MOV     DPTR,#pwm_sign
10AC EF                MOV     A,R7
10AD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 905
10AE 300007            JNB     motor_dir,?C0149
                                           ; SOURCE LINE # 906
10B1 7F01              MOV     R7,#01H
10B3 120000      E     LCALL   _MOTOR_DIR_Write
10B6 8005              SJMP    ?C0150
10B8         ?C0149:
                                           ; SOURCE LINE # 908
10B8 7F00              MOV     R7,#00H
10BA 120000      E     LCALL   _MOTOR_DIR_Write
10BD         ?C0150:
                                           ; SOURCE LINE # 910
10BD AE00        R     MOV     R6,pwm_input+02H
10BF AF00        R     MOV     R7,pwm_input+03H
10C1 120000      E     LCALL   _abs
10C4 120000      E     LCALL   _PWM_MOTORS_WriteCompare1
                                           ; SOURCE LINE # 911
10C7 22                RET     
             ; FUNCTION motor_control (END)

             ; FUNCTION _encoder_reading (BEGIN)
                                           ; SOURCE LINE # 917
0000 900000      R     MOV     DPTR,#idx
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 919
0005 900000      R     MOV     DPTR,#idx
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 928
000C 7F00              MOV     R7,#00H
000E 7E00              MOV     R6,#00H
0010 7D00              MOV     R5,#00H
0012 7C00              MOV     R4,#00H
0014 900000      R     MOV     DPTR,#init_rot
0017 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 947
001A E500        R     MOV     A,index
001C C3                CLR     C
001D 9403              SUBB    A,#03H
001F 4003              JC      $ + 5H
0021 020000      R     LJMP    ?C0153
0024         ?C0152:
                                           ; SOURCE LINE # 950
0024 300032            JNB     reset_last_value_flag,?C0154
                                           ; SOURCE LINE # 951
0027 900000      R     MOV     DPTR,#jj
002A 7403              MOV     A,#03H
002C F0                MOVX    @DPTR,A
002D         ?C0155:
002D 900000      R     MOV     DPTR,#jj
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 14                DEC     A
0033 F0                MOVX    @DPTR,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 81  

0034 EF                MOV     A,R7
0035 6020              JZ      ?C0156
                                           ; SOURCE LINE # 952
0037 7F00              MOV     R7,#00H
0039 7E00              MOV     R6,#00H
003B 7D00              MOV     R5,#00H
003D 7C00              MOV     R4,#00H
003F 900000      R     MOV     DPTR,#jj
0042 E0                MOVX    A,@DPTR
0043 FB                MOV     R3,A
0044 EB                MOV     A,R3
0045 25E0              ADD     A,ACC
0047 25E0              ADD     A,ACC
0049 2400        R     ADD     A,#LOW last_value_encoder
004B F582              MOV     DPL,A
004D E4                CLR     A
004E 3400        R     ADDC    A,#HIGH last_value_encoder
0050 F583              MOV     DPH,A
0052 120000      E     LCALL   ?C?LSTXDATA
0055 80D6              SJMP    ?C0155
0057         ?C0156:
                                           ; SOURCE LINE # 954
0057 C200        E     CLR     reset_last_value_flag
                                           ; SOURCE LINE # 955
0059         ?C0154:
                                           ; SOURCE LINE # 959
0059 E500        R     MOV     A,index
005B 7020              JNZ     ?C0157
                                           ; SOURCE LINE # 960
005D 120000      E     LCALL   SHIFTREG_ENC_1_ReadData
0060 7801              MOV     R0,#01H
0062 120000      E     LCALL   ?C?ULSHR
0065 EF                MOV     A,R7
0066 54FF              ANL     A,#0FFH
0068 FF                MOV     R7,A
0069 EE                MOV     A,R6
006A 54FF              ANL     A,#0FFH
006C FE                MOV     R6,A
006D ED                MOV     A,R5
006E 5403              ANL     A,#03H
0070 FD                MOV     R5,A
0071 EC                MOV     A,R4
0072 5400              ANL     A,#00H
0074 FC                MOV     R4,A
0075 900000      R     MOV     DPTR,#data_encoder
0078 120000      E     LCALL   ?C?LSTXDATA
007B 8043              SJMP    ?C0158
007D         ?C0157:
                                           ; SOURCE LINE # 961
                                           ; SOURCE LINE # 962
007D E500        R     MOV     A,index
007F B40120            CJNE    A,#01H,?C0159
                                           ; SOURCE LINE # 963
0082 120000      E     LCALL   SHIFTREG_ENC_2_ReadData
0085 7801              MOV     R0,#01H
0087 120000      E     LCALL   ?C?ULSHR
008A EF                MOV     A,R7
008B 54FF              ANL     A,#0FFH
008D FF                MOV     R7,A
008E EE                MOV     A,R6
008F 54FF              ANL     A,#0FFH
0091 FE                MOV     R6,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 82  

0092 ED                MOV     A,R5
0093 5403              ANL     A,#03H
0095 FD                MOV     R5,A
0096 EC                MOV     A,R4
0097 5400              ANL     A,#00H
0099 FC                MOV     R4,A
009A 900000      R     MOV     DPTR,#data_encoder
009D 120000      E     LCALL   ?C?LSTXDATA
00A0 801E              SJMP    ?C0158
00A2         ?C0159:
                                           ; SOURCE LINE # 965
00A2 120000      E     LCALL   SHIFTREG_ENC_3_ReadData
00A5 7801              MOV     R0,#01H
00A7 120000      E     LCALL   ?C?ULSHR
00AA EF                MOV     A,R7
00AB 54FF              ANL     A,#0FFH
00AD FF                MOV     R7,A
00AE EE                MOV     A,R6
00AF 54FF              ANL     A,#0FFH
00B1 FE                MOV     R6,A
00B2 ED                MOV     A,R5
00B3 5403              ANL     A,#03H
00B5 FD                MOV     R5,A
00B6 EC                MOV     A,R4
00B7 5400              ANL     A,#00H
00B9 FC                MOV     R4,A
00BA 900000      R     MOV     DPTR,#data_encoder
00BD 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 966
00C0         ?C0158:
                                           ; SOURCE LINE # 969
00C0 7B01              MOV     R3,#01H
00C2 7A00        R     MOV     R2,#HIGH data_encoder
00C4 7900        R     MOV     R1,#LOW data_encoder
00C6 120000      E     LCALL   _check_enc_data
00C9 4003              JC      $ + 5H
00CB 020000      R     LJMP    ?C0161
                                           ; SOURCE LINE # 971
00CE 900000      R     MOV     DPTR,#data_encoder
00D1 120000      E     LCALL   ?C?LLDXDATA
00D4 EF                MOV     A,R7
00D5 54C0              ANL     A,#0C0H
00D7 FF                MOV     R7,A
00D8 EE                MOV     A,R6
00D9 54FF              ANL     A,#0FFH
00DB FE                MOV     R6,A
00DC ED                MOV     A,R5
00DD 5403              ANL     A,#03H
00DF FD                MOV     R5,A
00E0 EC                MOV     A,R4
00E1 5400              ANL     A,#00H
00E3 FC                MOV     R4,A
00E4 EF                MOV     A,R7
00E5 2400              ADD     A,#00H
00E7 FF                MOV     R7,A
00E8 EE                MOV     A,R6
00E9 3400              ADDC    A,#00H
00EB FE                MOV     R6,A
00EC ED                MOV     A,R5
00ED 34FE              ADDC    A,#0FEH
00EF FD                MOV     R5,A
00F0 EC                MOV     A,R4
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 83  

00F1 34FF              ADDC    A,#0FFH
00F3 FC                MOV     R4,A
00F4 7802              MOV     R0,#02H
00F6 120000      E     LCALL   ?C?ULSHR
00F9 EE                MOV     A,R6
00FA 33                RLC     A
00FB 95E0              SUBB    A,ACC
00FD FD                MOV     R5,A
00FE FC                MOV     R4,A
00FF AB00        R     MOV     R3,index
0101 EB                MOV     A,R3
0102 25E0              ADD     A,ACC
0104 25E0              ADD     A,ACC
0106 2400        E     ADD     A,#LOW g_mem+038H
0108 F582              MOV     DPL,A
010A E4                CLR     A
010B 3400        E     ADDC    A,#HIGH g_mem+038H
010D F583              MOV     DPH,A
010F 120000      E     LCALL   ?C?LLDXDATA0
0112 120000      E     LCALL   ?C?LADD
0115 900000      R     MOV     DPTR,#value_encoder
0118 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 978
011B 300020            JNB     only_first_time,?C0162
                                           ; SOURCE LINE # 979
011E 900000      R     MOV     DPTR,#value_encoder
0121 120000      E     LCALL   ?C?LLDXDATA
0124 AB00        R     MOV     R3,index
0126 EB                MOV     A,R3
0127 25E0              ADD     A,ACC
0129 25E0              ADD     A,ACC
012B 2400        R     ADD     A,#LOW last_value_encoder
012D F582              MOV     DPL,A
012F E4                CLR     A
0130 3400        R     ADDC    A,#HIGH last_value_encoder
0132 F583              MOV     DPH,A
0134 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 980
0137 E500        R     MOV     A,index
0139 B40202            CJNE    A,#02H,?C0162
                                           ; SOURCE LINE # 981
013C C200        R     CLR     only_first_time
                                           ; SOURCE LINE # 982
013E         ?C0162:
                                           ; SOURCE LINE # 985
013E AF00        R     MOV     R7,index
0140 EF                MOV     A,R7
0141 25E0              ADD     A,ACC
0143 25E0              ADD     A,ACC
0145 2400        R     ADD     A,#LOW last_value_encoder
0147 F582              MOV     DPL,A
0149 E4                CLR     A
014A 3400        R     ADDC    A,#HIGH last_value_encoder
014C F583              MOV     DPH,A
014E 120000      E     LCALL   ?C?LLDXDATA0
0151 900000      R     MOV     DPTR,#value_encoder
0154 120000      E     LCALL   ?C?LLDXDATA
0157 120000      E     LCALL   ?C?LSUB
015A 900000      R     MOV     DPTR,#aux
015D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1005
0160 7F00              MOV     R7,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 84  

0162 7EC0              MOV     R6,#0C0H
0164 7D00              MOV     R5,#00H
0166 7C00              MOV     R4,#00H
0168 900000      R     MOV     DPTR,#aux
016B 120000      E     LCALL   ?C?LLDXDATA0
016E D3                SETB    C
016F 120000      E     LCALL   ?C?SLCMP
0172 4011              JC      ?C0164
                                           ; SOURCE LINE # 1006
0174 AF00        R     MOV     R7,index
0176 7400        E     MOV     A,#LOW g_meas+014H
0178 2F                ADD     A,R7
0179 F582              MOV     DPL,A
017B E4                CLR     A
017C 3400        E     ADDC    A,#HIGH g_meas+014H
017E F583              MOV     DPH,A
0180 E0                MOVX    A,@DPTR
0181 14                DEC     A
0182 F0                MOVX    @DPTR,A
0183 805F              SJMP    ?C0165
0185         ?C0164:
                                           ; SOURCE LINE # 1007
                                           ; SOURCE LINE # 1008
0185 7F00              MOV     R7,#00H
0187 7E40              MOV     R6,#040H
0189 7DFF              MOV     R5,#0FFH
018B 7CFF              MOV     R4,#0FFH
018D 900000      R     MOV     DPTR,#aux
0190 120000      E     LCALL   ?C?LLDXDATA0
0193 C3                CLR     C
0194 120000      E     LCALL   ?C?SLCMP
0197 5011              JNC     ?C0166
                                           ; SOURCE LINE # 1009
0199 AF00        R     MOV     R7,index
019B 7400        E     MOV     A,#LOW g_meas+014H
019D 2F                ADD     A,R7
019E F582              MOV     DPL,A
01A0 E4                CLR     A
01A1 3400        E     ADDC    A,#HIGH g_meas+014H
01A3 F583              MOV     DPH,A
01A5 E0                MOVX    A,@DPTR
01A6 04                INC     A
01A7 F0                MOVX    @DPTR,A
01A8 803A              SJMP    ?C0165
01AA         ?C0166:
                                           ; SOURCE LINE # 1010
                                           ; SOURCE LINE # 1011
01AA 900000      R     MOV     DPTR,#aux
01AD 120000      E     LCALL   ?C?LLDXDATA
01B0 120000      E     LCALL   _abs
01B3 D3                SETB    C
01B4 EF                MOV     A,R7
01B5 9400              SUBB    A,#00H
01B7 EE                MOV     A,R6
01B8 6480              XRL     A,#080H
01BA 94C0              SUBB    A,#0C0H
01BC 4026              JC      ?C0165
                                           ; SOURCE LINE # 1012
01BE AF00        R     MOV     R7,index
01C0 7400        R     MOV     A,#LOW error
01C2 2F                ADD     A,R7
01C3 F582              MOV     DPL,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 85  

01C5 E4                CLR     A
01C6 3400        R     ADDC    A,#HIGH error
01C8 F583              MOV     DPH,A
01CA E0                MOVX    A,@DPTR
01CB 04                INC     A
01CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1013
01CD AF00        R     MOV     R7,index
01CF 7400        R     MOV     A,#LOW error
01D1 2F                ADD     A,R7
01D2 F582              MOV     DPL,A
01D4 E4                CLR     A
01D5 3400        R     ADDC    A,#HIGH error
01D7 F583              MOV     DPH,A
01D9 E0                MOVX    A,@DPTR
01DA FF                MOV     R7,A
01DB EF                MOV     A,R7
01DC C3                CLR     C
01DD 940A              SUBB    A,#0AH
01DF 5003              JNC     $ + 5H
01E1 020000      R     LJMP    ?C0153
01E4         ?C0169:
                                           ; SOURCE LINE # 1016
                                           ; SOURCE LINE # 1017
                                           ; SOURCE LINE # 1018
01E4         ?C0165:
                                           ; SOURCE LINE # 1020
01E4 AF00        R     MOV     R7,index
01E6 7400        R     MOV     A,#LOW error
01E8 2F                ADD     A,R7
01E9 F582              MOV     DPL,A
01EB E4                CLR     A
01EC 3400        R     ADDC    A,#HIGH error
01EE F583              MOV     DPH,A
01F0 E4                CLR     A
01F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1022
01F2 900000      R     MOV     DPTR,#value_encoder
01F5 120000      E     LCALL   ?C?LLDXDATA
01F8 AB00        R     MOV     R3,index
01FA EB                MOV     A,R3
01FB 25E0              ADD     A,ACC
01FD 25E0              ADD     A,ACC
01FF 2400        R     ADD     A,#LOW last_value_encoder
0201 F582              MOV     DPL,A
0203 E4                CLR     A
0204 3400        R     ADDC    A,#HIGH last_value_encoder
0206 F583              MOV     DPH,A
0208 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1024
020B 900000      R     MOV     DPTR,#value_encoder
020E 120000      E     LCALL   ?C?LLDXDATA
0211 C004              PUSH    AR4
0213 C005              PUSH    AR5
0215 C006              PUSH    AR6
0217 C007              PUSH    AR7
0219 AF00        R     MOV     R7,index
021B 7400        E     MOV     A,#LOW g_meas+014H
021D 2F                ADD     A,R7
021E F582              MOV     DPL,A
0220 E4                CLR     A
0221 3400        E     ADDC    A,#HIGH g_meas+014H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 86  

0223 F583              MOV     DPH,A
0225 E0                MOVX    A,@DPTR
0226 FF                MOV     R7,A
0227 EF                MOV     A,R7
0228 33                RLC     A
0229 95E0              SUBB    A,ACC
022B FE                MOV     R6,A
022C FD                MOV     R5,A
022D FC                MOV     R4,A
022E 7810              MOV     R0,#010H
0230 120000      E     LCALL   ?C?LSHL
0233 A804              MOV     R0,AR4
0235 A905              MOV     R1,AR5
0237 AA06              MOV     R2,AR6
0239 AB07              MOV     R3,AR7
023B D007              POP     AR7
023D D006              POP     AR6
023F D005              POP     AR5
0241 D004              POP     AR4
0243 120000      E     LCALL   ?C?LADD
0246 900000      R     MOV     DPTR,#value_encoder
0249 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1026
024C AF00        R     MOV     R7,index
024E EF                MOV     A,R7
024F 25E0              ADD     A,ACC
0251 25E0              ADD     A,ACC
0253 2400        E     ADD     A,#LOW c_mem+044H
0255 F582              MOV     DPL,A
0257 E4                CLR     A
0258 3400        E     ADDC    A,#HIGH c_mem+044H
025A F583              MOV     DPH,A
025C 120000      E     LCALL   ?C?LLDXDATA
025F 7B00              MOV     R3,#00H
0261 7A00              MOV     R2,#00H
0263 7980              MOV     R1,#080H
0265 783F              MOV     R0,#03FH
0267 120000      E     LCALL   ?C?FPCMP3
026A 6029              JZ      ?C0170
                                           ; SOURCE LINE # 1027
026C 900000      R     MOV     DPTR,#value_encoder
026F 120000      E     LCALL   ?C?LLDXDATA
0272 EC                MOV     A,R4
0273 120000      E     LCALL   ?C?FCASTL
0276 AB00        R     MOV     R3,index
0278 EB                MOV     A,R3
0279 25E0              ADD     A,ACC
027B 25E0              ADD     A,ACC
027D 2400        E     ADD     A,#LOW c_mem+044H
027F F582              MOV     DPL,A
0281 E4                CLR     A
0282 3400        E     ADDC    A,#HIGH c_mem+044H
0284 F583              MOV     DPH,A
0286 120000      E     LCALL   ?C?LLDXDATA0
0289 120000      E     LCALL   ?C?FPMUL
028C 120000      E     LCALL   ?C?CASTF
028F 900000      R     MOV     DPTR,#value_encoder
0292 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1028
0295         ?C0170:
                                           ; SOURCE LINE # 1030
0295 900000      R     MOV     DPTR,#value_encoder
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 87  

0298 120000      E     LCALL   ?C?LLDXDATA
029B AB00        R     MOV     R3,index
029D EB                MOV     A,R3
029E 25E0              ADD     A,ACC
02A0 25E0              ADD     A,ACC
02A2 2400        E     ADD     A,#LOW g_meas
02A4 F582              MOV     DPL,A
02A6 E4                CLR     A
02A7 3400        E     ADDC    A,#HIGH g_meas
02A9 F583              MOV     DPH,A
02AB 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1031
02AE         ?C0161:
                                           ; SOURCE LINE # 1033
02AE E500        R     MOV     A,index
02B0 120000      E     LCALL   ?C?CCASE
02B3 0000        R     DW      ?C0172
02B5 00                DB      00H
02B6 0000        R     DW      ?C0173
02B8 01                DB      01H
02B9 0000        R     DW      ?C0174
02BB 02                DB      02H
02BC 0000              DW      00H
02BE 0000        R     DW      ?C0171
                                           ; SOURCE LINE # 1034
02C0         ?C0172:
                                           ; SOURCE LINE # 1035
02C0 7F12              MOV     R7,#012H
02C2 7E00              MOV     R6,#00H
02C4 7D00              MOV     R5,#00H
02C6 7C00              MOV     R4,#00H
02C8 900000      R     MOV     DPTR,#v_value
02CB 120000      E     LCALL   ?C?LLDXDATA0
02CE 120000      E     LCALL   ?C?LMUL
02D1 C004              PUSH    AR4
02D3 C005              PUSH    AR5
02D5 C006              PUSH    AR6
02D7 C007              PUSH    AR7
02D9 7F0B              MOV     R7,#0BH
02DB 7E00              MOV     R6,#00H
02DD 7D00              MOV     R5,#00H
02DF 7C00              MOV     R4,#00H
02E1 900000      R     MOV     DPTR,#value_encoder
02E4 120000      E     LCALL   ?C?LLDXDATA0
02E7 120000      E     LCALL   ?C?LMUL
02EA D003              POP     AR3
02EC D002              POP     AR2
02EE D001              POP     AR1
02F0 D000              POP     AR0
02F2 120000      E     LCALL   ?C?LSUB
02F5 C004              PUSH    AR4
02F7 C005              PUSH    AR5
02F9 C006              PUSH    AR6
02FB C007              PUSH    AR7
02FD 7F09              MOV     R7,#09H
02FF 7E00              MOV     R6,#00H
0301 7D00              MOV     R5,#00H
0303 7C00              MOV     R4,#00H
0305 900000      R     MOV     DPTR,#vv_value
0308 120000      E     LCALL   ?C?LLDXDATA0
030B 120000      E     LCALL   ?C?LMUL
030E A804              MOV     R0,AR4
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 88  

0310 A905              MOV     R1,AR5
0312 AA06              MOV     R2,AR6
0314 AB07              MOV     R3,AR7
0316 D007              POP     AR7
0318 D006              POP     AR6
031A D005              POP     AR5
031C D004              POP     AR4
031E 120000      E     LCALL   ?C?LADD
0321 C004              PUSH    AR4
0323 C005              PUSH    AR5
0325 C006              PUSH    AR6
0327 C007              PUSH    AR7
0329 7F02              MOV     R7,#02H
032B 7E00              MOV     R6,#00H
032D 7D00              MOV     R5,#00H
032F 7C00              MOV     R4,#00H
0331 900000      R     MOV     DPTR,#vvv_value
0334 120000      E     LCALL   ?C?LLDXDATA0
0337 120000      E     LCALL   ?C?LMUL
033A A804              MOV     R0,AR4
033C A905              MOV     R1,AR5
033E AA06              MOV     R2,AR6
0340 AB07              MOV     R3,AR7
0342 D007              POP     AR7
0344 D006              POP     AR6
0346 D005              POP     AR5
0348 D004              POP     AR4
034A 120000      E     LCALL   ?C?LSUB
034D 120000      E     LCALL   _filter_vel_1
0350 EE                MOV     A,R6
0351 33                RLC     A
0352 95E0              SUBB    A,ACC
0354 FD                MOV     R5,A
0355 FC                MOV     R4,A
0356 900000      R     MOV     DPTR,#speed_encoder
0359 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1036
035C 020000      R     LJMP    ?C0171
                                           ; SOURCE LINE # 1038
035F         ?C0173:
                                           ; SOURCE LINE # 1039
035F 7F12              MOV     R7,#012H
0361 7E00              MOV     R6,#00H
0363 7D00              MOV     R5,#00H
0365 7C00              MOV     R4,#00H
0367 900000      R     MOV     DPTR,#v_value+04H
036A 120000      E     LCALL   ?C?LLDXDATA0
036D 120000      E     LCALL   ?C?LMUL
0370 C004              PUSH    AR4
0372 C005              PUSH    AR5
0374 C006              PUSH    AR6
0376 C007              PUSH    AR7
0378 7F0B              MOV     R7,#0BH
037A 7E00              MOV     R6,#00H
037C 7D00              MOV     R5,#00H
037E 7C00              MOV     R4,#00H
0380 900000      R     MOV     DPTR,#value_encoder
0383 120000      E     LCALL   ?C?LLDXDATA0
0386 120000      E     LCALL   ?C?LMUL
0389 D003              POP     AR3
038B D002              POP     AR2
038D D001              POP     AR1
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 89  

038F D000              POP     AR0
0391 120000      E     LCALL   ?C?LSUB
0394 C004              PUSH    AR4
0396 C005              PUSH    AR5
0398 C006              PUSH    AR6
039A C007              PUSH    AR7
039C 7F09              MOV     R7,#09H
039E 7E00              MOV     R6,#00H
03A0 7D00              MOV     R5,#00H
03A2 7C00              MOV     R4,#00H
03A4 900000      R     MOV     DPTR,#vv_value+04H
03A7 120000      E     LCALL   ?C?LLDXDATA0
03AA 120000      E     LCALL   ?C?LMUL
03AD A804              MOV     R0,AR4
03AF A905              MOV     R1,AR5
03B1 AA06              MOV     R2,AR6
03B3 AB07              MOV     R3,AR7
03B5 D007              POP     AR7
03B7 D006              POP     AR6
03B9 D005              POP     AR5
03BB D004              POP     AR4
03BD 120000      E     LCALL   ?C?LADD
03C0 C004              PUSH    AR4
03C2 C005              PUSH    AR5
03C4 C006              PUSH    AR6
03C6 C007              PUSH    AR7
03C8 7F02              MOV     R7,#02H
03CA 7E00              MOV     R6,#00H
03CC 7D00              MOV     R5,#00H
03CE 7C00              MOV     R4,#00H
03D0 900000      R     MOV     DPTR,#vvv_value+04H
03D3 120000      E     LCALL   ?C?LLDXDATA0
03D6 120000      E     LCALL   ?C?LMUL
03D9 A804              MOV     R0,AR4
03DB A905              MOV     R1,AR5
03DD AA06              MOV     R2,AR6
03DF AB07              MOV     R3,AR7
03E1 D007              POP     AR7
03E3 D006              POP     AR6
03E5 D005              POP     AR5
03E7 D004              POP     AR4
03E9 120000      E     LCALL   ?C?LSUB
03EC 120000      E     LCALL   _filter_vel_2
03EF EE                MOV     A,R6
03F0 33                RLC     A
03F1 95E0              SUBB    A,ACC
03F3 FD                MOV     R5,A
03F4 FC                MOV     R4,A
03F5 900000      R     MOV     DPTR,#speed_encoder
03F8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1040
03FB 020000      R     LJMP    ?C0171
                                           ; SOURCE LINE # 1042
03FE         ?C0174:
                                           ; SOURCE LINE # 1043
03FE 7F12              MOV     R7,#012H
0400 7E00              MOV     R6,#00H
0402 7D00              MOV     R5,#00H
0404 7C00              MOV     R4,#00H
0406 900000      R     MOV     DPTR,#v_value+08H
0409 120000      E     LCALL   ?C?LLDXDATA0
040C 120000      E     LCALL   ?C?LMUL
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 90  

040F C004              PUSH    AR4
0411 C005              PUSH    AR5
0413 C006              PUSH    AR6
0415 C007              PUSH    AR7
0417 7F0B              MOV     R7,#0BH
0419 7E00              MOV     R6,#00H
041B 7D00              MOV     R5,#00H
041D 7C00              MOV     R4,#00H
041F 900000      R     MOV     DPTR,#value_encoder
0422 120000      E     LCALL   ?C?LLDXDATA0
0425 120000      E     LCALL   ?C?LMUL
0428 D003              POP     AR3
042A D002              POP     AR2
042C D001              POP     AR1
042E D000              POP     AR0
0430 120000      E     LCALL   ?C?LSUB
0433 C004              PUSH    AR4
0435 C005              PUSH    AR5
0437 C006              PUSH    AR6
0439 C007              PUSH    AR7
043B 7F09              MOV     R7,#09H
043D 7E00              MOV     R6,#00H
043F 7D00              MOV     R5,#00H
0441 7C00              MOV     R4,#00H
0443 900000      R     MOV     DPTR,#vv_value+08H
0446 120000      E     LCALL   ?C?LLDXDATA0
0449 120000      E     LCALL   ?C?LMUL
044C A804              MOV     R0,AR4
044E A905              MOV     R1,AR5
0450 AA06              MOV     R2,AR6
0452 AB07              MOV     R3,AR7
0454 D007              POP     AR7
0456 D006              POP     AR6
0458 D005              POP     AR5
045A D004              POP     AR4
045C 120000      E     LCALL   ?C?LADD
045F C004              PUSH    AR4
0461 C005              PUSH    AR5
0463 C006              PUSH    AR6
0465 C007              PUSH    AR7
0467 7F02              MOV     R7,#02H
0469 7E00              MOV     R6,#00H
046B 7D00              MOV     R5,#00H
046D 7C00              MOV     R4,#00H
046F 900000      R     MOV     DPTR,#vvv_value+08H
0472 120000      E     LCALL   ?C?LLDXDATA0
0475 120000      E     LCALL   ?C?LMUL
0478 A804              MOV     R0,AR4
047A A905              MOV     R1,AR5
047C AA06              MOV     R2,AR6
047E AB07              MOV     R3,AR7
0480 D007              POP     AR7
0482 D006              POP     AR6
0484 D005              POP     AR5
0486 D004              POP     AR4
0488 120000      E     LCALL   ?C?LSUB
048B 120000      E     LCALL   _filter_vel_3
048E EE                MOV     A,R6
048F 33                RLC     A
0490 95E0              SUBB    A,ACC
0492 FD                MOV     R5,A
0493 FC                MOV     R4,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 91  

0494 900000      R     MOV     DPTR,#speed_encoder
0497 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1044
                                           ; SOURCE LINE # 1045
049A         ?C0171:
                                           ; SOURCE LINE # 1047
049A 7F00              MOV     R7,#00H
049C 7E00              MOV     R6,#00H
049E 7DC0              MOV     R5,#0C0H
04A0 7C40              MOV     R4,#040H
04A2 900000      E     MOV     DPTR,#cycle_time
04A5 120000      E     LCALL   ?C?LLDXDATA0
04A8 120000      E     LCALL   ?C?FPMUL
04AB C004              PUSH    AR4
04AD C005              PUSH    AR5
04AF C006              PUSH    AR6
04B1 C007              PUSH    AR7
04B3 900000      R     MOV     DPTR,#speed_encoder
04B6 120000      E     LCALL   ?C?LLDXDATA
04B9 EC                MOV     A,R4
04BA 120000      E     LCALL   ?C?FCASTL
04BD D003              POP     AR3
04BF D002              POP     AR2
04C1 D001              POP     AR1
04C3 D000              POP     AR0
04C5 120000      E     LCALL   ?C?FPDIV
04C8 120000      E     LCALL   ?C?CASTF
04CB 900000      R     MOV     DPTR,#speed_encoder
04CE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1048
04D1 900000      R     MOV     DPTR,#speed_encoder
04D4 120000      E     LCALL   ?C?LLDXDATA
04D7 AB00        R     MOV     R3,index
04D9 EB                MOV     A,R3
04DA 25E0              ADD     A,ACC
04DC 25E0              ADD     A,ACC
04DE 2400        E     ADD     A,#LOW g_meas+01FH
04E0 F582              MOV     DPL,A
04E2 E4                CLR     A
04E3 3400        E     ADDC    A,#HIGH g_meas+01FH
04E5 F583              MOV     DPH,A
04E7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1070
04EA AF00        R     MOV     R7,index
04EC EF                MOV     A,R7
04ED 25E0              ADD     A,ACC
04EF 25E0              ADD     A,ACC
04F1 2400        R     ADD     A,#LOW vv_value
04F3 F582              MOV     DPL,A
04F5 E4                CLR     A
04F6 3400        R     ADDC    A,#HIGH vv_value
04F8 F583              MOV     DPH,A
04FA 120000      E     LCALL   ?C?LLDXDATA
04FD AB00        R     MOV     R3,index
04FF EB                MOV     A,R3
0500 25E0              ADD     A,ACC
0502 25E0              ADD     A,ACC
0504 2400        R     ADD     A,#LOW vvv_value
0506 F582              MOV     DPL,A
0508 E4                CLR     A
0509 3400        R     ADDC    A,#HIGH vvv_value
050B F583              MOV     DPH,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 92  

050D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1071
0510 AF00        R     MOV     R7,index
0512 EF                MOV     A,R7
0513 25E0              ADD     A,ACC
0515 25E0              ADD     A,ACC
0517 2400        R     ADD     A,#LOW v_value
0519 F582              MOV     DPL,A
051B E4                CLR     A
051C 3400        R     ADDC    A,#HIGH v_value
051E F583              MOV     DPH,A
0520 120000      E     LCALL   ?C?LLDXDATA
0523 AB00        R     MOV     R3,index
0525 EB                MOV     A,R3
0526 25E0              ADD     A,ACC
0528 25E0              ADD     A,ACC
052A 2400        R     ADD     A,#LOW vv_value
052C F582              MOV     DPL,A
052E E4                CLR     A
052F 3400        R     ADDC    A,#HIGH vv_value
0531 F583              MOV     DPH,A
0533 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1072
0536 900000      R     MOV     DPTR,#value_encoder
0539 120000      E     LCALL   ?C?LLDXDATA
053C AB00        R     MOV     R3,index
053E EB                MOV     A,R3
053F 25E0              ADD     A,ACC
0541 25E0              ADD     A,ACC
0543 2400        R     ADD     A,#LOW v_value
0545 F582              MOV     DPL,A
0547 E4                CLR     A
0548 3400        R     ADDC    A,#HIGH v_value
054A F583              MOV     DPH,A
054C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1082
054F 300003      R     JNB     pos_reconstruct,$ + 6H
0552 020000      R     LJMP    ?C0153
                                           ; SOURCE LINE # 1083
0555 900000      R     MOV     DPTR,#one_time_execute
0558 E0                MOVX    A,@DPTR
0559 FF                MOV     R7,A
055A EF                MOV     A,R7
055B C3                CLR     C
055C 9422              SUBB    A,#022H
055E 5007              JNC     ?C0176
                                           ; SOURCE LINE # 1084
0560 900000      R     MOV     DPTR,#one_time_execute
0563 E0                MOVX    A,@DPTR
0564 04                INC     A
0565 F0                MOVX    @DPTR,A
0566 22                RET     
0567         ?C0176:
                                           ; SOURCE LINE # 1085
                                           ; SOURCE LINE # 1087
0567 900000      E     MOV     DPTR,#c_mem+079H
056A E0                MOVX    A,@DPTR
056B FF                MOV     R7,A
056C EF                MOV     A,R7
056D 605E              JZ      ?C0178
                                           ; SOURCE LINE # 1089
056F 900000      E     MOV     DPTR,#g_meas
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 93  

0572 120000      E     LCALL   ?C?LLDXDATA
0575 C004              PUSH    AR4
0577 C005              PUSH    AR5
0579 C006              PUSH    AR6
057B C007              PUSH    AR7
057D 900000      E     MOV     DPTR,#g_meas+04H
0580 120000      E     LCALL   ?C?LLDXDATA
0583 900000      E     MOV     DPTR,#?_calc_turns_fcn?BYTE+04H
0586 120000      E     LCALL   ?C?LSTXDATA
0589 D007              POP     AR7
058B D006              POP     AR6
058D D005              POP     AR5
058F D004              POP     AR4
0591 120000      E     LCALL   _calc_turns_fcn
0594 EE                MOV     A,R6
0595 33                RLC     A
0596 95E0              SUBB    A,ACC
0598 FD                MOV     R5,A
0599 FC                MOV     R4,A
059A 900000      R     MOV     DPTR,#init_rot
059D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1091
05A0 7F00              MOV     R7,#00H
05A2 7E00              MOV     R6,#00H
05A4 7D00              MOV     R5,#00H
05A6 7C00              MOV     R4,#00H
05A8 900000      E     MOV     DPTR,#c_mem+044H
05AB 120000      E     LCALL   ?C?LLDXDATA0
05AE 120000      E     LCALL   ?C?FPCMP3
05B1 500F              JNC     ?C0179
                                           ; SOURCE LINE # 1092
05B3 900000      R     MOV     DPTR,#init_rot
05B6 120000      E     LCALL   ?C?LLDXDATA
05B9 120000      E     LCALL   ?C?LNEG
05BC 900000      R     MOV     DPTR,#init_rot
05BF 120000      E     LCALL   ?C?LSTXDATA
05C2         ?C0179:
                                           ; SOURCE LINE # 1094
05C2 900000      R     MOV     DPTR,#init_rot
05C5 120000      E     LCALL   ?C?LLDXDATA
05C8 900000      E     MOV     DPTR,#g_meas+014H
05CB EF                MOV     A,R7
05CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1096
05CD         ?C0178:
                                           ; SOURCE LINE # 1098
05CD 7B01              MOV     R3,#01H
05CF 7A00        E     MOV     R2,#HIGH c_mem+044H
05D1 7900        E     MOV     R1,#LOW c_mem+044H
05D3 AE02              MOV     R6,AR2
05D5 AF01              MOV     R7,AR1
05D7 EF                MOV     A,R7
05D8 6401              XRL     A,#01H
05DA 4E                ORL     A,R6
05DB 601C              JZ      ?C0180
                                           ; SOURCE LINE # 1099
05DD 900000      E     MOV     DPTR,#g_meas
05E0 120000      E     LCALL   ?C?LLDXDATA
05E3 EC                MOV     A,R4
05E4 120000      E     LCALL   ?C?FCASTL
05E7 900000      E     MOV     DPTR,#c_mem+044H
05EA 120000      E     LCALL   ?C?LLDXDATA0
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 94  

05ED 120000      E     LCALL   ?C?FPDIV
05F0 120000      E     LCALL   ?C?CASTF
05F3 900000      E     MOV     DPTR,#g_meas
05F6 120000      E     LCALL   ?C?LSTXDATA
05F9         ?C0180:
                                           ; SOURCE LINE # 1101
05F9 900000      E     MOV     DPTR,#g_meas
05FC 120000      E     LCALL   ?C?LLDXDATA
05FF C004              PUSH    AR4
0601 C005              PUSH    AR5
0603 C006              PUSH    AR6
0605 C007              PUSH    AR7
0607 900000      R     MOV     DPTR,#init_rot
060A 120000      E     LCALL   ?C?LLDXDATA
060D 7810              MOV     R0,#010H
060F 120000      E     LCALL   ?C?LSHL
0612 A804              MOV     R0,AR4
0614 A905              MOV     R1,AR5
0616 AA06              MOV     R2,AR6
0618 AB07              MOV     R3,AR7
061A D007              POP     AR7
061C D006              POP     AR6
061E D005              POP     AR5
0620 D004              POP     AR4
0622 120000      E     LCALL   ?C?LADD
0625 900000      E     MOV     DPTR,#g_meas
0628 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1103
062B 7B01              MOV     R3,#01H
062D 7A00        E     MOV     R2,#HIGH c_mem+044H
062F 7900        E     MOV     R1,#LOW c_mem+044H
0631 AE02              MOV     R6,AR2
0633 AF01              MOV     R7,AR1
0635 EF                MOV     A,R7
0636 6401              XRL     A,#01H
0638 4E                ORL     A,R6
0639 601C              JZ      ?C0181
                                           ; SOURCE LINE # 1104
063B 900000      E     MOV     DPTR,#g_meas
063E 120000      E     LCALL   ?C?LLDXDATA
0641 EC                MOV     A,R4
0642 120000      E     LCALL   ?C?FCASTL
0645 900000      E     MOV     DPTR,#c_mem+044H
0648 120000      E     LCALL   ?C?LLDXDATA0
064B 120000      E     LCALL   ?C?FPMUL
064E 120000      E     LCALL   ?C?CASTF
0651 900000      E     MOV     DPTR,#g_meas
0654 120000      E     LCALL   ?C?LSTXDATA
0657         ?C0181:
                                           ; SOURCE LINE # 1107
0657 900000      E     MOV     DPTR,#g_meas
065A 120000      E     LCALL   ?C?LLDXDATA
065D 900000      E     MOV     DPTR,#g_refNew
0660 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1109
0663 900000      E     MOV     DPTR,#g_ref+018H
0666 E0                MOVX    A,@DPTR
0667 FF                MOV     R7,A
0668 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1111
066B D200        R     SETB    pos_reconstruct
                                           ; SOURCE LINE # 1112
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 95  

                                           ; SOURCE LINE # 1113
                                           ; SOURCE LINE # 1114
066D         ?C0153:
066D 22                RET     
             ; FUNCTION _encoder_reading (END)

             ; FUNCTION analog_read_end (BEGIN)
                                           ; SOURCE LINE # 1120
0000         ?C0182:
                                           ; SOURCE LINE # 1152
0000 120000      E     LCALL   ADC_STATUS_Read
0003 EF                MOV     A,R7
0004 700A              JNZ     ?C0183
                                           ; SOURCE LINE # 1153
0006 3000F7            JNB     interrupt_flag,?C0182
                                           ; SOURCE LINE # 1154
0009 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1155
000B 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1156
                                           ; SOURCE LINE # 1157
000E 80F0              SJMP    ?C0182
0010         ?C0183:
                                           ; SOURCE LINE # 1160
0010 900000      E     MOV     DPTR,#ADC_buf
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 EF                MOV     A,R7
0019 249A              ADD     A,#09AH
001B FF                MOV     R7,A
001C EE                MOV     A,R6
001D 34F9              ADDC    A,#0F9H
001F FE                MOV     R6,A
0020 EE                MOV     A,R6
0021 33                RLC     A
0022 95E0              SUBB    A,ACC
0024 FD                MOV     R5,A
0025 FC                MOV     R4,A
0026 7BA0              MOV     R3,#0A0H
0028 7A07              MOV     R2,#07H
002A 7900              MOV     R1,#00H
002C 7800              MOV     R0,#00H
002E 120000      E     LCALL   ?C?LMUL
0031 7807              MOV     R0,#07H
0033 120000      E     LCALL   ?C?SLSHR
0036 900000      E     MOV     DPTR,#dev_tension
0039 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1162
003C 300005            JNB     interrupt_flag,?C0185
                                           ; SOURCE LINE # 1163
003F C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1164
0041 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1165
0044         ?C0185:
                                           ; SOURCE LINE # 1166
0044 900000      R     MOV     DPTR,#first_tension_valid
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 96  

0049 EF                MOV     A,R7
004A 607A              JZ      ?C0186
004C 300077            JNB     tension_valid,?C0186
                                           ; SOURCE LINE # 1167
004F 900000      R     MOV     DPTR,#count
0052 E4                CLR     A
0053 75F001            MOV     B,#01H
0056 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1169
0059 900000      R     MOV     DPTR,#count
005C E0                MOVX    A,@DPTR
005D FE                MOV     R6,A
005E A3                INC     DPTR
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 EF                MOV     A,R7
0062 64E8              XRL     A,#0E8H
0064 7003              JNZ     ?C0308
0066 EE                MOV     A,R6
0067 6403              XRL     A,#03H
0069         ?C0308:
0069 705B              JNZ     ?C0186
                                           ; SOURCE LINE # 1170
006B 7F28              MOV     R7,#028H
006D 7E23              MOV     R6,#023H
006F 7D00              MOV     R5,#00H
0071 7C00              MOV     R4,#00H
0073 900000      E     MOV     DPTR,#dev_tension
0076 120000      E     LCALL   ?C?LLDXDATA0
0079 C3                CLR     C
007A 120000      E     LCALL   ?C?SLCMP
007D 5010              JNC     ?C0188
                                           ; SOURCE LINE # 1171
007F 7F40              MOV     R7,#040H
0081 7E1F              MOV     R6,#01FH
0083 7D00              MOV     R5,#00H
0085 7C00              MOV     R4,#00H
0087 900000      R     MOV     DPTR,#pow_tension
008A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1172
008D 8032              SJMP    ?C0189
008F         ?C0188:
                                           ; SOURCE LINE # 1173
                                           ; SOURCE LINE # 1174
008F 7FC8              MOV     R7,#0C8H
0091 7E32              MOV     R6,#032H
0093 7D00              MOV     R5,#00H
0095 7C00              MOV     R4,#00H
0097 900000      E     MOV     DPTR,#dev_tension
009A 120000      E     LCALL   ?C?LLDXDATA0
009D C3                CLR     C
009E 120000      E     LCALL   ?C?SLCMP
00A1 5010              JNC     ?C0190
                                           ; SOURCE LINE # 1175
00A3 7FE0              MOV     R7,#0E0H
00A5 7E2E              MOV     R6,#02EH
00A7 7D00              MOV     R5,#00H
00A9 7C00              MOV     R4,#00H
00AB 900000      R     MOV     DPTR,#pow_tension
00AE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1176
00B1 800E              SJMP    ?C0189
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 97  

00B3         ?C0190:
                                           ; SOURCE LINE # 1178
00B3 7FC0              MOV     R7,#0C0H
00B5 7E5D              MOV     R6,#05DH
00B7 7D00              MOV     R5,#00H
00B9 7C00              MOV     R4,#00H
00BB 900000      R     MOV     DPTR,#pow_tension
00BE 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1179
00C1         ?C0189:
                                           ; SOURCE LINE # 1181
00C1 900000      R     MOV     DPTR,#first_tension_valid
00C4 E4                CLR     A
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1182
                                           ; SOURCE LINE # 1183
00C6         ?C0186:
                                           ; SOURCE LINE # 1187
00C6 7F58              MOV     R7,#058H
00C8 7E1B              MOV     R6,#01BH
00CA 7D00              MOV     R5,#00H
00CC 7C00              MOV     R4,#00H
00CE 900000      E     MOV     DPTR,#dev_tension
00D1 120000      E     LCALL   ?C?LLDXDATA0
00D4 D3                SETB    C
00D5 120000      E     LCALL   ?C?SLCMP
00D8 5003              JNC     $ + 5H
00DA 020000      R     LJMP    ?C0192
                                           ; SOURCE LINE # 1190
00DD 7FE8              MOV     R7,#0E8H
00DF 7E03              MOV     R6,#03H
00E1 7D00              MOV     R5,#00H
00E3 7C00              MOV     R4,#00H
00E5 900000      R     MOV     DPTR,#count2
00E8 120000      E     LCALL   ?C?LLDXDATA0
00EB C3                CLR     C
00EC 120000      E     LCALL   ?C?ULCMP
00EF 7004              JNZ     ?C0193
                                           ; SOURCE LINE # 1191
00F1 D200        E     SETB    tension_valid
                                           ; SOURCE LINE # 1192
00F3 802B              SJMP    ?C0194
00F5         ?C0193:
                                           ; SOURCE LINE # 1193
                                           ; SOURCE LINE # 1194
00F5 900000      R     MOV     DPTR,#count2
00F8 120000      E     LCALL   ?C?LLDXDATA
00FB EF                MOV     A,R7
00FC 2401              ADD     A,#01H
00FE FF                MOV     R7,A
00FF EE                MOV     A,R6
0100 3400              ADDC    A,#00H
0102 FE                MOV     R6,A
0103 ED                MOV     A,R5
0104 3400              ADDC    A,#00H
0106 FD                MOV     R5,A
0107 EC                MOV     A,R4
0108 3400              ADDC    A,#00H
010A FC                MOV     R4,A
010B 900000      R     MOV     DPTR,#count2
010E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1195
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 98  

0111 900000      E     MOV     DPTR,#dev_tension
0114 120000      E     LCALL   ?C?LLDXDATA
0117 120000      E     LCALL   _filter_voltage
011A 900000      E     MOV     DPTR,#dev_tension_f
011D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1196
0120         ?C0194:
                                           ; SOURCE LINE # 1198
0120 900000      E     MOV     DPTR,#g_mem+07BH
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 EF                MOV     A,R7
0126 6003              JZ      ?C0195
                                           ; SOURCE LINE # 1199
0128 120000      R     LCALL   pwm_limit_search
012B         ?C0195:
                                           ; SOURCE LINE # 1202
012B 900000      E     MOV     DPTR,#ADC_buf+02H
012E E0                MOVX    A,@DPTR
012F FE                MOV     R6,A
0130 A3                INC     DPTR
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 EF                MOV     A,R7
0134 249A              ADD     A,#09AH
0136 FF                MOV     R7,A
0137 EE                MOV     A,R6
0138 34F9              ADDC    A,#0F9H
013A FE                MOV     R6,A
013B EE                MOV     A,R6
013C 33                RLC     A
013D 95E0              SUBB    A,ACC
013F FD                MOV     R5,A
0140 FC                MOV     R4,A
0141 7BAB              MOV     R3,#0ABH
0143 7A64              MOV     R2,#064H
0145 7900              MOV     R1,#00H
0147 7800              MOV     R0,#00H
0149 120000      E     LCALL   ?C?LMUL
014C 780D              MOV     R0,#0DH
014E 120000      E     LCALL   ?C?SLSHR
0151 900000      E     MOV     DPTR,#pwm_sign
0154 E0                MOVX    A,@DPTR
0155 FD                MOV     R5,A
0156 ED                MOV     A,R5
0157 33                RLC     A
0158 95E0              SUBB    A,ACC
015A FC                MOV     R4,A
015B 120000      E     LCALL   ?C?IMUL
015E EE                MOV     A,R6
015F 33                RLC     A
0160 95E0              SUBB    A,ACC
0162 FD                MOV     R5,A
0163 FC                MOV     R4,A
0164 120000      E     LCALL   _filter_i1
0167 900000      E     MOV     DPTR,#g_meas+0CH
016A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1205
016D 900000      E     MOV     DPTR,#g_meas
0170 120000      E     LCALL   ?C?LLDXDATA
0173 900000      E     MOV     DPTR,#g_mem+035H
0176 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 99  

0177 F9                MOV     R1,A
0178 A801              MOV     R0,AR1
017A 120000      E     LCALL   ?C?SLSHR
017D C004              PUSH    AR4
017F C005              PUSH    AR5
0181 C006              PUSH    AR6
0183 C007              PUSH    AR7
0185 900000      E     MOV     DPTR,#g_meas+01FH
0188 120000      E     LCALL   ?C?LLDXDATA
018B 900000      E     MOV     DPTR,#g_mem+035H
018E E0                MOVX    A,@DPTR
018F F9                MOV     R1,A
0190 A801              MOV     R0,AR1
0192 120000      E     LCALL   ?C?SLSHR
0195 900000      E     MOV     DPTR,#?_curr_estim?BYTE+04H
0198 120000      E     LCALL   ?C?LSTXDATA
019B 900000      E     MOV     DPTR,#g_ref
019E 120000      E     LCALL   ?C?LLDXDATA
01A1 900000      E     MOV     DPTR,#g_mem+035H
01A4 E0                MOVX    A,@DPTR
01A5 F9                MOV     R1,A
01A6 A801              MOV     R0,AR1
01A8 120000      E     LCALL   ?C?SLSHR
01AB 900000      E     MOV     DPTR,#?_curr_estim?BYTE+08H
01AE 120000      E     LCALL   ?C?LSTXDATA
01B1 D007              POP     AR7
01B3 D006              POP     AR6
01B5 D005              POP     AR5
01B7 D004              POP     AR4
01B9 120000      E     LCALL   _curr_estim
01BC A804              MOV     R0,AR4
01BE A905              MOV     R1,AR5
01C0 AA06              MOV     R2,AR6
01C2 AB07              MOV     R3,AR7
01C4 900000      E     MOV     DPTR,#g_meas+0CH
01C7 120000      E     LCALL   ?C?LLDXDATA
01CA 120000      E     LCALL   ?C?LSUB
01CD 120000      E     LCALL   _filter_curr_diff
01D0 EE                MOV     A,R6
01D1 33                RLC     A
01D2 95E0              SUBB    A,ACC
01D4 FD                MOV     R5,A
01D5 FC                MOV     R4,A
01D6 900000      E     MOV     DPTR,#g_meas+010H
01D9 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1209
01DC 300005            JNB     interrupt_flag,?C0196
                                           ; SOURCE LINE # 1210
01DF C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1211
01E1 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1212
01E4         ?C0196:
                                           ; SOURCE LINE # 1215
01E4 900000      E     MOV     DPTR,#g_mem+06FH
01E7 E0                MOVX    A,@DPTR
01E8 FF                MOV     R7,A
01E9 EF                MOV     A,R7
01EA 7006              JNZ     ?C0197
                                           ; SOURCE LINE # 1216
01EC 750000      E     MOV     emg_1_status,#00H
                                           ; SOURCE LINE # 1217
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 100 

01EF 750000      E     MOV     emg_2_status,#00H
                                           ; SOURCE LINE # 1218
01F2         ?C0197:
                                           ; SOURCE LINE # 1223
01F2 E500        E     MOV     A,emg_1_status
01F4 120000      E     LCALL   ?C?CCASE
01F7 0000        R     DW      ?C0199
01F9 00                DB      00H
01FA 0000        R     DW      ?C0206
01FC 01                DB      01H
01FD 0000        R     DW      ?C0207
01FF 02                DB      02H
0200 0000        R     DW      ?C0210
0202 03                DB      03H
0203 0000              DW      00H
0205 0000        R     DW      ?C0198
                                           ; SOURCE LINE # 1224
0207         ?C0199:
                                           ; SOURCE LINE # 1225
0207 900000      E     MOV     DPTR,#g_mem+0A5H
020A E0                MOVX    A,@DPTR
020B FF                MOV     R7,A
020C EF                MOV     A,R7
020D 25E0              ADD     A,ACC
020F 2400        E     ADD     A,#LOW ADC_buf+04H
0211 F582              MOV     DPL,A
0213 E4                CLR     A
0214 3400        E     ADDC    A,#HIGH ADC_buf+04H
0216 F583              MOV     DPH,A
0218 E0                MOVX    A,@DPTR
0219 FE                MOV     R6,A
021A A3                INC     DPTR
021B E0                MOVX    A,@DPTR
021C FF                MOV     R7,A
021D EE                MOV     A,R6
021E 33                RLC     A
021F 95E0              SUBB    A,ACC
0221 FD                MOV     R5,A
0222 FC                MOV     R4,A
0223 8F00        R     MOV     i_aux+03H,R7
0225 8E00        R     MOV     i_aux+02H,R6
0227 8D00        R     MOV     i_aux+01H,R5
0229 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1226
022B 7F00              MOV     R7,#00H
022D 7E00              MOV     R6,#00H
022F 7D00              MOV     R5,#00H
0231 7C00              MOV     R4,#00H
0233 AB00        R     MOV     R3,i_aux+03H
0235 AA00        R     MOV     R2,i_aux+02H
0237 A900        R     MOV     R1,i_aux+01H
0239 A800        R     MOV     R0,i_aux
023B C3                CLR     C
023C 120000      E     LCALL   ?C?SLCMP
023F 5010              JNC     ?C0200
                                           ; SOURCE LINE # 1227
0241 7F00              MOV     R7,#00H
0243 7E00              MOV     R6,#00H
0245 7D00              MOV     R5,#00H
0247 7C00              MOV     R4,#00H
0249 8F00        R     MOV     i_aux+03H,R7
024B 8E00        R     MOV     i_aux+02H,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 101 

024D 8D00        R     MOV     i_aux+01H,R5
024F 8C00        R     MOV     i_aux,R4
0251         ?C0200:
                                           ; SOURCE LINE # 1228
0251 AF00        R     MOV     R7,i_aux+03H
0253 AE00        R     MOV     R6,i_aux+02H
0255 AD00        R     MOV     R5,i_aux+01H
0257 AC00        R     MOV     R4,i_aux
0259 120000      E     LCALL   _filter_ch1
025C 8F00        R     MOV     i_aux+03H,R7
025E 8E00        R     MOV     i_aux+02H,R6
0260 8D00        R     MOV     i_aux+01H,R5
0262 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1229
0264 AF00        R     MOV     R7,i_aux+03H
0266 AE00        R     MOV     R6,i_aux+02H
0268 AD00        R     MOV     R5,i_aux+01H
026A AC00        R     MOV     R4,i_aux
026C 780A              MOV     R0,#0AH
026E 120000      E     LCALL   ?C?LSHL
0271 900000      E     MOV     DPTR,#g_mem+070H
0274 120000      E     LCALL   ?C?LLDXDATA0
0277 120000      E     LCALL   ?C?ULDIV
027A 8F00        R     MOV     i_aux+03H,R7
027C 8E00        R     MOV     i_aux+02H,R6
027E 8D00        R     MOV     i_aux+01H,R5
0280 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1231
0282 300005            JNB     interrupt_flag,?C0201
                                           ; SOURCE LINE # 1232
0285 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1233
0287 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1234
028A         ?C0201:
                                           ; SOURCE LINE # 1236
028A 7F00              MOV     R7,#00H
028C 7E00              MOV     R6,#00H
028E 7D00              MOV     R5,#00H
0290 7C00              MOV     R4,#00H
0292 AB00        R     MOV     R3,i_aux+03H
0294 AA00        R     MOV     R2,i_aux+02H
0296 A900        R     MOV     R1,i_aux+01H
0298 A800        R     MOV     R0,i_aux
029A C3                CLR     C
029B 120000      E     LCALL   ?C?SLCMP
029E 5012              JNC     ?C0202
                                           ; SOURCE LINE # 1237
02A0 7F00              MOV     R7,#00H
02A2 7E00              MOV     R6,#00H
02A4 7D00              MOV     R5,#00H
02A6 7C00              MOV     R4,#00H
02A8 8F00        R     MOV     i_aux+03H,R7
02AA 8E00        R     MOV     i_aux+02H,R6
02AC 8D00        R     MOV     i_aux+01H,R5
02AE 8C00        R     MOV     i_aux,R4
02B0 8026              SJMP    ?C0203
02B2         ?C0202:
                                           ; SOURCE LINE # 1239
02B2 7F00              MOV     R7,#00H
02B4 7E04              MOV     R6,#04H
02B6 7D00              MOV     R5,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 102 

02B8 7C00              MOV     R4,#00H
02BA AB00        R     MOV     R3,i_aux+03H
02BC AA00        R     MOV     R2,i_aux+02H
02BE A900        R     MOV     R1,i_aux+01H
02C0 A800        R     MOV     R0,i_aux
02C2 D3                SETB    C
02C3 120000      E     LCALL   ?C?SLCMP
02C6 4010              JC      ?C0203
                                           ; SOURCE LINE # 1240
02C8 7F00              MOV     R7,#00H
02CA 7E04              MOV     R6,#04H
02CC 7D00              MOV     R5,#00H
02CE 7C00              MOV     R4,#00H
02D0 8F00        R     MOV     i_aux+03H,R7
02D2 8E00        R     MOV     i_aux+02H,R6
02D4 8D00        R     MOV     i_aux+01H,R5
02D6 8C00        R     MOV     i_aux,R4
02D8         ?C0203:
                                           ; SOURCE LINE # 1242
02D8 AF00        R     MOV     R7,i_aux+03H
02DA AE00        R     MOV     R6,i_aux+02H
02DC AD00        R     MOV     R5,i_aux+01H
02DE AC00        R     MOV     R4,i_aux
02E0 900000      E     MOV     DPTR,#g_meas+017H
02E3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1244
02E6 200003      E     JB      interrupt_flag,$ + 6H
02E9 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1245
02EC C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1246
02EE 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1247
                                           ; SOURCE LINE # 1249
02F1 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1251
02F4         ?C0206:
                                           ; SOURCE LINE # 1252
02F4 900000      R     MOV     DPTR,#emg_counter_1
02F7 E4                CLR     A
02F8 F0                MOVX    @DPTR,A
02F9 A3                INC     DPTR
02FA E4                CLR     A
02FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1253
02FC 7F00              MOV     R7,#00H
02FE 7E00              MOV     R6,#00H
0300 7D00              MOV     R5,#00H
0302 7C00              MOV     R4,#00H
0304 900000      E     MOV     DPTR,#g_mem+070H
0307 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1254
030A 750002      E     MOV     emg_1_status,#02H
                                           ; SOURCE LINE # 1256
030D 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1258
0310         ?C0207:
                                           ; SOURCE LINE # 1259
0310 900000      R     MOV     DPTR,#emg_counter_1
0313 E4                CLR     A
0314 75F001            MOV     B,#01H
0317 120000      E     LCALL   ?C?IILDX
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 103 

                                           ; SOURCE LINE # 1260
031A 900000      R     MOV     DPTR,#emg_counter_1
031D E0                MOVX    A,@DPTR
031E FE                MOV     R6,A
031F A3                INC     DPTR
0320 E0                MOVX    A,@DPTR
0321 FF                MOV     R7,A
0322 EF                MOV     A,R7
0323 64F4              XRL     A,#0F4H
0325 7003              JNZ     ?C0309
0327 EE                MOV     A,R6
0328 6401              XRL     A,#01H
032A         ?C0309:
032A 6003              JZ      $ + 5H
032C 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1261
032F 900000      R     MOV     DPTR,#emg_counter_1
0332 E4                CLR     A
0333 F0                MOVX    @DPTR,A
0334 A3                INC     DPTR
0335 E4                CLR     A
0336 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1263
0337 7F01              MOV     R7,#01H
0339 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1264
033C 7F00              MOV     R7,#00H
033E 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1266
0341 300005            JNB     interrupt_flag,?C0209
                                           ; SOURCE LINE # 1267
0344 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1268
0346 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1269
0349         ?C0209:
                                           ; SOURCE LINE # 1271
0349 750003      E     MOV     emg_1_status,#03H
                                           ; SOURCE LINE # 1272
                                           ; SOURCE LINE # 1273
034C 020000      R     LJMP    ?C0198
                                           ; SOURCE LINE # 1275
034F         ?C0210:
                                           ; SOURCE LINE # 1277
034F 900000      R     MOV     DPTR,#emg_counter_1
0352 E4                CLR     A
0353 75F001            MOV     B,#01H
0356 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1278
0359 900000      E     MOV     DPTR,#g_mem+0A5H
035C E0                MOVX    A,@DPTR
035D FF                MOV     R7,A
035E EF                MOV     A,R7
035F 25E0              ADD     A,ACC
0361 2400        E     ADD     A,#LOW ADC_buf+04H
0363 F582              MOV     DPL,A
0365 E4                CLR     A
0366 3400        E     ADDC    A,#HIGH ADC_buf+04H
0368 F583              MOV     DPH,A
036A E0                MOVX    A,@DPTR
036B FE                MOV     R6,A
036C A3                INC     DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 104 

036D E0                MOVX    A,@DPTR
036E FF                MOV     R7,A
036F C3                CLR     C
0370 EE                MOV     A,R6
0371 6480              XRL     A,#080H
0373 9480              SUBB    A,#080H
0375 5016              JNC     ?C0211
                                           ; SOURCE LINE # 1279
0377 900000      E     MOV     DPTR,#g_mem+0A5H
037A E0                MOVX    A,@DPTR
037B FF                MOV     R7,A
037C EF                MOV     A,R7
037D 25E0              ADD     A,ACC
037F 2400        E     ADD     A,#LOW ADC_buf+04H
0381 F582              MOV     DPL,A
0383 E4                CLR     A
0384 3400        E     ADDC    A,#HIGH ADC_buf+04H
0386 F583              MOV     DPH,A
0388 E4                CLR     A
0389 F0                MOVX    @DPTR,A
038A A3                INC     DPTR
038B E4                CLR     A
038C F0                MOVX    @DPTR,A
038D         ?C0211:
                                           ; SOURCE LINE # 1280
038D 900000      E     MOV     DPTR,#g_mem+070H
0390 120000      E     LCALL   ?C?LLDXDATA
0393 C004              PUSH    AR4
0395 C005              PUSH    AR5
0397 C006              PUSH    AR6
0399 C007              PUSH    AR7
039B 900000      E     MOV     DPTR,#g_mem+0A5H
039E E0                MOVX    A,@DPTR
039F FF                MOV     R7,A
03A0 EF                MOV     A,R7
03A1 25E0              ADD     A,ACC
03A3 2400        E     ADD     A,#LOW ADC_buf+04H
03A5 F582              MOV     DPL,A
03A7 E4                CLR     A
03A8 3400        E     ADDC    A,#HIGH ADC_buf+04H
03AA F583              MOV     DPH,A
03AC E0                MOVX    A,@DPTR
03AD FE                MOV     R6,A
03AE A3                INC     DPTR
03AF E0                MOVX    A,@DPTR
03B0 FF                MOV     R7,A
03B1 EE                MOV     A,R6
03B2 33                RLC     A
03B3 95E0              SUBB    A,ACC
03B5 FD                MOV     R5,A
03B6 FC                MOV     R4,A
03B7 120000      E     LCALL   _filter_ch1
03BA AB07              MOV     R3,AR7
03BC AA06              MOV     R2,AR6
03BE A905              MOV     R1,AR5
03C0 A804              MOV     R0,AR4
03C2 A804              MOV     R0,AR4
03C4 A905              MOV     R1,AR5
03C6 AA06              MOV     R2,AR6
03C8 AB07              MOV     R3,AR7
03CA D007              POP     AR7
03CC D006              POP     AR6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 105 

03CE D005              POP     AR5
03D0 D004              POP     AR4
03D2 120000      E     LCALL   ?C?LADD
03D5 900000      E     MOV     DPTR,#g_mem+070H
03D8 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1282
03DB 300005            JNB     interrupt_flag,?C0212
                                           ; SOURCE LINE # 1283
03DE C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1284
03E0 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1285
03E3         ?C0212:
                                           ; SOURCE LINE # 1287
03E3 900000      R     MOV     DPTR,#emg_counter_1
03E6 E0                MOVX    A,@DPTR
03E7 FE                MOV     R6,A
03E8 A3                INC     DPTR
03E9 E0                MOVX    A,@DPTR
03EA FF                MOV     R7,A
03EB EF                MOV     A,R7
03EC 64E8              XRL     A,#0E8H
03EE 7003              JNZ     ?C0310
03F0 EE                MOV     A,R6
03F1 6403              XRL     A,#03H
03F3         ?C0310:
03F3 7034              JNZ     ?C0198
                                           ; SOURCE LINE # 1288
03F5 900000      E     MOV     DPTR,#g_mem+070H
03F8 120000      E     LCALL   ?C?LLDXDATA
03FB 7BE8              MOV     R3,#0E8H
03FD 7A03              MOV     R2,#03H
03FF 7900              MOV     R1,#00H
0401 7800              MOV     R0,#00H
0403 120000      E     LCALL   ?C?ULDIV
0406 900000      E     MOV     DPTR,#g_mem+070H
0409 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1290
040C 300005            JNB     interrupt_flag,?C0214
                                           ; SOURCE LINE # 1291
040F C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1292
0411 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1293
0414         ?C0214:
                                           ; SOURCE LINE # 1295
0414 7F00              MOV     R7,#00H
0416 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1296
0419 7F00              MOV     R7,#00H
041B 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1298
041E 900000      R     MOV     DPTR,#emg_counter_1
0421 E4                CLR     A
0422 F0                MOVX    @DPTR,A
0423 A3                INC     DPTR
0424 E4                CLR     A
0425 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1300
0426 750000      E     MOV     emg_1_status,#00H
                                           ; SOURCE LINE # 1301
                                           ; SOURCE LINE # 1302
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 106 

                                           ; SOURCE LINE # 1304
                                           ; SOURCE LINE # 1305
                                           ; SOURCE LINE # 1306
0429         ?C0198:
                                           ; SOURCE LINE # 1308
0429 300005            JNB     interrupt_flag,?C0216
                                           ; SOURCE LINE # 1309
042C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1310
042E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1311
0431         ?C0216:
                                           ; SOURCE LINE # 1313
0431 E500        E     MOV     A,emg_2_status
0433 120000      E     LCALL   ?C?CCASE
0436 0000        R     DW      ?C0218
0438 00                DB      00H
0439 0000        R     DW      ?C0224
043B 01                DB      01H
043C 0000        R     DW      ?C0226
043E 02                DB      02H
043F 0000        R     DW      ?C0229
0441 03                DB      03H
0442 0000        R     DW      ?C0234
0444 04                DB      04H
0445 0000        R     DW      ?C0236
0447 05                DB      05H
0448 0000              DW      00H
044A 0000        R     DW      ?C0217
                                           ; SOURCE LINE # 1314
044C         ?C0218:
                                           ; SOURCE LINE # 1315
044C 900000      E     MOV     DPTR,#g_mem+0A5H
044F E0                MOVX    A,@DPTR
0450 FF                MOV     R7,A
0451 C3                CLR     C
0452 7403              MOV     A,#03H
0454 9F                SUBB    A,R7
0455 FF                MOV     R7,A
0456 EF                MOV     A,R7
0457 25E0              ADD     A,ACC
0459 2400        E     ADD     A,#LOW ADC_buf
045B F582              MOV     DPL,A
045D E4                CLR     A
045E 3400        E     ADDC    A,#HIGH ADC_buf
0460 F583              MOV     DPH,A
0462 E0                MOVX    A,@DPTR
0463 FE                MOV     R6,A
0464 A3                INC     DPTR
0465 E0                MOVX    A,@DPTR
0466 FF                MOV     R7,A
0467 EE                MOV     A,R6
0468 33                RLC     A
0469 95E0              SUBB    A,ACC
046B FD                MOV     R5,A
046C FC                MOV     R4,A
046D 8F00        R     MOV     i_aux+03H,R7
046F 8E00        R     MOV     i_aux+02H,R6
0471 8D00        R     MOV     i_aux+01H,R5
0473 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1316
0475 7F00              MOV     R7,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 107 

0477 7E00              MOV     R6,#00H
0479 7D00              MOV     R5,#00H
047B 7C00              MOV     R4,#00H
047D AB00        R     MOV     R3,i_aux+03H
047F AA00        R     MOV     R2,i_aux+02H
0481 A900        R     MOV     R1,i_aux+01H
0483 A800        R     MOV     R0,i_aux
0485 C3                CLR     C
0486 120000      E     LCALL   ?C?SLCMP
0489 5010              JNC     ?C0219
                                           ; SOURCE LINE # 1317
048B 7F00              MOV     R7,#00H
048D 7E00              MOV     R6,#00H
048F 7D00              MOV     R5,#00H
0491 7C00              MOV     R4,#00H
0493 8F00        R     MOV     i_aux+03H,R7
0495 8E00        R     MOV     i_aux+02H,R6
0497 8D00        R     MOV     i_aux+01H,R5
0499 8C00        R     MOV     i_aux,R4
049B         ?C0219:
                                           ; SOURCE LINE # 1318
049B AF00        R     MOV     R7,i_aux+03H
049D AE00        R     MOV     R6,i_aux+02H
049F AD00        R     MOV     R5,i_aux+01H
04A1 AC00        R     MOV     R4,i_aux
04A3 120000      E     LCALL   _filter_ch2
04A6 8F00        R     MOV     i_aux+03H,R7
04A8 8E00        R     MOV     i_aux+02H,R6
04AA 8D00        R     MOV     i_aux+01H,R5
04AC 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1319
04AE AF00        R     MOV     R7,i_aux+03H
04B0 AE00        R     MOV     R6,i_aux+02H
04B2 AD00        R     MOV     R5,i_aux+01H
04B4 AC00        R     MOV     R4,i_aux
04B6 780A              MOV     R0,#0AH
04B8 120000      E     LCALL   ?C?LSHL
04BB 900000      E     MOV     DPTR,#g_mem+074H
04BE 120000      E     LCALL   ?C?LLDXDATA0
04C1 120000      E     LCALL   ?C?ULDIV
04C4 8F00        R     MOV     i_aux+03H,R7
04C6 8E00        R     MOV     i_aux+02H,R6
04C8 8D00        R     MOV     i_aux+01H,R5
04CA 8C00        R     MOV     i_aux,R4
                                           ; SOURCE LINE # 1321
04CC 300005            JNB     interrupt_flag,?C0220
                                           ; SOURCE LINE # 1322
04CF C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1323
04D1 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1324
04D4         ?C0220:
                                           ; SOURCE LINE # 1326
04D4 7F00              MOV     R7,#00H
04D6 7E00              MOV     R6,#00H
04D8 7D00              MOV     R5,#00H
04DA 7C00              MOV     R4,#00H
04DC AB00        R     MOV     R3,i_aux+03H
04DE AA00        R     MOV     R2,i_aux+02H
04E0 A900        R     MOV     R1,i_aux+01H
04E2 A800        R     MOV     R0,i_aux
04E4 C3                CLR     C
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 108 

04E5 120000      E     LCALL   ?C?SLCMP
04E8 5012              JNC     ?C0221
                                           ; SOURCE LINE # 1327
04EA 7F00              MOV     R7,#00H
04EC 7E00              MOV     R6,#00H
04EE 7D00              MOV     R5,#00H
04F0 7C00              MOV     R4,#00H
04F2 8F00        R     MOV     i_aux+03H,R7
04F4 8E00        R     MOV     i_aux+02H,R6
04F6 8D00        R     MOV     i_aux+01H,R5
04F8 8C00        R     MOV     i_aux,R4
04FA 8026              SJMP    ?C0222
04FC         ?C0221:
                                           ; SOURCE LINE # 1329
04FC 7F00              MOV     R7,#00H
04FE 7E04              MOV     R6,#04H
0500 7D00              MOV     R5,#00H
0502 7C00              MOV     R4,#00H
0504 AB00        R     MOV     R3,i_aux+03H
0506 AA00        R     MOV     R2,i_aux+02H
0508 A900        R     MOV     R1,i_aux+01H
050A A800        R     MOV     R0,i_aux
050C D3                SETB    C
050D 120000      E     LCALL   ?C?SLCMP
0510 4010              JC      ?C0222
                                           ; SOURCE LINE # 1330
0512 7F00              MOV     R7,#00H
0514 7E04              MOV     R6,#04H
0516 7D00              MOV     R5,#00H
0518 7C00              MOV     R4,#00H
051A 8F00        R     MOV     i_aux+03H,R7
051C 8E00        R     MOV     i_aux+02H,R6
051E 8D00        R     MOV     i_aux+01H,R5
0520 8C00        R     MOV     i_aux,R4
0522         ?C0222:
                                           ; SOURCE LINE # 1332
0522 AF00        R     MOV     R7,i_aux+03H
0524 AE00        R     MOV     R6,i_aux+02H
0526 AD00        R     MOV     R5,i_aux+01H
0528 AC00        R     MOV     R4,i_aux
052A 900000      E     MOV     DPTR,#g_meas+01BH
052D 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1334
0530 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1336
0533         ?C0224:
                                           ; SOURCE LINE # 1337
0533 900000      R     MOV     DPTR,#emg_counter_2
0536 E4                CLR     A
0537 F0                MOVX    @DPTR,A
0538 A3                INC     DPTR
0539 E4                CLR     A
053A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1338
053B 7F00              MOV     R7,#00H
053D 7E00              MOV     R6,#00H
053F 7D00              MOV     R5,#00H
0541 7C00              MOV     R4,#00H
0543 900000      E     MOV     DPTR,#g_mem+074H
0546 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1340
0549 300005            JNB     interrupt_flag,?C0225
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 109 

                                           ; SOURCE LINE # 1341
054C C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1342
054E 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1343
0551         ?C0225:
                                           ; SOURCE LINE # 1345
0551 750004      E     MOV     emg_2_status,#04H
                                           ; SOURCE LINE # 1346
0554 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1348
0557         ?C0226:
                                           ; SOURCE LINE # 1349
0557 900000      R     MOV     DPTR,#emg_counter_2
055A E4                CLR     A
055B 75F001            MOV     B,#01H
055E 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1350
0561 900000      R     MOV     DPTR,#emg_counter_2
0564 E0                MOVX    A,@DPTR
0565 FE                MOV     R6,A
0566 A3                INC     DPTR
0567 E0                MOVX    A,@DPTR
0568 FF                MOV     R7,A
0569 EF                MOV     A,R7
056A 64F4              XRL     A,#0F4H
056C 7003              JNZ     ?C0311
056E EE                MOV     A,R6
056F 6401              XRL     A,#01H
0571         ?C0311:
0571 6003              JZ      $ + 5H
0573 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1351
0576 900000      R     MOV     DPTR,#emg_counter_2
0579 E4                CLR     A
057A F0                MOVX    @DPTR,A
057B A3                INC     DPTR
057C E4                CLR     A
057D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1353
057E 7F01              MOV     R7,#01H
0580 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1354
0583 7F00              MOV     R7,#00H
0585 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1356
0588 300005            JNB     interrupt_flag,?C0228
                                           ; SOURCE LINE # 1357
058B C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1358
058D 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1359
0590         ?C0228:
                                           ; SOURCE LINE # 1361
0590 750003      E     MOV     emg_2_status,#03H
                                           ; SOURCE LINE # 1362
                                           ; SOURCE LINE # 1363
0593 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1365
0596         ?C0229:
                                           ; SOURCE LINE # 1367
0596 900000      R     MOV     DPTR,#emg_counter_2
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 110 

0599 E4                CLR     A
059A 75F001            MOV     B,#01H
059D 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1368
05A0 900000      E     MOV     DPTR,#g_mem+0A5H
05A3 E0                MOVX    A,@DPTR
05A4 FF                MOV     R7,A
05A5 C3                CLR     C
05A6 7403              MOV     A,#03H
05A8 9F                SUBB    A,R7
05A9 FF                MOV     R7,A
05AA EF                MOV     A,R7
05AB 25E0              ADD     A,ACC
05AD 2400        E     ADD     A,#LOW ADC_buf
05AF F582              MOV     DPL,A
05B1 E4                CLR     A
05B2 3400        E     ADDC    A,#HIGH ADC_buf
05B4 F583              MOV     DPH,A
05B6 E0                MOVX    A,@DPTR
05B7 FE                MOV     R6,A
05B8 A3                INC     DPTR
05B9 E0                MOVX    A,@DPTR
05BA FF                MOV     R7,A
05BB C3                CLR     C
05BC EE                MOV     A,R6
05BD 6480              XRL     A,#080H
05BF 9480              SUBB    A,#080H
05C1 501B              JNC     ?C0230
                                           ; SOURCE LINE # 1369
05C3 900000      E     MOV     DPTR,#g_mem+0A5H
05C6 E0                MOVX    A,@DPTR
05C7 FF                MOV     R7,A
05C8 C3                CLR     C
05C9 7403              MOV     A,#03H
05CB 9F                SUBB    A,R7
05CC FF                MOV     R7,A
05CD EF                MOV     A,R7
05CE 25E0              ADD     A,ACC
05D0 2400        E     ADD     A,#LOW ADC_buf
05D2 F582              MOV     DPL,A
05D4 E4                CLR     A
05D5 3400        E     ADDC    A,#HIGH ADC_buf
05D7 F583              MOV     DPH,A
05D9 E4                CLR     A
05DA F0                MOVX    @DPTR,A
05DB A3                INC     DPTR
05DC E4                CLR     A
05DD F0                MOVX    @DPTR,A
05DE         ?C0230:
                                           ; SOURCE LINE # 1370
05DE 900000      E     MOV     DPTR,#g_mem+074H
05E1 120000      E     LCALL   ?C?LLDXDATA
05E4 C004              PUSH    AR4
05E6 C005              PUSH    AR5
05E8 C006              PUSH    AR6
05EA C007              PUSH    AR7
05EC 900000      E     MOV     DPTR,#g_mem+0A5H
05EF E0                MOVX    A,@DPTR
05F0 FF                MOV     R7,A
05F1 C3                CLR     C
05F2 7403              MOV     A,#03H
05F4 9F                SUBB    A,R7
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 111 

05F5 FF                MOV     R7,A
05F6 EF                MOV     A,R7
05F7 25E0              ADD     A,ACC
05F9 2400        E     ADD     A,#LOW ADC_buf
05FB F582              MOV     DPL,A
05FD E4                CLR     A
05FE 3400        E     ADDC    A,#HIGH ADC_buf
0600 F583              MOV     DPH,A
0602 E0                MOVX    A,@DPTR
0603 FE                MOV     R6,A
0604 A3                INC     DPTR
0605 E0                MOVX    A,@DPTR
0606 FF                MOV     R7,A
0607 EE                MOV     A,R6
0608 33                RLC     A
0609 95E0              SUBB    A,ACC
060B FD                MOV     R5,A
060C FC                MOV     R4,A
060D 120000      E     LCALL   _filter_ch2
0610 AB07              MOV     R3,AR7
0612 AA06              MOV     R2,AR6
0614 A905              MOV     R1,AR5
0616 A804              MOV     R0,AR4
0618 A804              MOV     R0,AR4
061A A905              MOV     R1,AR5
061C AA06              MOV     R2,AR6
061E AB07              MOV     R3,AR7
0620 D007              POP     AR7
0622 D006              POP     AR6
0624 D005              POP     AR5
0626 D004              POP     AR4
0628 120000      E     LCALL   ?C?LADD
062B 900000      E     MOV     DPTR,#g_mem+074H
062E 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1372
0631 300005            JNB     interrupt_flag,?C0231
                                           ; SOURCE LINE # 1373
0634 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1374
0636 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1375
0639         ?C0231:
                                           ; SOURCE LINE # 1377
0639 900000      R     MOV     DPTR,#emg_counter_2
063C E0                MOVX    A,@DPTR
063D FE                MOV     R6,A
063E A3                INC     DPTR
063F E0                MOVX    A,@DPTR
0640 FF                MOV     R7,A
0641 EF                MOV     A,R7
0642 64E8              XRL     A,#0E8H
0644 7003              JNZ     ?C0312
0646 EE                MOV     A,R6
0647 6403              XRL     A,#03H
0649         ?C0312:
0649 6003              JZ      $ + 5H
064B 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1378
064E 900000      E     MOV     DPTR,#g_mem+074H
0651 120000      E     LCALL   ?C?LLDXDATA
0654 7BE8              MOV     R3,#0E8H
0656 7A03              MOV     R2,#03H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 112 

0658 7900              MOV     R1,#00H
065A 7800              MOV     R0,#00H
065C 120000      E     LCALL   ?C?ULDIV
065F 900000      E     MOV     DPTR,#g_mem+074H
0662 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1380
0665 7F00              MOV     R7,#00H
0667 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1381
066A 7F00              MOV     R7,#00H
066C 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1383
066F 900000      R     MOV     DPTR,#emg_counter_2
0672 E4                CLR     A
0673 F0                MOVX    @DPTR,A
0674 A3                INC     DPTR
0675 E4                CLR     A
0676 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1385
0677 300005            JNB     interrupt_flag,?C0233
                                           ; SOURCE LINE # 1386
067A C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1387
067C 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1388
067F         ?C0233:
                                           ; SOURCE LINE # 1390
067F 750005      E     MOV     emg_2_status,#05H
                                           ; SOURCE LINE # 1391
                                           ; SOURCE LINE # 1392
0682 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1394
0685         ?C0234:
                                           ; SOURCE LINE # 1395
0685 E500        E     MOV     A,emg_1_status
0687 6003              JZ      $ + 5H
0689 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1396
068C 750002      E     MOV     emg_2_status,#02H
                                           ; SOURCE LINE # 1397
068F 020000      R     LJMP    ?C0217
                                           ; SOURCE LINE # 1399
0692         ?C0236:
                                           ; SOURCE LINE # 1400
0692 900000      R     MOV     DPTR,#emg_counter_2
0695 E4                CLR     A
0696 75F001            MOV     B,#01H
0699 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1401
069C 900000      R     MOV     DPTR,#emg_counter_2
069F E0                MOVX    A,@DPTR
06A0 FE                MOV     R6,A
06A1 A3                INC     DPTR
06A2 E0                MOVX    A,@DPTR
06A3 FF                MOV     R7,A
06A4 EF                MOV     A,R7
06A5 64F4              XRL     A,#0F4H
06A7 7003              JNZ     ?C0313
06A9 EE                MOV     A,R6
06AA 6401              XRL     A,#01H
06AC         ?C0313:
06AC 706C              JNZ     ?C0217
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 113 

                                           ; SOURCE LINE # 1402
06AE 900000      R     MOV     DPTR,#emg_counter_2
06B1 E4                CLR     A
06B2 F0                MOVX    @DPTR,A
06B3 A3                INC     DPTR
06B4 E4                CLR     A
06B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1404
06B6 300005            JNB     interrupt_flag,?C0238
                                           ; SOURCE LINE # 1405
06B9 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1406
06BB 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1407
06BE         ?C0238:
                                           ; SOURCE LINE # 1410
06BE 900000      E     MOV     DPTR,#c_mem+033H
06C1 E0                MOVX    A,@DPTR
06C2 FF                MOV     R7,A
06C3 EF                MOV     A,R7
06C4 6402              XRL     A,#02H
06C6 601D              JZ      ?C0240
06C8 900000      E     MOV     DPTR,#c_mem+033H
06CB E0                MOVX    A,@DPTR
06CC FF                MOV     R7,A
06CD EF                MOV     A,R7
06CE 6403              XRL     A,#03H
06D0 6013              JZ      ?C0240
06D2 900000      E     MOV     DPTR,#c_mem+033H
06D5 E0                MOVX    A,@DPTR
06D6 FF                MOV     R7,A
06D7 EF                MOV     A,R7
06D8 6404              XRL     A,#04H
06DA 6009              JZ      ?C0240
06DC 900000      E     MOV     DPTR,#c_mem+033H
06DF E0                MOVX    A,@DPTR
06E0 FF                MOV     R7,A
06E1 EF                MOV     A,R7
06E2 B40532            CJNE    A,#05H,?C0239
06E5         ?C0240:
                                           ; SOURCE LINE # 1413
                                           ; SOURCE LINE # 1414
06E5 900000      E     MOV     DPTR,#c_mem+034H
06E8 E0                MOVX    A,@DPTR
06E9 FF                MOV     R7,A
06EA EF                MOV     A,R7
06EB 7018              JNZ     ?C0241
                                           ; SOURCE LINE # 1415
06ED 900000      E     MOV     DPTR,#g_meas
06F0 120000      E     LCALL   ?C?LLDXDATA
06F3 900000      E     MOV     DPTR,#g_ref
06F6 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1416
06F9 900000      E     MOV     DPTR,#g_meas+04H
06FC 120000      E     LCALL   ?C?LLDXDATA
06FF 900000      E     MOV     DPTR,#g_ref+04H
0702 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1417
0705         ?C0241:
                                           ; SOURCE LINE # 1418
0705 900000      E     MOV     DPTR,#c_mem+032H
0708 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 114 

0709 FF                MOV     R7,A
070A 900000      E     MOV     DPTR,#g_ref+018H
070D EF                MOV     A,R7
070E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1419
070F 900000      E     MOV     DPTR,#g_ref+018H
0712 E0                MOVX    A,@DPTR
0713 FF                MOV     R7,A
0714 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1420
0717         ?C0239:
                                           ; SOURCE LINE # 1422
0717 750000      E     MOV     emg_2_status,#00H
                                           ; SOURCE LINE # 1423
                                           ; SOURCE LINE # 1424
                                           ; SOURCE LINE # 1426
                                           ; SOURCE LINE # 1427
                                           ; SOURCE LINE # 1428
071A         ?C0217:
                                           ; SOURCE LINE # 1430
071A 200003      E     JB      interrupt_flag,$ + 6H
071D 020000      R     LJMP    ?C0244
                                           ; SOURCE LINE # 1431
0720 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1432
0722 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1433
                                           ; SOURCE LINE # 1434
0725 020000      R     LJMP    ?C0244
0728         ?C0192:
                                           ; SOURCE LINE # 1435
                                           ; SOURCE LINE # 1437
0728 750001      E     MOV     emg_1_status,#01H
                                           ; SOURCE LINE # 1438
072B 750001      E     MOV     emg_2_status,#01H
                                           ; SOURCE LINE # 1440
072E C200        E     CLR     tension_valid
                                           ; SOURCE LINE # 1442
0730 7F01              MOV     R7,#01H
0732 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1444
0735 7F00              MOV     R7,#00H
0737 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1446
073A 300005            JNB     interrupt_flag,?C0245
                                           ; SOURCE LINE # 1447
073D C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1448
073F 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1449
0742         ?C0245:
                                           ; SOURCE LINE # 1451
0742 900000      E     MOV     DPTR,#c_mem+06FH
0745 E0                MOVX    A,@DPTR
0746 FF                MOV     R7,A
0747 EF                MOV     A,R7
0748 6034              JZ      ?C0246
                                           ; SOURCE LINE # 1452
074A 900000      E     MOV     DPTR,#c_mem+033H
074D E0                MOVX    A,@DPTR
074E FF                MOV     R7,A
074F EF                MOV     A,R7
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 115 

0750 6402              XRL     A,#02H
0752 601D              JZ      ?C0248
0754 900000      E     MOV     DPTR,#c_mem+033H
0757 E0                MOVX    A,@DPTR
0758 FF                MOV     R7,A
0759 EF                MOV     A,R7
075A 6403              XRL     A,#03H
075C 6013              JZ      ?C0248
075E 900000      E     MOV     DPTR,#c_mem+033H
0761 E0                MOVX    A,@DPTR
0762 FF                MOV     R7,A
0763 EF                MOV     A,R7
0764 6404              XRL     A,#04H
0766 6009              JZ      ?C0248
0768 900000      E     MOV     DPTR,#c_mem+033H
076B E0                MOVX    A,@DPTR
076C FF                MOV     R7,A
076D EF                MOV     A,R7
076E B4050D            CJNE    A,#05H,?C0246
0771         ?C0248:
                                           ; SOURCE LINE # 1455
                                           ; SOURCE LINE # 1456
0771 900000      E     MOV     DPTR,#g_ref+018H
0774 E4                CLR     A
0775 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1457
0776 900000      E     MOV     DPTR,#g_ref+018H
0779 E0                MOVX    A,@DPTR
077A FF                MOV     R7,A
077B 120000      E     LCALL   _MOTOR_ON_OFF_Write
                                           ; SOURCE LINE # 1458
                                           ; SOURCE LINE # 1459
077E         ?C0246:
                                           ; SOURCE LINE # 1462
077E 7F00              MOV     R7,#00H
0780 7E00              MOV     R6,#00H
0782 7D00              MOV     R5,#00H
0784 7C00              MOV     R4,#00H
0786 900000      E     MOV     DPTR,#g_meas+0CH
0789 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1465
078C 7F00              MOV     R7,#00H
078E 7E00              MOV     R6,#00H
0790 7D00              MOV     R5,#00H
0792 7C00              MOV     R4,#00H
0794 900000      E     MOV     DPTR,#g_meas+017H
0797 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1466
079A 7F00              MOV     R7,#00H
079C 7E00              MOV     R6,#00H
079E 7D00              MOV     R5,#00H
07A0 7C00              MOV     R4,#00H
07A2 900000      E     MOV     DPTR,#g_meas+01BH
07A5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1468
07A8         ?C0244:
                                           ; SOURCE LINE # 1470
07A8 900000      R     MOV     DPTR,#first_tension_valid
07AB E0                MOVX    A,@DPTR
07AC FF                MOV     R7,A
07AD EF                MOV     A,R7
07AE 706E              JNZ     ?C0249
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 116 

07B0 30006B            JNB     tension_valid,?C0249
07B3 E500        E     MOV     A,emg_1_status
07B5 7067              JNZ     ?C0249
07B7 E500        E     MOV     A,emg_2_status
07B9 7063              JNZ     ?C0249
                                           ; SOURCE LINE # 1471
07BB 900000      E     MOV     DPTR,#dev_tension
07BE 120000      E     LCALL   ?C?LLDXDATA
07C1 120000      E     LCALL   _filter_voltage
07C4 900000      E     MOV     DPTR,#dev_tension_f
07C7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1472
07CA 900000      R     MOV     DPTR,#pow_tension
07CD 120000      E     LCALL   ?C?LLDXDATA
07D0 EC                MOV     A,R4
07D1 120000      E     LCALL   ?C?FCASTL
07D4 7B1F              MOV     R3,#01FH
07D6 7A85              MOV     R2,#085H
07D8 796B              MOV     R1,#06BH
07DA 783F              MOV     R0,#03FH
07DC 120000      E     LCALL   ?C?FPMUL
07DF C004              PUSH    AR4
07E1 C005              PUSH    AR5
07E3 C006              PUSH    AR6
07E5 C007              PUSH    AR7
07E7 900000      E     MOV     DPTR,#dev_tension_f
07EA 120000      E     LCALL   ?C?LLDXDATA
07ED EC                MOV     A,R4
07EE 120000      E     LCALL   ?C?FCASTL
07F1 A804              MOV     R0,AR4
07F3 A905              MOV     R1,AR5
07F5 AA06              MOV     R2,AR6
07F7 AB07              MOV     R3,AR7
07F9 D007              POP     AR7
07FB D006              POP     AR6
07FD D005              POP     AR5
07FF D004              POP     AR4
0801 120000      E     LCALL   ?C?FPCMP3
0804 600E              JZ      ?C0250
0806 400C              JC      ?C0250
                                           ; SOURCE LINE # 1474
0808 7F01              MOV     R7,#01H
080A 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1477
080D 7F00              MOV     R7,#00H
080F 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1478
0812 800A              SJMP    ?C0249
0814         ?C0250:
                                           ; SOURCE LINE # 1479
                                           ; SOURCE LINE # 1481
0814 7F00              MOV     R7,#00H
0816 120000      E     LCALL   _LED_CTRL_Write
                                           ; SOURCE LINE # 1484
0819 7F01              MOV     R7,#01H
081B 120000      E     LCALL   _LED_BLINK_EN_Write
                                           ; SOURCE LINE # 1489
                                           ; SOURCE LINE # 1490
081E         ?C0249:
                                           ; SOURCE LINE # 1492
081E 300005            JNB     interrupt_flag,?C0253
                                           ; SOURCE LINE # 1493
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 117 

0821 C200        E     CLR     interrupt_flag
                                           ; SOURCE LINE # 1494
0823 120000      R     LCALL   interrupt_manager
                                           ; SOURCE LINE # 1495
                                           ; SOURCE LINE # 1496
0826         ?C0253:
0826 22                RET     
             ; FUNCTION analog_read_end (END)

             ; FUNCTION overcurrent_control (BEGIN)
                                           ; SOURCE LINE # 1502
                                           ; SOURCE LINE # 1503
0000 900000      E     MOV     DPTR,#c_mem+069H
0003 E0                MOVX    A,@DPTR
0004 FE                MOV     R6,A
0005 A3                INC     DPTR
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 EF                MOV     A,R7
0009 4E                ORL     A,R6
000A 6074              JZ      ?C0261
                                           ; SOURCE LINE # 1505
000C 900000      E     MOV     DPTR,#c_mem+069H
000F E0                MOVX    A,@DPTR
0010 FE                MOV     R6,A
0011 A3                INC     DPTR
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EE                MOV     A,R6
0015 33                RLC     A
0016 95E0              SUBB    A,ACC
0018 FD                MOV     R5,A
0019 FC                MOV     R4,A
001A 900000      E     MOV     DPTR,#g_meas+0CH
001D 120000      E     LCALL   ?C?LLDXDATA0
0020 D3                SETB    C
0021 120000      E     LCALL   ?C?SLCMP
0024 4008              JC      ?C0255
                                           ; SOURCE LINE # 1507
0026 900000      E     MOV     DPTR,#dev_pwm_limit
0029 E0                MOVX    A,@DPTR
002A 14                DEC     A
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1509
002C 8028              SJMP    ?C0256
002E         ?C0255:
002E 900000      E     MOV     DPTR,#c_mem+069H
0031 E0                MOVX    A,@DPTR
0032 FE                MOV     R6,A
0033 A3                INC     DPTR
0034 E0                MOVX    A,@DPTR
0035 FF                MOV     R7,A
0036 EF                MOV     A,R7
0037 24F6              ADD     A,#0F6H
0039 FF                MOV     R7,A
003A EE                MOV     A,R6
003B 34FF              ADDC    A,#0FFH
003D FE                MOV     R6,A
003E EE                MOV     A,R6
003F 33                RLC     A
0040 95E0              SUBB    A,ACC
0042 FD                MOV     R5,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 118 

0043 FC                MOV     R4,A
0044 900000      E     MOV     DPTR,#g_meas+0CH
0047 120000      E     LCALL   ?C?LLDXDATA0
004A C3                CLR     C
004B 120000      E     LCALL   ?C?SLCMP
004E 5006              JNC     ?C0256
                                           ; SOURCE LINE # 1511
0050 900000      E     MOV     DPTR,#dev_pwm_limit
0053 E0                MOVX    A,@DPTR
0054 04                INC     A
0055 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1512
0056         ?C0256:
                                           ; SOURCE LINE # 1515
0056 900000      E     MOV     DPTR,#dev_pwm_limit
0059 E0                MOVX    A,@DPTR
005A FF                MOV     R7,A
005B EF                MOV     A,R7
005C C3                CLR     C
005D 9400              SUBB    A,#00H
005F 5006              JNC     ?C0258
                                           ; SOURCE LINE # 1516
0061 900000      E     MOV     DPTR,#dev_pwm_limit
0064 E4                CLR     A
0065 F0                MOVX    @DPTR,A
0066 22                RET     
0067         ?C0258:
                                           ; SOURCE LINE # 1518
0067 900000      E     MOV     DPTR,#dev_pwm_sat
006A E0                MOVX    A,@DPTR
006B FF                MOV     R7,A
006C 900000      E     MOV     DPTR,#dev_pwm_limit
006F E0                MOVX    A,@DPTR
0070 FE                MOV     R6,A
0071 EE                MOV     A,R6
0072 D3                SETB    C
0073 9F                SUBB    A,R7
0074 400A              JC      ?C0261
                                           ; SOURCE LINE # 1519
0076 900000      E     MOV     DPTR,#dev_pwm_sat
0079 E0                MOVX    A,@DPTR
007A FF                MOV     R7,A
007B 900000      E     MOV     DPTR,#dev_pwm_limit
007E EF                MOV     A,R7
007F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1520
                                           ; SOURCE LINE # 1521
0080         ?C0261:
0080 22                RET     
             ; FUNCTION overcurrent_control (END)

             ; FUNCTION pwm_limit_search (BEGIN)
                                           ; SOURCE LINE # 1527
                                           ; SOURCE LINE # 1530
0000 750063      R     MOV     max_tension,#063H
0003 75009C      R     MOV     max_tension+01H,#09CH
                                           ; SOURCE LINE # 1531
0006 75002C      R     MOV     min_tension,#02CH
0009 7500EC      R     MOV     min_tension+01H,#0ECH
                                           ; SOURCE LINE # 1533
000C AE00        R     MOV     R6,max_tension
000E AF00        R     MOV     R7,max_tension+01H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 119 

0010 E4                CLR     A
0011 FC                MOV     R4,A
0012 FD                MOV     R5,A
0013 900000      E     MOV     DPTR,#dev_tension
0016 120000      E     LCALL   ?C?LLDXDATA0
0019 D3                SETB    C
001A 120000      E     LCALL   ?C?SLCMP
001D 4006              JC      ?C0262
                                           ; SOURCE LINE # 1534
001F 900000      E     MOV     DPTR,#dev_pwm_sat
0022 E4                CLR     A
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1535
0024 22                RET     
0025         ?C0262:
0025 AE00        R     MOV     R6,min_tension
0027 AF00        R     MOV     R7,min_tension+01H
0029 E4                CLR     A
002A FC                MOV     R4,A
002B FD                MOV     R5,A
002C 900000      E     MOV     DPTR,#dev_tension
002F 120000      E     LCALL   ?C?LLDXDATA0
0032 C3                CLR     C
0033 120000      E     LCALL   ?C?SLCMP
0036 5007              JNC     ?C0264
                                           ; SOURCE LINE # 1536
0038 900000      E     MOV     DPTR,#dev_pwm_sat
003B 7464              MOV     A,#064H
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1537
003E 22                RET     
003F         ?C0264:
                                           ; SOURCE LINE # 1538
003F AE00        R     MOV     R6,min_tension
0041 AF00        R     MOV     R7,min_tension+01H
0043 AB07              MOV     R3,AR7
0045 AA06              MOV     R2,AR6
0047 E4                CLR     A
0048 F9                MOV     R1,A
0049 F8                MOV     R0,A
004A 900000      E     MOV     DPTR,#dev_tension
004D 120000      E     LCALL   ?C?LLDXDATA
0050 120000      E     LCALL   ?C?LSUB
0053 7809              MOV     R0,#09H
0055 120000      E     LCALL   ?C?SLSHR
0058 8F00        R     MOV     index,R7
                                           ; SOURCE LINE # 1539
005A AF00        R     MOV     R7,index
005C 7400        R     MOV     A,#LOW pwm_preload_values
005E 2F                ADD     A,R7
005F F582              MOV     DPL,A
0061 E4                CLR     A
0062 3400        R     ADDC    A,#HIGH pwm_preload_values
0064 F583              MOV     DPH,A
0066 E0                MOVX    A,@DPTR
0067 FF                MOV     R7,A
0068 900000      E     MOV     DPTR,#dev_pwm_sat
006B EF                MOV     A,R7
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1540
                                           ; SOURCE LINE # 1541
006D         ?C0266:
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 120 

006D 22                RET     
             ; FUNCTION pwm_limit_search (END)

             ; FUNCTION cycles_counter_update (BEGIN)
                                           ; SOURCE LINE # 1548
                                           ; SOURCE LINE # 1559
0000 900000      E     MOV     DPTR,#g_meas
0003 120000      E     LCALL   ?C?LLDXDATA
0006 900000      E     MOV     DPTR,#g_mem+035H
0009 E0                MOVX    A,@DPTR
000A F9                MOV     R1,A
000B A801              MOV     R0,AR1
000D 120000      E     LCALL   ?C?SLSHR
0010 900000      R     MOV     DPTR,#curr_pos
0013 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1562
0016 900000      R     MOV     DPTR,#pos_cycle_status
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B EF                MOV     A,R7
001C 120000      E     LCALL   ?C?CCASE
001F 0000        R     DW      ?C0268
0021 00                DB      00H
0022 0000        R     DW      ?C0270
0024 01                DB      01H
0025 0000        R     DW      ?C0272
0027 02                DB      02H
0028 0000              DW      00H
002A 0000        R     DW      ?C0267
                                           ; SOURCE LINE # 1563
002C         ?C0268:
                                           ; SOURCE LINE # 1564
002C 900000      E     MOV     DPTR,#pwm_sign
002F E0                MOVX    A,@DPTR
0030 FF                MOV     R7,A
0031 EF                MOV     A,R7
0032 6401              XRL     A,#01H
0034 6003              JZ      $ + 5H
0036 020000      R     LJMP    ?C0267
                                           ; SOURCE LINE # 1565
0039 900000      R     MOV     DPTR,#curr_pos
003C 120000      E     LCALL   ?C?LLDXDATA
003F 900000      R     MOV     DPTR,#thr_pos
0042 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1566
0045 900000      E     MOV     DPTR,#g_mem+0F4H
0048 120000      E     LCALL   ?C?LLDXDATA
004B C004              PUSH    AR4
004D C005              PUSH    AR5
004F C006              PUSH    AR6
0051 C007              PUSH    AR7
0053 900000      R     MOV     DPTR,#thr_pos
0056 120000      E     LCALL   ?C?LLDXDATA
0059 AB07              MOV     R3,AR7
005B AA06              MOV     R2,AR6
005D 900000      R     MOV     DPTR,#max_pos
0060 120000      E     LCALL   ?C?LLDXDATA
0063 C3                CLR     C
0064 EF                MOV     A,R7
0065 9B                SUBB    A,R3
0066 FF                MOV     R7,A
0067 EE                MOV     A,R6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 121 

0068 9A                SUBB    A,R2
0069 FE                MOV     R6,A
006A 120000      E     LCALL   _abs
006D AB07              MOV     R3,AR7
006F AA06              MOV     R2,AR6
0071 EA                MOV     A,R2
0072 33                RLC     A
0073 95E0              SUBB    A,ACC
0075 F9                MOV     R1,A
0076 F8                MOV     R0,A
0077 D007              POP     AR7
0079 D006              POP     AR6
007B D005              POP     AR5
007D D004              POP     AR4
007F 120000      E     LCALL   ?C?LADD
0082 900000      E     MOV     DPTR,#g_mem+0F4H
0085 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1567
0088 900000      R     MOV     DPTR,#pos_cycle_status
008B 7401              MOV     A,#01H
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1568
                                           ; SOURCE LINE # 1569
008E 020000      R     LJMP    ?C0267
                                           ; SOURCE LINE # 1570
0091         ?C0270:
                                           ; SOURCE LINE # 1571
0091 900000      E     MOV     DPTR,#pwm_sign
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 64FF              XRL     A,#0FFH
0099 6003              JZ      $ + 5H
009B 020000      R     LJMP    ?C0267
                                           ; SOURCE LINE # 1572
009E 900000      R     MOV     DPTR,#curr_pos
00A1 120000      E     LCALL   ?C?LLDXDATA
00A4 900000      R     MOV     DPTR,#max_pos
00A7 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1573
00AA 900000      E     MOV     DPTR,#g_mem+0F4H
00AD 120000      E     LCALL   ?C?LLDXDATA
00B0 C004              PUSH    AR4
00B2 C005              PUSH    AR5
00B4 C006              PUSH    AR6
00B6 C007              PUSH    AR7
00B8 900000      R     MOV     DPTR,#thr_pos
00BB 120000      E     LCALL   ?C?LLDXDATA
00BE AB07              MOV     R3,AR7
00C0 AA06              MOV     R2,AR6
00C2 900000      R     MOV     DPTR,#max_pos
00C5 120000      E     LCALL   ?C?LLDXDATA
00C8 C3                CLR     C
00C9 EF                MOV     A,R7
00CA 9B                SUBB    A,R3
00CB FF                MOV     R7,A
00CC EE                MOV     A,R6
00CD 9A                SUBB    A,R2
00CE FE                MOV     R6,A
00CF 120000      E     LCALL   _abs
00D2 AB07              MOV     R3,AR7
00D4 AA06              MOV     R2,AR6
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 122 

00D6 EA                MOV     A,R2
00D7 33                RLC     A
00D8 95E0              SUBB    A,ACC
00DA F9                MOV     R1,A
00DB F8                MOV     R0,A
00DC D007              POP     AR7
00DE D006              POP     AR6
00E0 D005              POP     AR5
00E2 D004              POP     AR4
00E4 120000      E     LCALL   ?C?LADD
00E7 900000      E     MOV     DPTR,#g_mem+0F4H
00EA 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1574
00ED 900000      R     MOV     DPTR,#pos_cycle_status
00F0 7402              MOV     A,#02H
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1575
                                           ; SOURCE LINE # 1576
00F3 020000      R     LJMP    ?C0267
                                           ; SOURCE LINE # 1577
00F6         ?C0272:
                                           ; SOURCE LINE # 1578
00F6 900000      R     MOV     DPTR,#thr_pos
00F9 120000      E     LCALL   ?C?LLDXDATA
00FC AB07              MOV     R3,AR7
00FE AA06              MOV     R2,AR6
0100 900000      R     MOV     DPTR,#max_pos
0103 120000      E     LCALL   ?C?LLDXDATA
0106 C3                CLR     C
0107 EF                MOV     A,R7
0108 9B                SUBB    A,R3
0109 FF                MOV     R7,A
010A EE                MOV     A,R6
010B 9A                SUBB    A,R2
010C FE                MOV     R6,A
010D 120000      E     LCALL   _abs
0110 EE                MOV     A,R6
0111 33                RLC     A
0112 95E0              SUBB    A,ACC
0114 FD                MOV     R5,A
0115 FC                MOV     R4,A
0116 900000      R     MOV     DPTR,#bin_threshold
0119 120000      E     LCALL   ?C?LLDXDATA0
011C C3                CLR     C
011D 120000      E     LCALL   ?C?SLCMP
0120 4003              JC      $ + 5H
0122 020000      R     LJMP    ?C0273
                                           ; SOURCE LINE # 1580
0125 900000      E     MOV     DPTR,#g_mem+059H
0128 120000      E     LCALL   ?C?LLDXDATA
012B 900000      E     MOV     DPTR,#g_mem+035H
012E E0                MOVX    A,@DPTR
012F F9                MOV     R1,A
0130 A801              MOV     R0,AR1
0132 120000      E     LCALL   ?C?SLSHR
0135 7B0A              MOV     R3,#0AH
0137 7A00              MOV     R2,#00H
0139 7900              MOV     R1,#00H
013B 7800              MOV     R0,#00H
013D 120000      E     LCALL   ?C?SLDIV
0140 900000      R     MOV     DPTR,#step
0143 120000      E     LCALL   ?C?LSTXDATA
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 123 

                                           ; SOURCE LINE # 1581
0146 900000      R     MOV     DPTR,#step
0149 120000      E     LCALL   ?C?LLDXDATA0
014C 900000      R     MOV     DPTR,#thr_pos
014F 120000      E     LCALL   ?C?LLDXDATA
0152 120000      E     LCALL   ?C?SLDIV
0155 900000      R     MOV     DPTR,#bin_st
0158 EF                MOV     A,R7
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1582
015A 900000      R     MOV     DPTR,#step
015D 120000      E     LCALL   ?C?LLDXDATA0
0160 900000      R     MOV     DPTR,#max_pos
0163 120000      E     LCALL   ?C?LLDXDATA
0166 120000      E     LCALL   ?C?SLDIV
0169 900000      R     MOV     DPTR,#bin_max
016C EF                MOV     A,R7
016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1583
016E 900000      R     MOV     DPTR,#bin_st
0171 E0                MOVX    A,@DPTR
0172 FF                MOV     R7,A
0173 900000      R     MOV     DPTR,#i
0176 EF                MOV     A,R7
0177 F0                MOVX    @DPTR,A
0178         ?C0274:
0178 900000      R     MOV     DPTR,#bin_max
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D 900000      R     MOV     DPTR,#i
0180 E0                MOVX    A,@DPTR
0181 FE                MOV     R6,A
0182 EE                MOV     A,R6
0183 D3                SETB    C
0184 9F                SUBB    A,R7
0185 5039              JNC     ?C0275
                                           ; SOURCE LINE # 1585
0187 900000      R     MOV     DPTR,#i
018A E0                MOVX    A,@DPTR
018B FF                MOV     R7,A
018C EF                MOV     A,R7
018D 25E0              ADD     A,ACC
018F 25E0              ADD     A,ACC
0191 2400        E     ADD     A,#LOW g_mem+0B8H
0193 F582              MOV     DPL,A
0195 E4                CLR     A
0196 3400        E     ADDC    A,#HIGH g_mem+0B8H
0198 F583              MOV     DPH,A
019A C083              PUSH    DPH
019C C082              PUSH    DPL
019E 120000      E     LCALL   ?C?LLDXDATA
01A1 EF                MOV     A,R7
01A2 2401              ADD     A,#01H
01A4 FF                MOV     R7,A
01A5 EE                MOV     A,R6
01A6 3400              ADDC    A,#00H
01A8 FE                MOV     R6,A
01A9 ED                MOV     A,R5
01AA 3400              ADDC    A,#00H
01AC FD                MOV     R5,A
01AD EC                MOV     A,R4
01AE 3400              ADDC    A,#00H
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 124 

01B0 FC                MOV     R4,A
01B1 D082              POP     DPL
01B3 D083              POP     DPH
01B5 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1586
01B8 900000      R     MOV     DPTR,#i
01BB E0                MOVX    A,@DPTR
01BC 04                INC     A
01BD F0                MOVX    @DPTR,A
01BE 80B8              SJMP    ?C0274
01C0         ?C0275:
                                           ; SOURCE LINE # 1589
01C0 900000      E     MOV     DPTR,#g_mem+069H
01C3 E0                MOVX    A,@DPTR
01C4 FE                MOV     R6,A
01C5 A3                INC     DPTR
01C6 E0                MOVX    A,@DPTR
01C7 FF                MOV     R7,A
01C8 EE                MOV     A,R6
01C9 33                RLC     A
01CA 95E0              SUBB    A,ACC
01CC FD                MOV     R5,A
01CD FC                MOV     R4,A
01CE 7B04              MOV     R3,#04H
01D0 7A00              MOV     R2,#00H
01D2 7900              MOV     R1,#00H
01D4 7800              MOV     R0,#00H
01D6 120000      E     LCALL   ?C?SLDIV
01D9 900000      R     MOV     DPTR,#step
01DC 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1590
01DF 900000      E     MOV     DPTR,#g_mem+069H
01E2 E0                MOVX    A,@DPTR
01E3 FE                MOV     R6,A
01E4 A3                INC     DPTR
01E5 E0                MOVX    A,@DPTR
01E6 FF                MOV     R7,A
01E7 EE                MOV     A,R6
01E8 33                RLC     A
01E9 95E0              SUBB    A,ACC
01EB FD                MOV     R5,A
01EC FC                MOV     R4,A
01ED 900000      E     MOV     DPTR,#g_meas+0CH
01F0 120000      E     LCALL   ?C?LLDXDATA0
01F3 D3                SETB    C
01F4 120000      E     LCALL   ?C?SLCMP
01F7 401E              JC      ?C0277
                                           ; SOURCE LINE # 1591
01F9 900000      E     MOV     DPTR,#g_mem+0ECH
01FC 120000      E     LCALL   ?C?LLDXDATA
01FF EF                MOV     A,R7
0200 2401              ADD     A,#01H
0202 FF                MOV     R7,A
0203 EE                MOV     A,R6
0204 3400              ADDC    A,#00H
0206 FE                MOV     R6,A
0207 ED                MOV     A,R5
0208 3400              ADDC    A,#00H
020A FD                MOV     R5,A
020B EC                MOV     A,R4
020C 3400              ADDC    A,#00H
020E FC                MOV     R4,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 125 

020F 900000      E     MOV     DPTR,#g_mem+0ECH
0212 120000      E     LCALL   ?C?LSTXDATA
0215 803B              SJMP    ?C0273
0217         ?C0277:
                                           ; SOURCE LINE # 1593
0217 900000      R     MOV     DPTR,#step
021A 120000      E     LCALL   ?C?LLDXDATA0
021D 900000      E     MOV     DPTR,#g_meas+0CH
0220 120000      E     LCALL   ?C?LLDXDATA
0223 120000      E     LCALL   ?C?SLDIV
0226 EF                MOV     A,R7
0227 25E0              ADD     A,ACC
0229 25E0              ADD     A,ACC
022B 2400        E     ADD     A,#LOW g_mem+0E0H
022D F582              MOV     DPL,A
022F E4                CLR     A
0230 3400        E     ADDC    A,#HIGH g_mem+0E0H
0232 F583              MOV     DPH,A
0234 C083              PUSH    DPH
0236 C082              PUSH    DPL
0238 120000      E     LCALL   ?C?LLDXDATA
023B EF                MOV     A,R7
023C 2401              ADD     A,#01H
023E FF                MOV     R7,A
023F EE                MOV     A,R6
0240 3400              ADDC    A,#00H
0242 FE                MOV     R6,A
0243 ED                MOV     A,R5
0244 3400              ADDC    A,#00H
0246 FD                MOV     R5,A
0247 EC                MOV     A,R4
0248 3400              ADDC    A,#00H
024A FC                MOV     R4,A
024B D082              POP     DPL
024D D083              POP     DPH
024F 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1594
0252         ?C0273:
                                           ; SOURCE LINE # 1595
0252 900000      R     MOV     DPTR,#pos_cycle_status
0255 E4                CLR     A
0256 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1596
                                           ; SOURCE LINE # 1597
0257         ?C0267:
                                           ; SOURCE LINE # 1600
0257 900000      R     MOV     DPTR,#i
025A E4                CLR     A
025B F0                MOVX    @DPTR,A
025C         ?C0279:
025C 900000      R     MOV     DPTR,#i
025F E0                MOVX    A,@DPTR
0260 FF                MOV     R7,A
0261 EF                MOV     A,R7
0262 C3                CLR     C
0263 9402              SUBB    A,#02H
0265 4003              JC      $ + 5H
0267 020000      R     LJMP    ?C0280
026A E500        E     MOV     A,emg_1_status
026C 6003              JZ      $ + 5H
026E 020000      R     LJMP    ?C0280
0271 E500        E     MOV     A,emg_2_status
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 126 

0273 6003              JZ      $ + 5H
0275 020000      R     LJMP    ?C0280
                                           ; SOURCE LINE # 1601
0278 900000      R     MOV     DPTR,#i
027B E0                MOVX    A,@DPTR
027C FF                MOV     R7,A
027D 7400        R     MOV     A,#LOW emg_cycle_status
027F 2F                ADD     A,R7
0280 F582              MOV     DPL,A
0282 E4                CLR     A
0283 3400        R     ADDC    A,#HIGH emg_cycle_status
0285 F583              MOV     DPH,A
0287 E0                MOVX    A,@DPTR
0288 FF                MOV     R7,A
0289 EF                MOV     A,R7
028A 120000      E     LCALL   ?C?CCASE
028D 0000        R     DW      ?C0283
028F 00                DB      00H
0290 0000        R     DW      ?C0285
0292 01                DB      01H
0293 0000        R     DW      ?C0287
0295 02                DB      02H
0296 0000              DW      00H
0298 0000        R     DW      ?C0281
                                           ; SOURCE LINE # 1602
029A         ?C0283:
                                           ; SOURCE LINE # 1603
029A 900000      R     MOV     DPTR,#i
029D E0                MOVX    A,@DPTR
029E FF                MOV     R7,A
029F EF                MOV     A,R7
02A0 25E0              ADD     A,ACC
02A2 2400        E     ADD     A,#LOW g_mem+06BH
02A4 F582              MOV     DPL,A
02A6 E4                CLR     A
02A7 3400        E     ADDC    A,#HIGH g_mem+06BH
02A9 F583              MOV     DPH,A
02AB E0                MOVX    A,@DPTR
02AC FE                MOV     R6,A
02AD A3                INC     DPTR
02AE E0                MOVX    A,@DPTR
02AF FF                MOV     R7,A
02B0 E4                CLR     A
02B1 FC                MOV     R4,A
02B2 FD                MOV     R5,A
02B3 900000      R     MOV     DPTR,#i
02B6 E0                MOVX    A,@DPTR
02B7 FB                MOV     R3,A
02B8 EB                MOV     A,R3
02B9 25E0              ADD     A,ACC
02BB 25E0              ADD     A,ACC
02BD 2400        E     ADD     A,#LOW g_meas+017H
02BF F582              MOV     DPL,A
02C1 E4                CLR     A
02C2 3400        E     ADDC    A,#HIGH g_meas+017H
02C4 F583              MOV     DPH,A
02C6 120000      E     LCALL   ?C?LLDXDATA0
02C9 D3                SETB    C
02CA 120000      E     LCALL   ?C?SLCMP
02CD 5003              JNC     $ + 5H
02CF 020000      R     LJMP    ?C0281
                                           ; SOURCE LINE # 1604
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 127 

02D2 900000      R     MOV     DPTR,#i
02D5 E0                MOVX    A,@DPTR
02D6 FF                MOV     R7,A
02D7 7400        R     MOV     A,#LOW emg_cycle_status
02D9 2F                ADD     A,R7
02DA F582              MOV     DPL,A
02DC E4                CLR     A
02DD 3400        R     ADDC    A,#HIGH emg_cycle_status
02DF F583              MOV     DPH,A
02E1 7401              MOV     A,#01H
02E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1605
                                           ; SOURCE LINE # 1606
02E4 807A              SJMP    ?C0281
                                           ; SOURCE LINE # 1607
02E6         ?C0285:
                                           ; SOURCE LINE # 1608
02E6 900000      R     MOV     DPTR,#i
02E9 E0                MOVX    A,@DPTR
02EA FF                MOV     R7,A
02EB EF                MOV     A,R7
02EC 25E0              ADD     A,ACC
02EE 25E0              ADD     A,ACC
02F0 2400        E     ADD     A,#LOW g_meas+017H
02F2 F582              MOV     DPL,A
02F4 E4                CLR     A
02F5 3400        E     ADDC    A,#HIGH g_meas+017H
02F7 F583              MOV     DPH,A
02F9 120000      E     LCALL   ?C?LLDXDATA
02FC 7B0A              MOV     R3,#0AH
02FE 7A00              MOV     R2,#00H
0300 7900              MOV     R1,#00H
0302 7800              MOV     R0,#00H
0304 D3                SETB    C
0305 120000      E     LCALL   ?C?SLCMP
0308 4056              JC      ?C0281
                                           ; SOURCE LINE # 1609
030A 900000      R     MOV     DPTR,#i
030D E0                MOVX    A,@DPTR
030E FF                MOV     R7,A
030F 7400        R     MOV     A,#LOW emg_cycle_status
0311 2F                ADD     A,R7
0312 F582              MOV     DPL,A
0314 E4                CLR     A
0315 3400        R     ADDC    A,#HIGH emg_cycle_status
0317 F583              MOV     DPH,A
0319 7402              MOV     A,#02H
031B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1610
                                           ; SOURCE LINE # 1611
031C 8042              SJMP    ?C0281
                                           ; SOURCE LINE # 1612
031E         ?C0287:
                                           ; SOURCE LINE # 1613
031E 900000      R     MOV     DPTR,#i
0321 E0                MOVX    A,@DPTR
0322 FF                MOV     R7,A
0323 EF                MOV     A,R7
0324 25E0              ADD     A,ACC
0326 25E0              ADD     A,ACC
0328 2400        E     ADD     A,#LOW g_mem+0B0H
032A F582              MOV     DPL,A
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 128 

032C E4                CLR     A
032D 3400        E     ADDC    A,#HIGH g_mem+0B0H
032F F583              MOV     DPH,A
0331 C083              PUSH    DPH
0333 C082              PUSH    DPL
0335 120000      E     LCALL   ?C?LLDXDATA
0338 EF                MOV     A,R7
0339 2401              ADD     A,#01H
033B FF                MOV     R7,A
033C EE                MOV     A,R6
033D 3400              ADDC    A,#00H
033F FE                MOV     R6,A
0340 ED                MOV     A,R5
0341 3400              ADDC    A,#00H
0343 FD                MOV     R5,A
0344 EC                MOV     A,R4
0345 3400              ADDC    A,#00H
0347 FC                MOV     R4,A
0348 D082              POP     DPL
034A D083              POP     DPH
034C 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1614
034F 900000      R     MOV     DPTR,#i
0352 E0                MOVX    A,@DPTR
0353 FF                MOV     R7,A
0354 7400        R     MOV     A,#LOW emg_cycle_status
0356 2F                ADD     A,R7
0357 F582              MOV     DPL,A
0359 E4                CLR     A
035A 3400        R     ADDC    A,#HIGH emg_cycle_status
035C F583              MOV     DPH,A
035E E4                CLR     A
035F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1615
                                           ; SOURCE LINE # 1616
                                           ; SOURCE LINE # 1617
0360         ?C0281:
0360 900000      R     MOV     DPTR,#i
0363 E0                MOVX    A,@DPTR
0364 04                INC     A
0365 F0                MOVX    @DPTR,A
0366 020000      R     LJMP    ?C0279
0369         ?C0280:
                                           ; SOURCE LINE # 1620
0369 900000      R     MOV     DPTR,#rest_cycle_status
036C E0                MOVX    A,@DPTR
036D FF                MOV     R7,A
036E EF                MOV     A,R7
036F 120000      E     LCALL   ?C?CCASE
0372 0000        R     DW      ?C0289
0374 00                DB      00H
0375 0000        R     DW      ?C0291
0377 01                DB      01H
0378 0000        R     DW      ?C0294
037A 02                DB      02H
037B 0000              DW      00H
037D 0000        R     DW      ?C0288
                                           ; SOURCE LINE # 1621
037F         ?C0289:
                                           ; SOURCE LINE # 1622
037F 900000      E     MOV     DPTR,#rest_enabled
0382 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 129 

0383 FF                MOV     R7,A
0384 EF                MOV     A,R7
0385 7003              JNZ     $ + 5H
0387 020000      R     LJMP    ?C0288
                                           ; SOURCE LINE # 1623
038A 120000      E     LCALL   CYCLES_TIMER_ReadCounter
038D E4                CLR     A
038E FC                MOV     R4,A
038F FD                MOV     R5,A
0390 900000      R     MOV     DPTR,#timer_value_s
0393 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1624
0396 900000      R     MOV     DPTR,#rest_cycle_status
0399 7401              MOV     A,#01H
039B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1625
                                           ; SOURCE LINE # 1626
039C 020000      R     LJMP    ?C0288
                                           ; SOURCE LINE # 1627
039F         ?C0291:
                                           ; SOURCE LINE # 1628
039F 900000      E     MOV     DPTR,#rest_enabled
03A2 E0                MOVX    A,@DPTR
03A3 FF                MOV     R7,A
03A4 EF                MOV     A,R7
03A5 6003              JZ      $ + 5H
03A7 020000      R     LJMP    ?C0288
                                           ; SOURCE LINE # 1629
03AA 120000      E     LCALL   CYCLES_TIMER_ReadCounter
03AD E4                CLR     A
03AE FC                MOV     R4,A
03AF FD                MOV     R5,A
03B0 900000      R     MOV     DPTR,#timer_value_e
03B3 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1630
03B6 900000      R     MOV     DPTR,#timer_value_e
03B9 120000      E     LCALL   ?C?LLDXDATA
03BC 900000      R     MOV     DPTR,#timer_value_s
03BF 120000      E     LCALL   ?C?LLDXDATA0
03C2 C3                CLR     C
03C3 120000      E     LCALL   ?C?ULCMP
03C6 501C              JNC     ?C0293
                                           ; SOURCE LINE # 1631
03C8 900000      R     MOV     DPTR,#timer_value_s
03CB 120000      E     LCALL   ?C?LLDXDATA
03CE EF                MOV     A,R7
03CF 24B0              ADD     A,#0B0H
03D1 FF                MOV     R7,A
03D2 EE                MOV     A,R6
03D3 3404              ADDC    A,#04H
03D5 FE                MOV     R6,A
03D6 ED                MOV     A,R5
03D7 3400              ADDC    A,#00H
03D9 FD                MOV     R5,A
03DA EC                MOV     A,R4
03DB 3400              ADDC    A,#00H
03DD FC                MOV     R4,A
03DE 900000      R     MOV     DPTR,#timer_value_s
03E1 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1632
03E4         ?C0293:
                                           ; SOURCE LINE # 1633
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 130 

03E4 900000      R     MOV     DPTR,#rest_cycle_status
03E7 7402              MOV     A,#02H
03E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1634
                                           ; SOURCE LINE # 1635
03EA 8062              SJMP    ?C0288
                                           ; SOURCE LINE # 1636
03EC         ?C0294:
                                           ; SOURCE LINE # 1637
03EC 900000      E     MOV     DPTR,#g_mem+0FCH
03EF 120000      E     LCALL   ?C?LLDXDATA
03F2 C004              PUSH    AR4
03F4 C005              PUSH    AR5
03F6 C006              PUSH    AR6
03F8 C007              PUSH    AR7
03FA 900000      R     MOV     DPTR,#timer_value_e
03FD 120000      E     LCALL   ?C?LLDXDATA0
0400 900000      R     MOV     DPTR,#timer_value_s
0403 120000      E     LCALL   ?C?LLDXDATA
0406 120000      E     LCALL   ?C?LSUB
0409 7B0A              MOV     R3,#0AH
040B 7A00              MOV     R2,#00H
040D 7900              MOV     R1,#00H
040F 7800              MOV     R0,#00H
0411 120000      E     LCALL   ?C?ULDIV
0414 A804              MOV     R0,AR4
0416 A905              MOV     R1,AR5
0418 AA06              MOV     R2,AR6
041A AB07              MOV     R3,AR7
041C D007              POP     AR7
041E D006              POP     AR6
0420 D005              POP     AR5
0422 D004              POP     AR4
0424 120000      E     LCALL   ?C?LADD
0427 900000      E     MOV     DPTR,#g_mem+0FCH
042A 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1638
042D 900000      E     MOV     DPTR,#g_mem+0F0H
0430 120000      E     LCALL   ?C?LLDXDATA
0433 EF                MOV     A,R7
0434 2401              ADD     A,#01H
0436 FF                MOV     R7,A
0437 EE                MOV     A,R6
0438 3400              ADDC    A,#00H
043A FE                MOV     R6,A
043B ED                MOV     A,R5
043C 3400              ADDC    A,#00H
043E FD                MOV     R5,A
043F EC                MOV     A,R4
0440 3400              ADDC    A,#00H
0442 FC                MOV     R4,A
0443 900000      E     MOV     DPTR,#g_mem+0F0H
0446 120000      E     LCALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1639
0449 900000      R     MOV     DPTR,#rest_cycle_status
044C E4                CLR     A
044D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1640
                                           ; SOURCE LINE # 1641
044E         ?C0288:
                                           ; SOURCE LINE # 1644
044E 120000      R     LCALL   save_cycles_eeprom
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 131 

                                           ; SOURCE LINE # 1645
0451 22                RET     
             ; FUNCTION cycles_counter_update (END)

             ; FUNCTION save_cycles_eeprom (BEGIN)
                                           ; SOURCE LINE # 1651
                                           ; SOURCE LINE # 1655
0000 900000      R     MOV     DPTR,#row_start
0003 740B              MOV     A,#0BH
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1656
0006 7B01              MOV     R3,#01H
0008 7A00        E     MOV     R2,#HIGH g_mem+0B0H
000A 7900        E     MOV     R1,#LOW g_mem+0B0H
000C 900000      R     MOV     DPTR,#addr_start
000F 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 1657
0012 7B01              MOV     R3,#01H
0014 7A00        E     MOV     R2,#HIGH c_mem+0B0H
0016 7900        E     MOV     R1,#LOW c_mem+0B0H
0018 900000      R     MOV     DPTR,#addr_start_c
001B 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 1658
001E 900000      R     MOV     DPTR,#row_start
0021 E0                MOVX    A,@DPTR
0022 FF                MOV     R7,A
0023 EF                MOV     A,R7
0024 2404              ADD     A,#04H
0026 FF                MOV     R7,A
0027 900000      R     MOV     DPTR,#row_end
002A EF                MOV     A,R7
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1662
002C E500        E     MOV     A,cycles_status
002E 120000      E     LCALL   ?C?CCASE
0031 0000        R     DW      ?C0297
0033 00                DB      00H
0034 0000        R     DW      ?C0298
0036 01                DB      01H
0037 0000        R     DW      ?C0301
0039 02                DB      02H
003A 0000        R     DW      ?C0305
003C 03                DB      03H
003D 0000        R     DW      ?C0307
003F 04                DB      04H
0040 0000              DW      00H
0042 0000        R     DW      ?C0307
                                           ; SOURCE LINE # 1663
0044         ?C0297:
                                           ; SOURCE LINE # 1665
0044 900000      R     MOV     DPTR,#addr_start
0047 120000      E     LCALL   ?C?PLDXDATA
004A C003              PUSH    AR3
004C C002              PUSH    AR2
004E C001              PUSH    AR1
0050 900000      R     MOV     DPTR,#addr_start_c
0053 120000      E     LCALL   ?C?PLDXDATA
0056 A801              MOV     R0,AR1
0058 AC02              MOV     R4,AR2
005A AD03              MOV     R5,AR3
005C D001              POP     AR1
005E D002              POP     AR2
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 132 

0060 D003              POP     AR3
0062 7E00              MOV     R6,#00H
0064 7F50              MOV     R7,#050H
0066 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 1666
0069 900000      R     MOV     DPTR,#addr_start
006C 120000      E     LCALL   ?C?PLDXDATA
006F 900000      R     MOV     DPTR,#m_addr
0072 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 1667
0075 900000      R     MOV     DPTR,#row_start
0078 E0                MOVX    A,@DPTR
0079 FF                MOV     R7,A
007A 900000      R     MOV     DPTR,#row_number
007D EF                MOV     A,R7
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1668
007F 750001      E     MOV     cycles_status,#01H
                                           ; SOURCE LINE # 1669
0082 22                RET     
                                           ; SOURCE LINE # 1671
0083         ?C0298:
                                           ; SOURCE LINE # 1672
0083 120000      E     LCALL   EEPROM_UpdateTemperature
                                           ; SOURCE LINE # 1673
0086 900000      R     MOV     DPTR,#m_addr
0089 120000      E     LCALL   ?C?PLDXDATA
008C 900000      R     MOV     DPTR,#row_number
008F E0                MOVX    A,@DPTR
0090 FD                MOV     R5,A
0091 120000      E     LCALL   _EEPROM_StartWrite
0094 900000      R     MOV     DPTR,#status
0097 EF                MOV     A,R7
0098 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1674
0099 900000      R     MOV     DPTR,#status
009C E0                MOVX    A,@DPTR
009D FF                MOV     R7,A
009E EF                MOV     A,R7
009F 6407              XRL     A,#07H
00A1 6008              JZ      ?C0300
00A3 900000      R     MOV     DPTR,#status
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 EF                MOV     A,R7
00A9 7067              JNZ     ?C0307
00AB         ?C0300:
                                           ; SOURCE LINE # 1675
00AB 750002      E     MOV     cycles_status,#02H
                                           ; SOURCE LINE # 1676
00AE C200        E     CLR     can_write
                                           ; SOURCE LINE # 1677
                                           ; SOURCE LINE # 1678
00B0 22                RET     
                                           ; SOURCE LINE # 1680
00B1         ?C0301:
                                           ; SOURCE LINE # 1681
00B1 120000      E     LCALL   EEPROM_Query
00B4 900000      R     MOV     DPTR,#status
00B7 EF                MOV     A,R7
00B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1682
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 133 

00B9 900000      R     MOV     DPTR,#status
00BC E0                MOVX    A,@DPTR
00BD FF                MOV     R7,A
00BE EF                MOV     A,R7
00BF 7051              JNZ     ?C0307
                                           ; SOURCE LINE # 1683
00C1 900000      R     MOV     DPTR,#row_end
00C4 E0                MOVX    A,@DPTR
00C5 FF                MOV     R7,A
00C6 900000      R     MOV     DPTR,#row_number
00C9 E0                MOVX    A,@DPTR
00CA FE                MOV     R6,A
00CB EE                MOV     A,R6
00CC C3                CLR     C
00CD 9F                SUBB    A,R7
00CE 5014              JNC     ?C0303
                                           ; SOURCE LINE # 1684
00D0 900000      R     MOV     DPTR,#m_addr+01H
00D3 E4                CLR     A
00D4 75F010            MOV     B,#010H
00D7 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 1685
00DA 900000      R     MOV     DPTR,#row_number
00DD E0                MOVX    A,@DPTR
00DE 04                INC     A
00DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1686
00E0 750001      E     MOV     cycles_status,#01H
                                           ; SOURCE LINE # 1687
00E3 22                RET     
00E4         ?C0303:
                                           ; SOURCE LINE # 1688
                                           ; SOURCE LINE # 1689
00E4 750003      E     MOV     cycles_status,#03H
                                           ; SOURCE LINE # 1690
                                           ; SOURCE LINE # 1691
                                           ; SOURCE LINE # 1692
00E7 22                RET     
                                           ; SOURCE LINE # 1694
00E8         ?C0305:
                                           ; SOURCE LINE # 1695
00E8 D200        E     SETB    can_write
                                           ; SOURCE LINE # 1696
00EA 750004      E     MOV     cycles_status,#04H
                                           ; SOURCE LINE # 1699
00ED 900000      R     MOV     DPTR,#addr_start_c
00F0 120000      E     LCALL   ?C?PLDXDATA
00F3 C003              PUSH    AR3
00F5 C002              PUSH    AR2
00F7 C001              PUSH    AR1
00F9 900000      R     MOV     DPTR,#addr_start
00FC 120000      E     LCALL   ?C?PLDXDATA
00FF A801              MOV     R0,AR1
0101 AC02              MOV     R4,AR2
0103 AD03              MOV     R5,AR3
0105 D001              POP     AR1
0107 D002              POP     AR2
0109 D003              POP     AR3
010B 7E00              MOV     R6,#00H
010D 7F50              MOV     R7,#050H
010F 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 1700
C51 COMPILER V9.51   INTERRUPTIONS                                                         02/09/2021 12:42:37 PAGE 134 

                                           ; SOURCE LINE # 1702
                                           ; SOURCE LINE # 1703
                                           ; SOURCE LINE # 1704
                                           ; SOURCE LINE # 1705
0112         ?C0307:
0112 22                RET     
             ; FUNCTION save_cycles_eeprom (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  10484    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =    271      42
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      92
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
